{"version":3,"sources":["webpack:///static/js/app.7ad19af0e15ccea12109.js","webpack:///./src/main.js","webpack:///App.vue","webpack:///./src/App.vue","webpack:///./src/App.vue?4f7e","webpack:///./semantic/dist/semantic.js"],"names":["webpackJsonp","module","exports","__webpack_require__","$","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","template","components","App","mounted","accordion","call","Object","defineProperty","value","name","Component","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","attrs","id","staticClass","href","_v","src","alt","title","width","height","jQuery","window","document","undefined","site","fn","parameters","returnedValue","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","settings","isPlainObject","extend","namespace","error","moduleNamespace","$document","$module","element","instance","data","initialize","instantiate","verbose","normalize","fix","console","requestAnimationFrame","debug","log","disable","group","groupEnd","groupCollapsed","markTimeline","consoleClear","clear","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","moduleExists","enabled","modules","enabledModules","each","index","push","disabled","disabledModules","change","setting","modifyExisting","$existingModules","length","newSettings","enable","cache","info","warn","destroy","removeData","internal","Function","prototype","bind","apply","message","currentTime","executionTime","previousTime","Element","Name","Arguments","Execution Time","clearTimeout","timer","display","totalTime","table","invoke","passedArguments","context","maxDepth","found","response","object","split","depth","camelCaseValue","charAt","toUpperCase","method","isFunction","isArray","siteNamespace","namespaceStub","config","sections","section","utilities","expr","createPseudo","dataName","elem","i","match","Math","self","form","$allModules","moduleSelector","selector","legacyParameters","$field","$group","$message","$prompt","$submit","$clear","$reset","validation","metadata","className","regExp","eventNamespace","formErrors","keyHeldDown","get","bindEvents","set","defaults","removeEvents","refresh","find","field","prompt","submit","reset","attachEvents","action","on","event","preventDefault","validate","blur","keyboardShortcuts","keydown","$input","type","prop","inputEvent","changeEvent","$element","parent","$fieldGroup","closest","defaultValue","isCheckbox","is","uiCheckbox","isDropdown","uiDropdown","isErrored","hasClass","removeClass","remove","dropdown","val","determine","isValid","allValid","fieldName","bracketedRule","rule","bracket","empty","blank","trim","valid","off","key","which","isInput","input","checkbox","isInDropdown","keyCode","enter","escape","ctrlKey","one","keyup","validationRules","revalidate","delay","ancillaryValue","ruleName","replace","createElement","oninput","onpropertychange","$label","ancillary","text","unspecifiedRule","requiresValue","search","requiresName","identifier","eq","unspecifiedField","ruleKeys","keys","isLegacySettings","rules","oldSyntax","fields","string","filter","$fields","add","fieldValidation","results","values","isRadio","radio","isMultiple","indexOf","isChecked","has","String","errors","children","promptExists","addClass","inline","templates","appendTo","html","transition","duration","fadeIn","fadeOut","success","isEmptyObject","$multipleField","fieldExists","ignoreCallbacks","onSuccess","stopImmediatePropagation","onFailure","showErrors","$dependsField","depends","fieldValid","fieldErrors","optional","onValid","concat","onInvalid","ruleFunction","noRule","silent","htmlID","decimal","email","flags","integer","number","url","checked","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","exactLength","maxLength","different","creditCard","minCount","exactCount","maxCount","label","pressed","test","RegExp","regExpParts","range","min","max","parts","intRegExp","toLowerCase","notValue","contains","containsExactly","requiredLength","matchingValue","toString","cardNumber","cardTypes","unionPay","cards","visa","pattern","amex","mastercard","discover","jcb","maestro","dinersClub","laser","visaElectron","validCard","requiredTypes","inArray","multiple","producedValue","sum","parseInt","observer","$title","$content","content","events","observeChanges","MutationObserver","mutations","observe","childList","subtree","trigger","click","toggle","$activeTitle","$activeContent","next","isAnimating","animating","isActive","active","isOpen","isOpening","collapsible","close","open","onOpening","exclusive","closeOthers","stop","animateChildren","animation","queue","useFailSafe","animate","opacity","resetOpacity","slideDown","easing","onOpen","onChange","isClosing","onClosing","slideUp","onClose","$openTitles","$nestedTitles","$openContents","$parentTitles","parents","prev","$activeAccordion","activeSelector","activeContent","closeNested","css","attr","removeAttr","easeOutQuad","x","t","b","c","d","initialLoad","shortcutPressed","create","tabbable","hide","setup","unbind","show","reference","indeterminate","check","uncheck","hidden","notFound","$target","target","link","focus","space","should","allowCheck","onChecked","allowUncheck","unchecked","onUnchecked","allowIndeterminate","onIndeterminate","determinate","allowDeterminate","onDeterminate","onEnable","onEnabled","onDisable","onDisabled","radios","otherRadios","forceCallbacks","beforeChecked","beforeUnchecked","beforeIndeterminate","beforeDeterminate","fireOnInit","can","readOnly","uncheckable","uncheckOthers","createEvent","inputElement","initEvent","dispatchEvent","prevAll","detach","insertAfter","$radios","dimmer","$dimmer","$dimmable","clickEvent","documentElement","preinitialize","dimmerName","variation","dimmable","page","pageDimmer","closable","addContent","dimmed","onShow","onHide","useCSS","onStart","onComplete","fadeTo","color","colorArray","isRGB","isRGBA","join","hasTouch","elementIndex","pageLostFocus","willRefocus","elementNamespace","selectObserver","menuObserver","$context","$text","$search","$sizer","sizer","$icon","icon","$combo","$menu","menu","$item","item","activated","itemActivated","internalChange","alreadySetup","layout","refreshData","save","restore","selected","disconnect","select","mutation","random","substr","userChoice","$userChoices","$userChoice","userValues","addition","variables","addResult","hideAdditions","userLabels","minCharacters","firstUnfiltered","selectedItem","unselectable","nextAvailable","$selected","$nextAvailable","nextAll","$prevAvailable","hasNext","api","apiSettings","urlData","returnedObject","insertBefore","searchSelection","allowTab","selectValues","selection","missingMultiple","prependTo","$firstModules","$lastModules","refreshSelectors","refreshItems","clearData","defaultText","placeholderText","remote","queryRemote","maxSelections","allResultsFiltered","allFiltered","intent","menuSearch","focusSearch","visible","hideOthers","hideMenu","hideSubMenus","$subMenus","touchEvents","keyboardEvents","inputEvents","mouseEvents","single","mouseenter","mousedown","mouseup","mouseleave","touch","searchTerm","afterFiltered","filterActive","onNoResults","allowAdditions","noResults","userSuggestion","focusedOnSearch","useLabels","useAPI","filterRemoteData","filterItems","noAPI","errorDuration","throttle","onError","serverError","remoteValues","escapedTerm","beginsWithRegExp","$choice","choiceText","fullTextSearch","exactSearch","fuzzySearch","choiceValue","filteredItem","filtered","term","termLength","queryLength","characterIndex","nextCharacterIndex","queryCharacter","charCodeAt","skipHandler","forceSelection","$currentlySelected","$activeItem","$selectedItem","hasSelected","showOnFocus","activeElement","activeLabel","$labels","$activeLabels","$nextActive","$prevActive","$range","nextUntil","prevUntil","shiftKey","toggleClass","onLabelSelect","activeLabels","toggleBehavior","bubbledLabelClick","bubbledIconClick","eventOnElement","stopPropagation","eventInModule","$addedNode","addedNodes","$removedNode","removedNodes","$changedNodes","isUserAddition","isMessage","$subMenu","$otherMenus","siblings","hasSubMenu","isBubbledEvent","itemTimer","skipRefocus","allowCategorySelection","userAddition","scrollPosition","selectAction","pressedKey","isShortcutKey","inObject","$activeLabel","labelIndex","labelCount","hasActiveLabel","hasMultipleActive","isFirstLabel","isLastLabel","isSearch","isFocusedOnSearch","isFocused","focused","caretAtStart","caretPosition","leftArrow","siblingLabel","end","last","rightArrow","first","deleteKey","backspace","$nextItem","isSubMenuItem","$visibleItems","addBack","$parentMenu","inVisibleMenu","hasSelectedItem","selectedIsSelectable","delimiterPressed","delimiter","isAdditionWithoutMenu","upArrow","selectOnKeydown","downArrow","pageUp","scrollPage","pageDown","selectedLetter","fromCharCode","inDocument","inModule","inVisibleDOM","body","notOnLabel","notInMenu","nothing","activate","hideAndClear","combo","searchWidth","ceil","selectionCount","count","upward","grep","uniqueArray","array","rangeLength","selectionStart","createRange","moveStart","isEmptyMultiselect","selectInput","read","remoteData","preserveHTML","clone","menuIcon","$option","placeholder","sortSelect","sort","a","activeItem","itemWithAdditions","$items","$userItems","hasUserItems","strict","shouldSearch","optionText","optionValue","labels","saveRemoteData","Storage","noStorage","sessionStorage","getItem","setItem","clearValue","direction","isWithinRange","$nextSelectedItem","$currentItem","menuHeight","outerHeight","currentScroll","scrollTop","itemHeight","itemsPerPage","floor","newScroll","$selectableItem","isSearchMultiple","searchValue","hasSearchValue","valueIsSet","glyphWidth","loading","partialSearch","forceScroll","hasActive","offset","itemOffset","menuOffset","menuScroll","abovePage","belowPage","edgeTolerance","position","top","searchText","letter","alreadySelectedLetter","firstLetter","$nextValue","onScreen","escapedValue","hasInput","currentValue","stringValue","allowReselection","extendSelect","exactly","selectedText","selectedValue","isFiltered","isUserValue","shouldAnimate","$next","onLabelCreate","hasOption","$addition","$existingItem","alreadyHasValue","hasUserSuggestion","hasCount","hasMaxCount","hasTerm","addedValue","addedText","newValue","onAdd","removedValue","removedText","$removedItem","arrayValue","onRemove","$removedLabel","userValue","onLabelRemove","items","$normalResults","hasValue","calculations","$currentMenu","canOpenDownward","verticallyScrollableContext","above","below","needle","property","selectMutation","selectChanged","overflowY","start","noTransition","multipleValues","isUnparsable","hasQuotes","quote","keepOnScreen","$selectedLabels","option","maybeText","maybeDisabled","choice","embed","sources","$placeholder","$embed","autoplay","createAndShow","createPlaceholder","generate","createEmbed","onCreate","changeEmbed","source","showPlaceholder","onReset","onDisplay","onPlaceholderDisplay","matchedSource","domain","encode","urlString","encodeURIComponent","iframe","noURL","extraParameters","onEmbed","video","hd","brandedUI","youtube","autohide","hq","jsapi","modestbranding","vimeo","byline","portrait","image","onPause","onPlay","onStop","modal","$window","$body","$allModals","$otherModals","$focusedElement","elementEventNamespace","$close","ignoreRepeatedEvents","refreshModals","defaultSettings","dimmerSettings","inverted","detachable","undetached","blurring","scrolling","cacheSizes","screenHeight","$toggle","approve","deny","resize","onApprove","onDeny","isInModal","isInDOM","clickaway","allowMultiple","hideAll","debounce","keyboard","escapeKey","showModal","hideModal","showDimmer","others","onVisible","autofocus","keepDimmed","hideDimmer","onHidden","$visibleModals","bodyStyle","modalHeight","pageHeight","contextHeight","fit","padding","modernBrowser","ActiveXObject","$inputs","$autofocus","marginTop","nag","dismiss","displayTime","storageMethod","storage","persist","storageOptions","options","expires","path","localStorage","cookie","noCookieStorage","storedValue","removeItem","removeCookie","bottom","fixed","speed","popup","$popup","$offsetParent","documentObserver","$scrollContext","scrollContext","$boundary","boundary","searchDepth","triedPositions","openedWithTouch","createID","exists","preserve","documentChanged","offsetParent","movePopup","reposition","removePopup","hideTimer","showTimer","touchstart","forEach","node","hideGracefully","inPopup","activator","hoverable","conditions","supports","svg","SVGGraphicsElement","popupOffset","screen","targetElement","isWindow","targetPosition","screenPosition","left","scroll","scrollLeft","outerWidth","margin","setFluidWidth","fluid","container","getComputedStyle","getPropertyValue","rtl","right","startEvent","scrollEvent","endEvent","distanceFromBoundary","parentNode","$node","is2D","isStatic","isHTML","positions","top left","top center","top right","bottom left","bottom center","bottom right","left center","right center","nextPosition","verticalPosition","horizontalPosition","opposite","adjacent","center","backup","adjacentsAvailable","oppositeTried","adjacentTried","prefer","distanceAway","positioning","maxSearchDepth","lastResort","invalidPosition","offstage","cannotPlace","attempts","onUnplaceable","fluidWidth","hideOnScroll","distance","jitter","addTouchEvents","badChars","shouldEscape","&","<",">","\"","'","`","escapedChar","chr","progress","transitionEnd","$bar","bar","$progress","transitionEvent","clearInterval","interval","state","nextValue","update","complete","percent","progressPoll","total","failSafeTimer","triggerHandler","failSafeDelay","increment","incrementValue","maxValue","startValue","randomValue","normalizedValue","decrement","decrementValue","templateText","displayPercent","updateInterval","numericValue","transitions","OTransition","MozTransition","WebkitTransition","style","barWidth","totalWidth","minDisplay","precision","round","toNextValue","warning","tooHigh","tooLow","transition-duration","limitValues","labelInterval","animationCallback","setInterval","framerate","barLabel","autoSuccess","ratio","showActivity","onLabelUpdate","onActive","onWarning","totalValue","percentComplete","nonNumeric","variable","rating","interactive","initialRating","maxRating","$activeIcon","currentRating","canClear","clearable","clearRating","ratingIndex","onRate","slent","noMaximum","$searchButton","searchButton","$results","$result","result","$category","category","disabledBubbled","resultsDismissed","searchFields","refreshResults","automatic","handleKeyboard","searchDelay","searchOnFocus","minimumCharacters","showResults","cancel","hideResults","hideDelay","resultsClicked","inMessage","$link","onSelect","location","newIndex","$activeResult","currentIndex","resultSize","hasActiveResult","buttonPressed","buttonFocus","parse","displayMessage","onAbort","lookupFields","firstResult","addResults","inject","local","onSearchQuery","searchHTML","generateResults","write","fuzzyResults","searchExp","matchRegExp","beginsWith","notResult","notFuzzyResult","searchFullText","merge","numCharacters","resultIndex","categoryIndex","letterID","resultID","$selectedResult","onResultsAdd","selectFirstResult","onResultsOpen","onResultsClose","isProperObject","isProperArray","maxResults","noTemplate","showNoResults","onResults","displayField","logging","noEndpoint","categories","categoryName","categoryResults","description","price","actionText","actionURL","standard","shape","$activeSide","$nextSide","$sides","sides","$side","side","nextIndex","defaultSide","repaint","offsetWidth","propertyObject","beforeChange","-webkit-transition-duration","-moz-transition-duration","-ms-transition-duration","-o-transition-duration","currentStageSize","stageSize","$clone","newWidth","newHeight","nextSide","flip","up","allowRepeats","transform","stage","down","over","behind","back","translate","y","z","box","origin","sidebar","$html","$head","$style","$sidebars","$fixed","$pusher","pusher","ios","delaySetup","clickedInPusher","clickedContext","containScroll","offsetHeight","scrollHeight","scrollLock","inlineCSS","isRTL","ie","refreshSidebars","omitted","wrapAll","movedSidebar","pushable","overlay","othersActive","pushPage","pullPage","othersAnimating","othersVisible","$otherSidebars","sidebarCount","callbackCount","dim","$transition","scrollToTop","dimPage","returnScroll","mobile","scrollBack","scrollTo","pushed","mobileTransition","defaultTransition","computer","isIE11","isIE","userAgent","navigator","isIOS","isMobileChrome","mobileChrome","isMobile","closed","vertical","sticky","$container","$scroll","determineContainer","determineContext","checkErrors","load","scrollchange","changed","invalidContext","elementSize","stick","onScroll","hardRefresh","onReposition","supported","lastScroll","elementScroll","standardScroll","fits","containerSize","size","scrollChange","currentElementScroll","abs","delta","maxScroll","possibleScroll","tagName","minimumSize","setProperty","initialPosition","bound","cachedPosition","pushing","bottomOffset","doesntFit","elementVisible","bindBottom","fixTop","setInitialPosition","fixBottom","bindTop","marginBottom","onTop","onUnstick","onBottom","unfix","onStick","resetCSS","tab","initializedHistory","$tabs","activeTabPath","parameterArray","historyEvent","firstLoad","recursionDepth","callbacks","determineTabs","auto","history","initializeHistory","$reference","ui","childrenOnly","tabs","onTabLoad","onTabInit","onLoad","legacyLoad","onFirstLoad","legacyInit","address","historyType","tabPath","changeTab","pathNames","initialPath","pageTitle","determineTitle","cacheKey","$tab","tabElement","isLoading","onRequest","pushStateAvailable","pushState","shouldIgnoreLoad","ignoreFirstLoad","remoteContent","pathArray","pathToArray","defaultPathArray","arrayToPath","$anchor","nextPathArray","nextPath","isLastTab","currentPathArray","currentPath","isTab","isLastIndex","filterArray","all","navigation","fetch","missingTab","scrollOffset","evaluateScripts","cacheType","append","innerHTML","fullTabPath","requestSettings","cachedContent","dataType","encodeParameters","alwaysRefresh","headers","X-Remote","loadOnce","request","existingRequest","$deactiveTabs","deactivate","$navigation","navElement","$deactiveNavigation","tabName","defaultPath","$defaultNav","defaultTab","recursion","$fullPathTab","$simplePathTab","tabPathArray","lastTab","keepArray","removeArray","keepValue","pathName","tabArray","noContent","loaded","promise","moduleArguments","animationEnd","animationEndEvent","displayType","forceRepaint","$parentElement","$nextElement","shouldReverse","animationDirection","reverse","outward","overrideSettings","support","occurring","queuing","noAnimation","animationCallbacks","completeCallback","failSafe","looping","inward","force","userStyle","overrideStyle","currentDisplay","emptyStyle","hasDirection","word","inlineDisplay","animationClass","animationName","animation-duration","transitionExists","currentAnimation","queueCallback","directionClass","currentDirection","parseFloat","shouldDetermine","animationStartEvent","animations","OAnimation","MozAnimation","WebkitAnimation","forced","elementClass","inAnimation","directionExists","stopAll","repeated","ajaxSettings","requestStartTime","$form","stateContext","triggerEvent","decode","json","JSON","e","cachedResponse","stringify","interruptRequests","abort","defaultData","serializeForm","formData","cancelled","beforeSend","templatedURL","mocked","base","beforeXHR","failure","resolveWith","throttleFirstRequest","send","missingURL","removeError","hideError","expectingJSON","mockResponse","mockResponseAsync","responseAsync","abortedRequest","xhr","readyState","validResponse","successTest","was","succesful","requiredVariables","optionalVariables","required","templatedString","requiredParameter","urlEncodedValue","hasOtherData","canSerialize","serializeObject","serialize","missingSerialize","mockedXHR","always","done","textStatus","elapsedTime","timeLeft","loadingDuration","translatedResponse","onResponse","rejectWith","fail","status","httpMessage","firstParameter","secondParameter","responseFromXHR","errorMessage","errorFromRequest","statusMessage","Deferred","asyncCallback","responder","asyncResponder","responseText","ajax","runSettings","noReturnedValue","decodedValue","decodeURIComponent","encodedValue","alreadyEncoded","missingAction","exitConditions","JSONParse","parseError","timeout","states","userStates","typeStates","inactive","textEnabled","button","allow","disallow","allows","setState","removeState","apiRequest","requestCancelled","activateTest","deactivateTest","listenTo","when","then","sync","hover","onActivate","onDeactivate","textFor","flash","previousText","flashDuration","activeText","storedText","inactiveText","currentText","visibility","moduleCount","loadedCount","contextObserver","trackChanges","initialCheck","checkVisibility","resetFixed","contextChanged","refreshOnLoad","refreshOnResize","precache","images","Array","imagesLength","loadedCounter","cacheImage","handleLoad","onload","onerror","enableCallbacks","disableCallbacks","occurred","once","onOnScreen","onAllLoaded","onTopPassed","onTopPassedReverse","zIndex","onFixed","elementCalculations","offScreen","horizontallyScrollableContext","overflowX","checkOnRefresh","onRefresh","passed","passingReverse","topVisibleReverse","bottomVisibleReverse","topPassedReverse","bottomPassedReverse","passing","topVisible","bottomVisible","topPassed","bottomPassed","onUpdate","amount","newCallback","onPassed","pixelsPassed","execute","callbackName","onOffScreen","onPassing","onTopVisible","onBottomVisible","onBottomPassed","onPassingReverse","onTopVisibleReverse","onBottomVisibleReverse","onBottomPassedReverse","screenCalculations","continuous","onUnfixed","elementPosition","screenSize","includeMargin","percentagePassed"],"mappings":"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","file":"static/js/app.7ad19af0e15ccea12109.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tvar _vue = __webpack_require__(8);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(5);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  el: '#app',\n\t  template: '<App/>',\n\t  components: { App: _App2.default },\n\t  mounted: function mounted() {\n\t    $('.ui.accordion').accordion();\n\t  }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 1 */,\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'app'\n\t};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(3)\n\t\n\tvar Component = __webpack_require__(6)(\n\t  /* script */\n\t  __webpack_require__(2),\n\t  /* template */\n\t  __webpack_require__(7),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n/* 6 */,\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _vm._m(0)\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    attrs: {\n\t      \"id\": \"app\"\n\t    }\n\t  }, [_c('div', {\n\t    attrs: {\n\t      \"id\": \"left\"\n\t    }\n\t  }, [_c('a', {\n\t    staticClass: \"centered\",\n\t    attrs: {\n\t      \"href\": \"/\"\n\t    }\n\t  }, [_c('h1', [_vm._v(\"Joshua Menke\")]), _vm._v(\" \"), _c('img', {\n\t    staticClass: \"ui small circular image centered\",\n\t    attrs: {\n\t      \"src\": \"https://unsplash.it/200\",\n\t      \"alt\": \"Joshua Menke\"\n\t    }\n\t  })]), _vm._v(\" \"), _c('div', [_c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Persönliches\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  })]), _vm._v(\" \"), _c('div', {\n\t    attrs: {\n\t      \"id\": \"personal\"\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"birthday circular icon\"\n\t  }), _vm._v(\" \"), _c('div', [_vm._v(\"Geb. 13.10.1994\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"home circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"https://goo.gl/maps/JVHtcFxZz4q\"\n\t    }\n\t  }, [_c('div', [_vm._v(\"Kortumstr. 30\")]), _vm._v(\" \"), _c('div', [_vm._v(\"44787 Bochum\")])])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"text telephone circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"tel:+4917660890700\"\n\t    }\n\t  }, [_vm._v(\"+49 176 - 60 89 0700\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"mail circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"mailto:info@joshuamenke.de\"\n\t    }\n\t  }, [_vm._v(\"info@joshuamenke.de\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"browser circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"http://joshuamenke.de\"\n\t    }\n\t  }, [_vm._v(\"joshuamenke.de\")])])]), _vm._v(\" \"), _c('div', [_c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Sprachen\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  })]), _vm._v(\" \"), _c('div', {\n\t    attrs: {\n\t      \"id\": \"sprachen\"\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"Deutsch\")])]), _vm._v(\" \"), _c('span', [_vm._v(\"Muttersprache\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"Englisch\")])]), _vm._v(\" \"), _c('span', [_vm._v(\"Fließend\")])])]), _vm._v(\" \"), _c('div', [_c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Kenntnisse\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  })]), _vm._v(\" \"), _c('div', {\n\t    attrs: {\n\t      \"id\": \"kenntnisse\"\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"Python\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n\t      \"title\": \"Python\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n\t      \"title\": \"Python\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n\t      \"title\": \"Python\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n\t      \"title\": \"Python\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/python/ios7/100/\",\n\t      \"title\": \"Python\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"Java\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/java-bean-filled/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/java-bean-filled/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/java-bean/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/java-bean/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/java-bean/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"JavaScript\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n\t      \"title\": \"Javascript\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n\t      \"title\": \"Javascript\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n\t      \"title\": \"Javascript\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n\t      \"title\": \"Javascript\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/javascript/ios7/100/\",\n\t      \"title\": \"Javascript\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"Html\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n\t      \"title\": \"Html 5\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n\t      \"title\": \"Html 5\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n\t      \"title\": \"Html 5\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n\t      \"title\": \"Html 5\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/html-5/ios7/100/\",\n\t      \"title\": \"Html 5\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"CSS\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/css-filled/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/css-filled/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/css-filled/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/css/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/css/ios7/100/\",\n\t      \"title\": \"CSS\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"MS Office\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/microsoft-excel/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('span', [_c('b', [_vm._v(\"Linux\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"rating\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/linux-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/linux-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/linux-filled/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/linux/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  }), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": \"https://png.icons8.com/linux/ios7/100/\",\n\t      \"title\": \"Microsoft Office\",\n\t      \"width\": \"13\",\n\t      \"height\": \"13\"\n\t    }\n\t  })])])]), _vm._v(\" \"), _c('div', [_c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Interessen & Hobbies\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  })]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"hobbies\"\n\t  }, [_c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('b', [_vm._v(\"Computer / Programmieren\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('b', [_vm._v(\"Elektronische Musik\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('b', [_vm._v(\"Kochen\")])])]), _vm._v(\" \"), _c('div', [_c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Links\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  })]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"links\"\n\t  }, [_c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"github circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"http://www.github.com/Joshkop\"\n\t    }\n\t  }, [_vm._v(\"github.com/Joshkop\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"linkedin circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"http://www.linkedin.com/in/Joshkop\"\n\t    }\n\t  }, [_vm._v(\"linkedin.com/in/Joshkop\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"facebook circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"https://www.facebook.com/Joshkop\"\n\t    }\n\t  }, [_vm._v(\"facebook.com/Joshkop\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info\"\n\t  }, [_c('i', {\n\t    staticClass: \"twitter circular icon\"\n\t  }), _vm._v(\" \"), _c('a', {\n\t    attrs: {\n\t      \"href\": \"https://www.twitter.com/_Joshkop\"\n\t    }\n\t  }, [_vm._v(\"twitter.com/_Joshkop\")])])])]), _vm._v(\" \"), _c('div', {\n\t    attrs: {\n\t      \"id\": \"right\"\n\t    }\n\t  }, [_c('div', [_c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Berufserfahrung\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('div', {\n\t    attrs: {\n\t      \"id\": \"berufe\"\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"beruf\"\n\t  }, [_c('h3', [_vm._v(\"Programmierer und Datenerfasser\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Fachverlag für Verbraucherinformationen\")]), _vm._v(\" \"), _c('span', [_vm._v(\"08/2015 - 01/2017\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Sammeln und bearbeiten von Daten sowie die Programmierung von Datenverarbeitungsskripts und Eingabeoberflächen.\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"beruf\"\n\t  }, [_c('h3', [_vm._v(\"Technik AG\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Grundschule Bochum Westenfeld\")]), _vm._v(\" \"), _c('span', [_vm._v(\"04/2013 - 02/2014\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Mitleitung der Technik AG, in der Grundschülern die Welt der Technik\\nnäher gebracht werden soll. Dabei unterrichte Ich mit einem weiteren Schüler\\ndiese Grundschüler und lies diese Experimente unter unserer Beobachtung\\nund Leitung durchführen.\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"beruf\"\n\t  }, [_c('h3', [_vm._v(\"Verkäufer\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Edmund Goebgens Stadion- und Veranstaltungsservice GmbH\")]), _vm._v(\" \"), _c('span', [_vm._v(\"03/2012 - 06/2012\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Verkauf von Lebensmitteln, vor allem Eis und Bier, in Stadien wie der Veltins Arena in Gelsenkirchen oder Lanxess Arena in Köln. Dabei verkaufte ich hauptsächlich in den Sitzplatzreihen mit Bauchladen.\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"beruf\"\n\t  }, [_c('h3', [_vm._v(\"Praktikum im Bereich IT\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Faber Datentechnik\")]), _vm._v(\" \"), _c('span', [_vm._v(\"11/2011 - 11/2011\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Praktikum vom 07.11 – 18.11.11 im Bereich IT. Dabei vor allem Einführung in\\ndie Welt der Hardware und Montage von Computern.\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"beruf\"\n\t  }, [_c('h3', [_vm._v(\"Praktikum im Bereich IT\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"DOGEWO21\")]), _vm._v(\" \"), _c('span', [_vm._v(\"02/2010 - 02/2010\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Praktikum vom 22.02 – 26.02.10 im Bereich IT. Dabei vor allem Software\\nLösungen und Fehlerbehebung.\")])])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Bildungsweg\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"ui divider\"\n\t  }), _vm._v(\" \"), _c('div', {\n\t    attrs: {\n\t      \"id\": \"bildung\"\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"bildung\"\n\t  }, [_c('h3', [_vm._v(\"Bachelor of Science (B.Sc.), Wirtschaftsinformatik\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Universität Duisburg-Essen, Standort Essen\")]), _vm._v(\" \"), _c('span', [_vm._v(\"10/2014 - 02/2017\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Vorzeitig Beendet.\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"bildung\"\n\t  }, [_c('h3', [_vm._v(\"Abitur\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Hellwegschule Bochum\")]), _vm._v(\" \"), _c('span', [_vm._v(\"02/2010 - 05/2014\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"text\"\n\t  }, [_vm._v(\"Abschlussnote: 2,8\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"bildung\"\n\t  }, [_c('h3', [_vm._v(\"Gymnasium\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"info bold italic\"\n\t  }, [_c('span', [_vm._v(\"Internatsschule Schloss Neubeuern, Bayern\")]), _vm._v(\" \"), _c('span', [_vm._v(\"09/2005 - 02/2010\")])])])])])])])\n\t}]}\n\n/***/ }),\n/* 8 */,\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) { /*\n\t * # Semantic UI - 2.2.10\n\t * https://github.com/Semantic-Org/Semantic-UI\n\t * http://www.semantic-ui.com/\n\t *\n\t * Copyright 2014 Contributors\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t/*!\n\t * # Semantic UI 2.2.10 - Site\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t$.site = $.fn.site = function(parameters) {\n\t  var\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t\n\t    settings        = ( $.isPlainObject(parameters) )\n\t      ? $.extend(true, {}, $.site.settings, parameters)\n\t      : $.extend({}, $.site.settings),\n\t\n\t    namespace       = settings.namespace,\n\t    error           = settings.error,\n\t\n\t    eventNamespace  = '.' + namespace,\n\t    moduleNamespace = 'module-' + namespace,\n\t\n\t    $document       = $(document),\n\t    $module         = $document,\n\t    element         = this,\n\t    instance        = $module.data(moduleNamespace),\n\t\n\t    module,\n\t    returnedValue\n\t  ;\n\t  module = {\n\t\n\t    initialize: function() {\n\t      module.instantiate();\n\t    },\n\t\n\t    instantiate: function() {\n\t      module.verbose('Storing instance of site', module);\n\t      instance = module;\n\t      $module\n\t        .data(moduleNamespace, module)\n\t      ;\n\t    },\n\t\n\t    normalize: function() {\n\t      module.fix.console();\n\t      module.fix.requestAnimationFrame();\n\t    },\n\t\n\t    fix: {\n\t      console: function() {\n\t        module.debug('Normalizing window.console');\n\t        if (console === undefined || console.log === undefined) {\n\t          module.verbose('Console not available, normalizing events');\n\t          module.disable.console();\n\t        }\n\t        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\n\t          module.verbose('Console group not available, normalizing events');\n\t          window.console.group = function() {};\n\t          window.console.groupEnd = function() {};\n\t          window.console.groupCollapsed = function() {};\n\t        }\n\t        if (typeof console.markTimeline == 'undefined') {\n\t          module.verbose('Mark timeline not available, normalizing events');\n\t          window.console.markTimeline = function() {};\n\t        }\n\t      },\n\t      consoleClear: function() {\n\t        module.debug('Disabling programmatic console clearing');\n\t        window.console.clear = function() {};\n\t      },\n\t      requestAnimationFrame: function() {\n\t        module.debug('Normalizing requestAnimationFrame');\n\t        if(window.requestAnimationFrame === undefined) {\n\t          module.debug('RequestAnimationFrame not available, normalizing event');\n\t          window.requestAnimationFrame = window.requestAnimationFrame\n\t            || window.mozRequestAnimationFrame\n\t            || window.webkitRequestAnimationFrame\n\t            || window.msRequestAnimationFrame\n\t            || function(callback) { setTimeout(callback, 0); }\n\t          ;\n\t        }\n\t      }\n\t    },\n\t\n\t    moduleExists: function(name) {\n\t      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\n\t    },\n\t\n\t    enabled: {\n\t      modules: function(modules) {\n\t        var\n\t          enabledModules = []\n\t        ;\n\t        modules = modules || settings.modules;\n\t        $.each(modules, function(index, name) {\n\t          if(module.moduleExists(name)) {\n\t            enabledModules.push(name);\n\t          }\n\t        });\n\t        return enabledModules;\n\t      }\n\t    },\n\t\n\t    disabled: {\n\t      modules: function(modules) {\n\t        var\n\t          disabledModules = []\n\t        ;\n\t        modules = modules || settings.modules;\n\t        $.each(modules, function(index, name) {\n\t          if(!module.moduleExists(name)) {\n\t            disabledModules.push(name);\n\t          }\n\t        });\n\t        return disabledModules;\n\t      }\n\t    },\n\t\n\t    change: {\n\t      setting: function(setting, value, modules, modifyExisting) {\n\t        modules = (typeof modules === 'string')\n\t          ? (modules === 'all')\n\t            ? settings.modules\n\t            : [modules]\n\t          : modules || settings.modules\n\t        ;\n\t        modifyExisting = (modifyExisting !== undefined)\n\t          ? modifyExisting\n\t          : true\n\t        ;\n\t        $.each(modules, function(index, name) {\n\t          var\n\t            namespace = (module.moduleExists(name))\n\t              ? $.fn[name].settings.namespace || false\n\t              : true,\n\t            $existingModules\n\t          ;\n\t          if(module.moduleExists(name)) {\n\t            module.verbose('Changing default setting', setting, value, name);\n\t            $.fn[name].settings[setting] = value;\n\t            if(modifyExisting && namespace) {\n\t              $existingModules = $(':data(module-' + namespace + ')');\n\t              if($existingModules.length > 0) {\n\t                module.verbose('Modifying existing settings', $existingModules);\n\t                $existingModules[name]('setting', setting, value);\n\t              }\n\t            }\n\t          }\n\t        });\n\t      },\n\t      settings: function(newSettings, modules, modifyExisting) {\n\t        modules = (typeof modules === 'string')\n\t          ? [modules]\n\t          : modules || settings.modules\n\t        ;\n\t        modifyExisting = (modifyExisting !== undefined)\n\t          ? modifyExisting\n\t          : true\n\t        ;\n\t        $.each(modules, function(index, name) {\n\t          var\n\t            $existingModules\n\t          ;\n\t          if(module.moduleExists(name)) {\n\t            module.verbose('Changing default setting', newSettings, name);\n\t            $.extend(true, $.fn[name].settings, newSettings);\n\t            if(modifyExisting && namespace) {\n\t              $existingModules = $(':data(module-' + namespace + ')');\n\t              if($existingModules.length > 0) {\n\t                module.verbose('Modifying existing settings', $existingModules);\n\t                $existingModules[name]('setting', newSettings);\n\t              }\n\t            }\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    enable: {\n\t      console: function() {\n\t        module.console(true);\n\t      },\n\t      debug: function(modules, modifyExisting) {\n\t        modules = modules || settings.modules;\n\t        module.debug('Enabling debug for modules', modules);\n\t        module.change.setting('debug', true, modules, modifyExisting);\n\t      },\n\t      verbose: function(modules, modifyExisting) {\n\t        modules = modules || settings.modules;\n\t        module.debug('Enabling verbose debug for modules', modules);\n\t        module.change.setting('verbose', true, modules, modifyExisting);\n\t      }\n\t    },\n\t    disable: {\n\t      console: function() {\n\t        module.console(false);\n\t      },\n\t      debug: function(modules, modifyExisting) {\n\t        modules = modules || settings.modules;\n\t        module.debug('Disabling debug for modules', modules);\n\t        module.change.setting('debug', false, modules, modifyExisting);\n\t      },\n\t      verbose: function(modules, modifyExisting) {\n\t        modules = modules || settings.modules;\n\t        module.debug('Disabling verbose debug for modules', modules);\n\t        module.change.setting('verbose', false, modules, modifyExisting);\n\t      }\n\t    },\n\t\n\t    console: function(enable) {\n\t      if(enable) {\n\t        if(instance.cache.console === undefined) {\n\t          module.error(error.console);\n\t          return;\n\t        }\n\t        module.debug('Restoring console function');\n\t        window.console = instance.cache.console;\n\t      }\n\t      else {\n\t        module.debug('Disabling console function');\n\t        instance.cache.console = window.console;\n\t        window.console = {\n\t          clear          : function(){},\n\t          error          : function(){},\n\t          group          : function(){},\n\t          groupCollapsed : function(){},\n\t          groupEnd       : function(){},\n\t          info           : function(){},\n\t          log            : function(){},\n\t          markTimeline   : function(){},\n\t          warn           : function(){}\n\t        };\n\t      }\n\t    },\n\t\n\t    destroy: function() {\n\t      module.verbose('Destroying previous site for', $module);\n\t      $module\n\t        .removeData(moduleNamespace)\n\t      ;\n\t    },\n\t\n\t    cache: {},\n\t\n\t    setting: function(name, value) {\n\t      if( $.isPlainObject(name) ) {\n\t        $.extend(true, settings, name);\n\t      }\n\t      else if(value !== undefined) {\n\t        settings[name] = value;\n\t      }\n\t      else {\n\t        return settings[name];\n\t      }\n\t    },\n\t    internal: function(name, value) {\n\t      if( $.isPlainObject(name) ) {\n\t        $.extend(true, module, name);\n\t      }\n\t      else if(value !== undefined) {\n\t        module[name] = value;\n\t      }\n\t      else {\n\t        return module[name];\n\t      }\n\t    },\n\t    debug: function() {\n\t      if(settings.debug) {\n\t        if(settings.performance) {\n\t          module.performance.log(arguments);\n\t        }\n\t        else {\n\t          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t          module.debug.apply(console, arguments);\n\t        }\n\t      }\n\t    },\n\t    verbose: function() {\n\t      if(settings.verbose && settings.debug) {\n\t        if(settings.performance) {\n\t          module.performance.log(arguments);\n\t        }\n\t        else {\n\t          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t          module.verbose.apply(console, arguments);\n\t        }\n\t      }\n\t    },\n\t    error: function() {\n\t      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t      module.error.apply(console, arguments);\n\t    },\n\t    performance: {\n\t      log: function(message) {\n\t        var\n\t          currentTime,\n\t          executionTime,\n\t          previousTime\n\t        ;\n\t        if(settings.performance) {\n\t          currentTime   = new Date().getTime();\n\t          previousTime  = time || currentTime;\n\t          executionTime = currentTime - previousTime;\n\t          time          = currentTime;\n\t          performance.push({\n\t            'Element'        : element,\n\t            'Name'           : message[0],\n\t            'Arguments'      : [].slice.call(message, 1) || '',\n\t            'Execution Time' : executionTime\n\t          });\n\t        }\n\t        clearTimeout(module.performance.timer);\n\t        module.performance.timer = setTimeout(module.performance.display, 500);\n\t      },\n\t      display: function() {\n\t        var\n\t          title = settings.name + ':',\n\t          totalTime = 0\n\t        ;\n\t        time = false;\n\t        clearTimeout(module.performance.timer);\n\t        $.each(performance, function(index, data) {\n\t          totalTime += data['Execution Time'];\n\t        });\n\t        title += ' ' + totalTime + 'ms';\n\t        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t          console.groupCollapsed(title);\n\t          if(console.table) {\n\t            console.table(performance);\n\t          }\n\t          else {\n\t            $.each(performance, function(index, data) {\n\t              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t            });\n\t          }\n\t          console.groupEnd();\n\t        }\n\t        performance = [];\n\t      }\n\t    },\n\t    invoke: function(query, passedArguments, context) {\n\t      var\n\t        object = instance,\n\t        maxDepth,\n\t        found,\n\t        response\n\t      ;\n\t      passedArguments = passedArguments || queryArguments;\n\t      context         = element         || context;\n\t      if(typeof query == 'string' && object !== undefined) {\n\t        query    = query.split(/[\\. ]/);\n\t        maxDepth = query.length - 1;\n\t        $.each(query, function(depth, value) {\n\t          var camelCaseValue = (depth != maxDepth)\n\t            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t            : query\n\t          ;\n\t          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t            object = object[camelCaseValue];\n\t          }\n\t          else if( object[camelCaseValue] !== undefined ) {\n\t            found = object[camelCaseValue];\n\t            return false;\n\t          }\n\t          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t            object = object[value];\n\t          }\n\t          else if( object[value] !== undefined ) {\n\t            found = object[value];\n\t            return false;\n\t          }\n\t          else {\n\t            module.error(error.method, query);\n\t            return false;\n\t          }\n\t        });\n\t      }\n\t      if ( $.isFunction( found ) ) {\n\t        response = found.apply(context, passedArguments);\n\t      }\n\t      else if(found !== undefined) {\n\t        response = found;\n\t      }\n\t      if($.isArray(returnedValue)) {\n\t        returnedValue.push(response);\n\t      }\n\t      else if(returnedValue !== undefined) {\n\t        returnedValue = [returnedValue, response];\n\t      }\n\t      else if(response !== undefined) {\n\t        returnedValue = response;\n\t      }\n\t      return found;\n\t    }\n\t  };\n\t\n\t  if(methodInvoked) {\n\t    if(instance === undefined) {\n\t      module.initialize();\n\t    }\n\t    module.invoke(query);\n\t  }\n\t  else {\n\t    if(instance !== undefined) {\n\t      module.destroy();\n\t    }\n\t    module.initialize();\n\t  }\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.site.settings = {\n\t\n\t  name        : 'Site',\n\t  namespace   : 'site',\n\t\n\t  error : {\n\t    console : 'Console cannot be restored, most likely it was overwritten outside of module',\n\t    method : 'The method you called is not defined.'\n\t  },\n\t\n\t  debug       : false,\n\t  verbose     : false,\n\t  performance : true,\n\t\n\t  modules: [\n\t    'accordion',\n\t    'api',\n\t    'checkbox',\n\t    'dimmer',\n\t    'dropdown',\n\t    'embed',\n\t    'form',\n\t    'modal',\n\t    'nag',\n\t    'popup',\n\t    'rating',\n\t    'shape',\n\t    'sidebar',\n\t    'state',\n\t    'sticky',\n\t    'tab',\n\t    'transition',\n\t    'visit',\n\t    'visibility'\n\t  ],\n\t\n\t  siteNamespace   : 'site',\n\t  namespaceStub   : {\n\t    cache     : {},\n\t    config    : {},\n\t    sections  : {},\n\t    section   : {},\n\t    utilities : {}\n\t  }\n\t\n\t};\n\t\n\t// allows for selection of elements with data attributes\n\t$.extend($.expr[ \":\" ], {\n\t  data: ($.expr.createPseudo)\n\t    ? $.expr.createPseudo(function(dataName) {\n\t        return function(elem) {\n\t          return !!$.data(elem, dataName);\n\t        };\n\t      })\n\t    : function(elem, i, match) {\n\t      // support: jQuery < 1.8\n\t      return !!$.data(elem, match[ 3 ]);\n\t    }\n\t});\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Form Validation\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.form = function(parameters) {\n\t  var\n\t    $allModules      = $(this),\n\t    moduleSelector   = $allModules.selector || '',\n\t\n\t    time             = new Date().getTime(),\n\t    performance      = [],\n\t\n\t    query            = arguments[0],\n\t    legacyParameters = arguments[1],\n\t    methodInvoked    = (typeof query == 'string'),\n\t    queryArguments   = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        $module     = $(this),\n\t        element     = this,\n\t\n\t        formErrors  = [],\n\t        keyHeldDown = false,\n\t\n\t        // set at run-time\n\t        $field,\n\t        $group,\n\t        $message,\n\t        $prompt,\n\t        $submit,\n\t        $clear,\n\t        $reset,\n\t\n\t        settings,\n\t        validation,\n\t\n\t        metadata,\n\t        selector,\n\t        className,\n\t        regExp,\n\t        error,\n\t\n\t        namespace,\n\t        moduleNamespace,\n\t        eventNamespace,\n\t\n\t        instance,\n\t        module\n\t      ;\n\t\n\t      module      = {\n\t\n\t        initialize: function() {\n\t\n\t          // settings grabbed at run time\n\t          module.get.settings();\n\t          if(methodInvoked) {\n\t            if(instance === undefined) {\n\t              module.instantiate();\n\t            }\n\t            module.invoke(query);\n\t          }\n\t          else {\n\t            if(instance !== undefined) {\n\t              instance.invoke('destroy');\n\t            }\n\t            module.verbose('Initializing form validation', $module, settings);\n\t            module.bindEvents();\n\t            module.set.defaults();\n\t            module.instantiate();\n\t          }\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module', instance);\n\t          module.removeEvents();\n\t          $module\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          module.verbose('Refreshing selector cache');\n\t          $field      = $module.find(selector.field);\n\t          $group      = $module.find(selector.group);\n\t          $message    = $module.find(selector.message);\n\t          $prompt     = $module.find(selector.prompt);\n\t\n\t          $submit     = $module.find(selector.submit);\n\t          $clear      = $module.find(selector.clear);\n\t          $reset      = $module.find(selector.reset);\n\t        },\n\t\n\t        submit: function() {\n\t          module.verbose('Submitting form', $module);\n\t          $module\n\t            .submit()\n\t          ;\n\t        },\n\t\n\t        attachEvents: function(selector, action) {\n\t          action = action || 'submit';\n\t          $(selector)\n\t            .on('click' + eventNamespace, function(event) {\n\t              module[action]();\n\t              event.preventDefault();\n\t            })\n\t          ;\n\t        },\n\t\n\t        bindEvents: function() {\n\t          module.verbose('Attaching form events');\n\t          $module\n\t            .on('submit' + eventNamespace, module.validate.form)\n\t            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n\t            .on('click'  + eventNamespace, selector.submit, module.submit)\n\t            .on('click'  + eventNamespace, selector.reset, module.reset)\n\t            .on('click'  + eventNamespace, selector.clear, module.clear)\n\t          ;\n\t          if(settings.keyboardShortcuts) {\n\t            $module\n\t              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n\t            ;\n\t          }\n\t          $field\n\t            .each(function() {\n\t              var\n\t                $input     = $(this),\n\t                type       = $input.prop('type'),\n\t                inputEvent = module.get.changeEvent(type, $input)\n\t              ;\n\t              $(this)\n\t                .on(inputEvent + eventNamespace, module.event.field.change)\n\t              ;\n\t            })\n\t          ;\n\t        },\n\t\n\t        clear: function() {\n\t          $field\n\t            .each(function () {\n\t              var\n\t                $field       = $(this),\n\t                $element     = $field.parent(),\n\t                $fieldGroup  = $field.closest($group),\n\t                $prompt      = $fieldGroup.find(selector.prompt),\n\t                defaultValue = $field.data(metadata.defaultValue) || '',\n\t                isCheckbox   = $element.is(selector.uiCheckbox),\n\t                isDropdown   = $element.is(selector.uiDropdown),\n\t                isErrored    = $fieldGroup.hasClass(className.error)\n\t              ;\n\t              if(isErrored) {\n\t                module.verbose('Resetting error on field', $fieldGroup);\n\t                $fieldGroup.removeClass(className.error);\n\t                $prompt.remove();\n\t              }\n\t              if(isDropdown) {\n\t                module.verbose('Resetting dropdown value', $element, defaultValue);\n\t                $element.dropdown('clear');\n\t              }\n\t              else if(isCheckbox) {\n\t                $field.prop('checked', false);\n\t              }\n\t              else {\n\t                module.verbose('Resetting field value', $field, defaultValue);\n\t                $field.val('');\n\t              }\n\t            })\n\t          ;\n\t        },\n\t\n\t        reset: function() {\n\t          $field\n\t            .each(function () {\n\t              var\n\t                $field       = $(this),\n\t                $element     = $field.parent(),\n\t                $fieldGroup  = $field.closest($group),\n\t                $prompt      = $fieldGroup.find(selector.prompt),\n\t                defaultValue = $field.data(metadata.defaultValue),\n\t                isCheckbox   = $element.is(selector.uiCheckbox),\n\t                isDropdown   = $element.is(selector.uiDropdown),\n\t                isErrored    = $fieldGroup.hasClass(className.error)\n\t              ;\n\t              if(defaultValue === undefined) {\n\t                return;\n\t              }\n\t              if(isErrored) {\n\t                module.verbose('Resetting error on field', $fieldGroup);\n\t                $fieldGroup.removeClass(className.error);\n\t                $prompt.remove();\n\t              }\n\t              if(isDropdown) {\n\t                module.verbose('Resetting dropdown value', $element, defaultValue);\n\t                $element.dropdown('restore defaults');\n\t              }\n\t              else if(isCheckbox) {\n\t                module.verbose('Resetting checkbox value', $element, defaultValue);\n\t                $field.prop('checked', defaultValue);\n\t              }\n\t              else {\n\t                module.verbose('Resetting field value', $field, defaultValue);\n\t                $field.val(defaultValue);\n\t              }\n\t            })\n\t          ;\n\t        },\n\t\n\t        determine: {\n\t          isValid: function() {\n\t            var\n\t              allValid = true\n\t            ;\n\t            $.each(validation, function(fieldName, field) {\n\t              if( !( module.validate.field(field, fieldName, true) ) ) {\n\t                allValid = false;\n\t              }\n\t            });\n\t            return allValid;\n\t          }\n\t        },\n\t\n\t        is: {\n\t          bracketedRule: function(rule) {\n\t            return (rule.type && rule.type.match(settings.regExp.bracket));\n\t          },\n\t          empty: function($field) {\n\t            if(!$field || $field.length === 0) {\n\t              return true;\n\t            }\n\t            else if($field.is('input[type=\"checkbox\"]')) {\n\t              return !$field.is(':checked');\n\t            }\n\t            else {\n\t              return module.is.blank($field);\n\t            }\n\t          },\n\t          blank: function($field) {\n\t            return $.trim($field.val()) === '';\n\t          },\n\t          valid: function(field) {\n\t            var\n\t              allValid = true\n\t            ;\n\t            if(field) {\n\t              module.verbose('Checking if field is valid', field);\n\t              return module.validate.field(validation[field], field, false);\n\t            }\n\t            else {\n\t              module.verbose('Checking if form is valid');\n\t              $.each(validation, function(fieldName, field) {\n\t                if( !module.is.valid(fieldName) ) {\n\t                  allValid = false;\n\t                }\n\t              });\n\t              return allValid;\n\t            }\n\t          }\n\t        },\n\t\n\t        removeEvents: function() {\n\t          $module\n\t            .off(eventNamespace)\n\t          ;\n\t          $field\n\t            .off(eventNamespace)\n\t          ;\n\t          $submit\n\t            .off(eventNamespace)\n\t          ;\n\t          $field\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        event: {\n\t          field: {\n\t            keydown: function(event) {\n\t              var\n\t                $field       = $(this),\n\t                key          = event.which,\n\t                isInput      = $field.is(selector.input),\n\t                isCheckbox   = $field.is(selector.checkbox),\n\t                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n\t                keyCode      = {\n\t                  enter  : 13,\n\t                  escape : 27\n\t                }\n\t              ;\n\t              if( key == keyCode.escape) {\n\t                module.verbose('Escape key pressed blurring field');\n\t                $field\n\t                  .blur()\n\t                ;\n\t              }\n\t              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n\t                if(!keyHeldDown) {\n\t                  $field\n\t                    .one('keyup' + eventNamespace, module.event.field.keyup)\n\t                  ;\n\t                  module.submit();\n\t                  module.debug('Enter pressed on input submitting form');\n\t                }\n\t                keyHeldDown = true;\n\t              }\n\t            },\n\t            keyup: function() {\n\t              keyHeldDown = false;\n\t            },\n\t            blur: function(event) {\n\t              var\n\t                $field          = $(this),\n\t                $fieldGroup     = $field.closest($group),\n\t                validationRules = module.get.validation($field)\n\t              ;\n\t              if( $fieldGroup.hasClass(className.error) ) {\n\t                module.debug('Revalidating field', $field, validationRules);\n\t                if(validationRules) {\n\t                  module.validate.field( validationRules );\n\t                }\n\t              }\n\t              else if(settings.on == 'blur' || settings.on == 'change') {\n\t                if(validationRules) {\n\t                  module.validate.field( validationRules );\n\t                }\n\t              }\n\t            },\n\t            change: function(event) {\n\t              var\n\t                $field      = $(this),\n\t                $fieldGroup = $field.closest($group),\n\t                validationRules = module.get.validation($field)\n\t              ;\n\t              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\n\t                clearTimeout(module.timer);\n\t                module.timer = setTimeout(function() {\n\t                  module.debug('Revalidating field', $field,  module.get.validation($field));\n\t                  module.validate.field( validationRules );\n\t                }, settings.delay);\n\t              }\n\t            }\n\t          }\n\t\n\t        },\n\t\n\t        get: {\n\t          ancillaryValue: function(rule) {\n\t            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\n\t              return false;\n\t            }\n\t            return (rule.value !== undefined)\n\t              ? rule.value\n\t              : rule.type.match(settings.regExp.bracket)[1] + ''\n\t            ;\n\t          },\n\t          ruleName: function(rule) {\n\t            if( module.is.bracketedRule(rule) ) {\n\t              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n\t            }\n\t            return rule.type;\n\t          },\n\t          changeEvent: function(type, $input) {\n\t            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n\t              return 'change';\n\t            }\n\t            else {\n\t              return module.get.inputEvent();\n\t            }\n\t          },\n\t          inputEvent: function() {\n\t            return (document.createElement('input').oninput !== undefined)\n\t              ? 'input'\n\t              : (document.createElement('input').onpropertychange !== undefined)\n\t                ? 'propertychange'\n\t                : 'keyup'\n\t            ;\n\t          },\n\t          prompt: function(rule, field) {\n\t            var\n\t              ruleName      = module.get.ruleName(rule),\n\t              ancillary     = module.get.ancillaryValue(rule),\n\t              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n\t              requiresValue = (prompt.search('{value}') !== -1),\n\t              requiresName  = (prompt.search('{name}') !== -1),\n\t              $label,\n\t              $field,\n\t              name\n\t            ;\n\t            if(requiresName || requiresValue) {\n\t              $field = module.get.field(field.identifier);\n\t            }\n\t            if(requiresValue) {\n\t              prompt = prompt.replace('{value}', $field.val());\n\t            }\n\t            if(requiresName) {\n\t              $label = $field.closest(selector.group).find('label').eq(0);\n\t              name = ($label.length == 1)\n\t                ? $label.text()\n\t                : $field.prop('placeholder') || settings.text.unspecifiedField\n\t              ;\n\t              prompt = prompt.replace('{name}', name);\n\t            }\n\t            prompt = prompt.replace('{identifier}', field.identifier);\n\t            prompt = prompt.replace('{ruleValue}', ancillary);\n\t            if(!rule.prompt) {\n\t              module.verbose('Using default validation prompt for type', prompt, ruleName);\n\t            }\n\t            return prompt;\n\t          },\n\t          settings: function() {\n\t            if($.isPlainObject(parameters)) {\n\t              var\n\t                keys     = Object.keys(parameters),\n\t                isLegacySettings = (keys.length > 0)\n\t                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n\t                  : false,\n\t                ruleKeys\n\t              ;\n\t              if(isLegacySettings) {\n\t                // 1.x (ducktyped)\n\t                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n\t                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n\t                module.error(settings.error.oldSyntax, element);\n\t                module.verbose('Extending settings from legacy parameters', validation, settings);\n\t              }\n\t              else {\n\t                // 2.x\n\t                if(parameters.fields) {\n\t                  ruleKeys = Object.keys(parameters.fields);\n\t                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\n\t                    $.each(parameters.fields, function(name, rules) {\n\t                      if(typeof rules == 'string') {\n\t                        rules = [rules];\n\t                      }\n\t                      parameters.fields[name] = {\n\t                        rules: []\n\t                      };\n\t                      $.each(rules, function(index, rule) {\n\t                        parameters.fields[name].rules.push({ type: rule });\n\t                      });\n\t                    });\n\t                  }\n\t                }\n\t\n\t                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\n\t                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n\t                module.verbose('Extending settings', validation, settings);\n\t              }\n\t            }\n\t            else {\n\t              settings   = $.fn.form.settings;\n\t              validation = $.fn.form.settings.defaults;\n\t              module.verbose('Using default form validation', validation, settings);\n\t            }\n\t\n\t            // shorthand\n\t            namespace       = settings.namespace;\n\t            metadata        = settings.metadata;\n\t            selector        = settings.selector;\n\t            className       = settings.className;\n\t            regExp          = settings.regExp;\n\t            error           = settings.error;\n\t            moduleNamespace = 'module-' + namespace;\n\t            eventNamespace  = '.' + namespace;\n\t\n\t            // grab instance\n\t            instance = $module.data(moduleNamespace);\n\t\n\t            // refresh selector cache\n\t            module.refresh();\n\t          },\n\t          field: function(identifier) {\n\t            module.verbose('Finding field with identifier', identifier);\n\t            identifier = module.escape.string(identifier);\n\t            if($field.filter('#' + identifier).length > 0 ) {\n\t              return $field.filter('#' + identifier);\n\t            }\n\t            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n\t              return $field.filter('[name=\"' + identifier +'\"]');\n\t            }\n\t            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n\t              return $field.filter('[name=\"' + identifier +'[]\"]');\n\t            }\n\t            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n\t              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n\t            }\n\t            return $('<input/>');\n\t          },\n\t          fields: function(fields) {\n\t            var\n\t              $fields = $()\n\t            ;\n\t            $.each(fields, function(index, name) {\n\t              $fields = $fields.add( module.get.field(name) );\n\t            });\n\t            return $fields;\n\t          },\n\t          validation: function($field) {\n\t            var\n\t              fieldValidation,\n\t              identifier\n\t            ;\n\t            if(!validation) {\n\t              return false;\n\t            }\n\t            $.each(validation, function(fieldName, field) {\n\t              identifier = field.identifier || fieldName;\n\t              if( module.get.field(identifier)[0] == $field[0] ) {\n\t                field.identifier = identifier;\n\t                fieldValidation = field;\n\t              }\n\t            });\n\t            return fieldValidation || false;\n\t          },\n\t          value: function (field) {\n\t            var\n\t              fields = [],\n\t              results\n\t            ;\n\t            fields.push(field);\n\t            results = module.get.values.call(element, fields);\n\t            return results[field];\n\t          },\n\t          values: function (fields) {\n\t            var\n\t              $fields = $.isArray(fields)\n\t                ? module.get.fields(fields)\n\t                : $field,\n\t              values = {}\n\t            ;\n\t            $fields.each(function(index, field) {\n\t              var\n\t                $field     = $(field),\n\t                type       = $field.prop('type'),\n\t                name       = $field.prop('name'),\n\t                value      = $field.val(),\n\t                isCheckbox = $field.is(selector.checkbox),\n\t                isRadio    = $field.is(selector.radio),\n\t                isMultiple = (name.indexOf('[]') !== -1),\n\t                isChecked  = (isCheckbox)\n\t                  ? $field.is(':checked')\n\t                  : false\n\t              ;\n\t              if(name) {\n\t                if(isMultiple) {\n\t                  name = name.replace('[]', '');\n\t                  if(!values[name]) {\n\t                    values[name] = [];\n\t                  }\n\t                  if(isCheckbox) {\n\t                    if(isChecked) {\n\t                      values[name].push(value || true);\n\t                    }\n\t                    else {\n\t                      values[name].push(false);\n\t                    }\n\t                  }\n\t                  else {\n\t                    values[name].push(value);\n\t                  }\n\t                }\n\t                else {\n\t                  if(isRadio) {\n\t                    if(isChecked) {\n\t                      values[name] = value;\n\t                    }\n\t                  }\n\t                  else if(isCheckbox) {\n\t                    if(isChecked) {\n\t                      values[name] = value || true;\n\t                    }\n\t                    else {\n\t                      values[name] = false;\n\t                    }\n\t                  }\n\t                  else {\n\t                    values[name] = value;\n\t                  }\n\t                }\n\t              }\n\t            });\n\t            return values;\n\t          }\n\t        },\n\t\n\t        has: {\n\t\n\t          field: function(identifier) {\n\t            module.verbose('Checking for existence of a field with identifier', identifier);\n\t            identifier = module.escape.string(identifier);\n\t            if(typeof identifier !== 'string') {\n\t              module.error(error.identifier, identifier);\n\t            }\n\t            if($field.filter('#' + identifier).length > 0 ) {\n\t              return true;\n\t            }\n\t            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n\t              return true;\n\t            }\n\t            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n\t              return true;\n\t            }\n\t            return false;\n\t          }\n\t\n\t        },\n\t\n\t        escape: {\n\t          string: function(text) {\n\t            text =  String(text);\n\t            return text.replace(regExp.escape, '\\\\$&');\n\t          }\n\t        },\n\t\n\t        add: {\n\t          prompt: function(identifier, errors) {\n\t            var\n\t              $field       = module.get.field(identifier),\n\t              $fieldGroup  = $field.closest($group),\n\t              $prompt      = $fieldGroup.children(selector.prompt),\n\t              promptExists = ($prompt.length !== 0)\n\t            ;\n\t            errors = (typeof errors == 'string')\n\t              ? [errors]\n\t              : errors\n\t            ;\n\t            module.verbose('Adding field error state', identifier);\n\t            $fieldGroup\n\t              .addClass(className.error)\n\t            ;\n\t            if(settings.inline) {\n\t              if(!promptExists) {\n\t                $prompt = settings.templates.prompt(errors);\n\t                $prompt\n\t                  .appendTo($fieldGroup)\n\t                ;\n\t              }\n\t              $prompt\n\t                .html(errors[0])\n\t              ;\n\t              if(!promptExists) {\n\t                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n\t                  module.verbose('Displaying error with css transition', settings.transition);\n\t                  $prompt.transition(settings.transition + ' in', settings.duration);\n\t                }\n\t                else {\n\t                  module.verbose('Displaying error with fallback javascript animation');\n\t                  $prompt\n\t                    .fadeIn(settings.duration)\n\t                  ;\n\t                }\n\t              }\n\t              else {\n\t                module.verbose('Inline errors are disabled, no inline error added', identifier);\n\t              }\n\t            }\n\t          },\n\t          errors: function(errors) {\n\t            module.debug('Adding form error messages', errors);\n\t            module.set.error();\n\t            $message\n\t              .html( settings.templates.error(errors) )\n\t            ;\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          prompt: function(identifier) {\n\t            var\n\t              $field      = module.get.field(identifier),\n\t              $fieldGroup = $field.closest($group),\n\t              $prompt     = $fieldGroup.children(selector.prompt)\n\t            ;\n\t            $fieldGroup\n\t              .removeClass(className.error)\n\t            ;\n\t            if(settings.inline && $prompt.is(':visible')) {\n\t              module.verbose('Removing prompt for field', identifier);\n\t              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n\t                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n\t                  $prompt.remove();\n\t                });\n\t              }\n\t              else {\n\t                $prompt\n\t                  .fadeOut(settings.duration, function(){\n\t                    $prompt.remove();\n\t                  })\n\t                ;\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        set: {\n\t          success: function() {\n\t            $module\n\t              .removeClass(className.error)\n\t              .addClass(className.success)\n\t            ;\n\t          },\n\t          defaults: function () {\n\t            $field\n\t              .each(function () {\n\t                var\n\t                  $field     = $(this),\n\t                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n\t                  value      = (isCheckbox)\n\t                    ? $field.is(':checked')\n\t                    : $field.val()\n\t                ;\n\t                $field.data(metadata.defaultValue, value);\n\t              })\n\t            ;\n\t          },\n\t          error: function() {\n\t            $module\n\t              .removeClass(className.success)\n\t              .addClass(className.error)\n\t            ;\n\t          },\n\t          value: function (field, value) {\n\t            var\n\t              fields = {}\n\t            ;\n\t            fields[field] = value;\n\t            return module.set.values.call(element, fields);\n\t          },\n\t          values: function (fields) {\n\t            if($.isEmptyObject(fields)) {\n\t              return;\n\t            }\n\t            $.each(fields, function(key, value) {\n\t              var\n\t                $field      = module.get.field(key),\n\t                $element    = $field.parent(),\n\t                isMultiple  = $.isArray(value),\n\t                isCheckbox  = $element.is(selector.uiCheckbox),\n\t                isDropdown  = $element.is(selector.uiDropdown),\n\t                isRadio     = ($field.is(selector.radio) && isCheckbox),\n\t                fieldExists = ($field.length > 0),\n\t                $multipleField\n\t              ;\n\t              if(fieldExists) {\n\t                if(isMultiple && isCheckbox) {\n\t                  module.verbose('Selecting multiple', value, $field);\n\t                  $element.checkbox('uncheck');\n\t                  $.each(value, function(index, value) {\n\t                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n\t                    $element       = $multipleField.parent();\n\t                    if($multipleField.length > 0) {\n\t                      $element.checkbox('check');\n\t                    }\n\t                  });\n\t                }\n\t                else if(isRadio) {\n\t                  module.verbose('Selecting radio value', value, $field);\n\t                  $field.filter('[value=\"' + value + '\"]')\n\t                    .parent(selector.uiCheckbox)\n\t                      .checkbox('check')\n\t                  ;\n\t                }\n\t                else if(isCheckbox) {\n\t                  module.verbose('Setting checkbox value', value, $element);\n\t                  if(value === true) {\n\t                    $element.checkbox('check');\n\t                  }\n\t                  else {\n\t                    $element.checkbox('uncheck');\n\t                  }\n\t                }\n\t                else if(isDropdown) {\n\t                  module.verbose('Setting dropdown value', value, $element);\n\t                  $element.dropdown('set selected', value);\n\t                }\n\t                else {\n\t                  module.verbose('Setting field value', value, $field);\n\t                  $field.val(value);\n\t                }\n\t              }\n\t            });\n\t          }\n\t        },\n\t\n\t        validate: {\n\t\n\t          form: function(event, ignoreCallbacks) {\n\t            var\n\t              values = module.get.values(),\n\t              apiRequest\n\t            ;\n\t\n\t            // input keydown event will fire submit repeatedly by browser default\n\t            if(keyHeldDown) {\n\t              return false;\n\t            }\n\t\n\t            // reset errors\n\t            formErrors = [];\n\t            if( module.determine.isValid() ) {\n\t              module.debug('Form has no validation errors, submitting');\n\t              module.set.success();\n\t              if(ignoreCallbacks !== true) {\n\t                return settings.onSuccess.call(element, event, values);\n\t              }\n\t            }\n\t            else {\n\t              module.debug('Form has errors');\n\t              module.set.error();\n\t              if(!settings.inline) {\n\t                module.add.errors(formErrors);\n\t              }\n\t              // prevent ajax submit\n\t              if($module.data('moduleApi') !== undefined) {\n\t                event.stopImmediatePropagation();\n\t              }\n\t              if(ignoreCallbacks !== true) {\n\t                return settings.onFailure.call(element, formErrors, values);\n\t              }\n\t            }\n\t          },\n\t\n\t          // takes a validation object and returns whether field passes validation\n\t          field: function(field, fieldName, showErrors) {\n\t            showErrors = (showErrors !== undefined)\n\t              ? showErrors\n\t              : true\n\t            ;\n\t            if(typeof field == 'string') {\n\t              module.verbose('Validating field', field);\n\t              fieldName = field;\n\t              field = validation[field];\n\t            }\n\t            var\n\t              identifier    = field.identifier || fieldName,\n\t              $field        = module.get.field(identifier),\n\t              $dependsField = (field.depends)\n\t                ? module.get.field(field.depends)\n\t                : false,\n\t              fieldValid  = true,\n\t              fieldErrors = []\n\t            ;\n\t            if(!field.identifier) {\n\t              module.debug('Using field name as identifier', identifier);\n\t              field.identifier = identifier;\n\t            }\n\t            if($field.prop('disabled')) {\n\t              module.debug('Field is disabled. Skipping', identifier);\n\t              fieldValid = true;\n\t            }\n\t            else if(field.optional && module.is.blank($field)){\n\t              module.debug('Field is optional and blank. Skipping', identifier);\n\t              fieldValid = true;\n\t            }\n\t            else if(field.depends && module.is.empty($dependsField)) {\n\t              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n\t              fieldValid = true;\n\t            }\n\t            else if(field.rules !== undefined) {\n\t              $.each(field.rules, function(index, rule) {\n\t                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n\t                  module.debug('Field is invalid', identifier, rule.type);\n\t                  fieldErrors.push(module.get.prompt(rule, field));\n\t                  fieldValid = false;\n\t                }\n\t              });\n\t            }\n\t            if(fieldValid) {\n\t              if(showErrors) {\n\t                module.remove.prompt(identifier, fieldErrors);\n\t                settings.onValid.call($field);\n\t              }\n\t            }\n\t            else {\n\t              if(showErrors) {\n\t                formErrors = formErrors.concat(fieldErrors);\n\t                module.add.prompt(identifier, fieldErrors);\n\t                settings.onInvalid.call($field, fieldErrors);\n\t              }\n\t              return false;\n\t            }\n\t            return true;\n\t          },\n\t\n\t          // takes validation rule and returns whether field passes rule\n\t          rule: function(field, rule) {\n\t            var\n\t              $field       = module.get.field(field.identifier),\n\t              type         = rule.type,\n\t              value        = $field.val(),\n\t              isValid      = true,\n\t              ancillary    = module.get.ancillaryValue(rule),\n\t              ruleName     = module.get.ruleName(rule),\n\t              ruleFunction = settings.rules[ruleName]\n\t            ;\n\t            if( !$.isFunction(ruleFunction) ) {\n\t              module.error(error.noRule, ruleName);\n\t              return;\n\t            }\n\t            // cast to string avoiding encoding special values\n\t            value = (value === undefined || value === '' || value === null)\n\t              ? ''\n\t              : $.trim(value + '')\n\t            ;\n\t            return ruleFunction.call($field, value, ancillary);\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            settings[name] = value;\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t      module.initialize();\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.form.settings = {\n\t\n\t  name              : 'Form',\n\t  namespace         : 'form',\n\t\n\t  debug             : false,\n\t  verbose           : false,\n\t  performance       : true,\n\t\n\t  fields            : false,\n\t\n\t  keyboardShortcuts : true,\n\t  on                : 'submit',\n\t  inline            : false,\n\t\n\t  delay             : 200,\n\t  revalidate        : true,\n\t\n\t  transition        : 'scale',\n\t  duration          : 200,\n\t\n\t  onValid           : function() {},\n\t  onInvalid         : function() {},\n\t  onSuccess         : function() { return true; },\n\t  onFailure         : function() { return false; },\n\t\n\t  metadata : {\n\t    defaultValue : 'default',\n\t    validate     : 'validate'\n\t  },\n\t\n\t  regExp: {\n\t    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\n\t    bracket : /\\[(.*)\\]/i,\n\t    decimal : /^\\d+\\.?\\d*$/,\n\t    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n\t    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n\t    flags   : /^\\/(.*)\\/(.*)?/,\n\t    integer : /^\\-?\\d+$/,\n\t    number  : /^\\-?\\d*(\\.\\d+)?$/,\n\t    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n\t  },\n\t\n\t  text: {\n\t    unspecifiedRule  : 'Please enter a valid value',\n\t    unspecifiedField : 'This field'\n\t  },\n\t\n\t  prompt: {\n\t    empty                : '{name} must have a value',\n\t    checked              : '{name} must be checked',\n\t    email                : '{name} must be a valid e-mail',\n\t    url                  : '{name} must be a valid url',\n\t    regExp               : '{name} is not formatted correctly',\n\t    integer              : '{name} must be an integer',\n\t    decimal              : '{name} must be a decimal number',\n\t    number               : '{name} must be set to a number',\n\t    is                   : '{name} must be \"{ruleValue}\"',\n\t    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n\t    not                  : '{name} cannot be set to \"{ruleValue}\"',\n\t    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n\t    contain              : '{name} cannot contain \"{ruleValue}\"',\n\t    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\n\t    doesntContain        : '{name} must contain  \"{ruleValue}\"',\n\t    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\n\t    minLength            : '{name} must be at least {ruleValue} characters',\n\t    length               : '{name} must be at least {ruleValue} characters',\n\t    exactLength          : '{name} must be exactly {ruleValue} characters',\n\t    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n\t    match                : '{name} must match {ruleValue} field',\n\t    different            : '{name} must have a different value than {ruleValue} field',\n\t    creditCard           : '{name} must be a valid credit card number',\n\t    minCount             : '{name} must have at least {ruleValue} choices',\n\t    exactCount           : '{name} must have exactly {ruleValue} choices',\n\t    maxCount             : '{name} must have {ruleValue} or less choices'\n\t  },\n\t\n\t  selector : {\n\t    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n\t    clear      : '.clear',\n\t    field      : 'input, textarea, select',\n\t    group      : '.field',\n\t    input      : 'input',\n\t    message    : '.error.message',\n\t    prompt     : '.prompt.label',\n\t    radio      : 'input[type=\"radio\"]',\n\t    reset      : '.reset:not([type=\"reset\"])',\n\t    submit     : '.submit:not([type=\"submit\"])',\n\t    uiCheckbox : '.ui.checkbox',\n\t    uiDropdown : '.ui.dropdown'\n\t  },\n\t\n\t  className : {\n\t    error   : 'error',\n\t    label   : 'ui prompt label',\n\t    pressed : 'down',\n\t    success : 'success'\n\t  },\n\t\n\t  error: {\n\t    identifier : 'You must specify a string identifier for each field',\n\t    method     : 'The method you called is not defined.',\n\t    noRule     : 'There is no rule matching the one you specified',\n\t    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n\t  },\n\t\n\t  templates: {\n\t\n\t    // template that produces error message\n\t    error: function(errors) {\n\t      var\n\t        html = '<ul class=\"list\">'\n\t      ;\n\t      $.each(errors, function(index, value) {\n\t        html += '<li>' + value + '</li>';\n\t      });\n\t      html += '</ul>';\n\t      return $(html);\n\t    },\n\t\n\t    // template that produces label\n\t    prompt: function(errors) {\n\t      return $('<div/>')\n\t        .addClass('ui basic red pointing prompt label')\n\t        .html(errors[0])\n\t      ;\n\t    }\n\t  },\n\t\n\t  rules: {\n\t\n\t    // is not empty or blank string\n\t    empty: function(value) {\n\t      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n\t    },\n\t\n\t    // checkbox checked\n\t    checked: function() {\n\t      return ($(this).filter(':checked').length > 0);\n\t    },\n\t\n\t    // is most likely an email\n\t    email: function(value){\n\t      return $.fn.form.settings.regExp.email.test(value);\n\t    },\n\t\n\t    // value is most likely url\n\t    url: function(value) {\n\t      return $.fn.form.settings.regExp.url.test(value);\n\t    },\n\t\n\t    // matches specified regExp\n\t    regExp: function(value, regExp) {\n\t      if(regExp instanceof RegExp) {\n\t        return value.match(regExp);\n\t      }\n\t      var\n\t        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n\t        flags\n\t      ;\n\t      // regular expression specified as /baz/gi (flags)\n\t      if(regExpParts) {\n\t        regExp = (regExpParts.length >= 2)\n\t          ? regExpParts[1]\n\t          : regExp\n\t        ;\n\t        flags = (regExpParts.length >= 3)\n\t          ? regExpParts[2]\n\t          : ''\n\t        ;\n\t      }\n\t      return value.match( new RegExp(regExp, flags) );\n\t    },\n\t\n\t    // is valid integer or matches range\n\t    integer: function(value, range) {\n\t      var\n\t        intRegExp = $.fn.form.settings.regExp.integer,\n\t        min,\n\t        max,\n\t        parts\n\t      ;\n\t      if( !range || ['', '..'].indexOf(range) !== -1) {\n\t        // do nothing\n\t      }\n\t      else if(range.indexOf('..') == -1) {\n\t        if(intRegExp.test(range)) {\n\t          min = max = range - 0;\n\t        }\n\t      }\n\t      else {\n\t        parts = range.split('..', 2);\n\t        if(intRegExp.test(parts[0])) {\n\t          min = parts[0] - 0;\n\t        }\n\t        if(intRegExp.test(parts[1])) {\n\t          max = parts[1] - 0;\n\t        }\n\t      }\n\t      return (\n\t        intRegExp.test(value) &&\n\t        (min === undefined || value >= min) &&\n\t        (max === undefined || value <= max)\n\t      );\n\t    },\n\t\n\t    // is valid number (with decimal)\n\t    decimal: function(value) {\n\t      return $.fn.form.settings.regExp.decimal.test(value);\n\t    },\n\t\n\t    // is valid number\n\t    number: function(value) {\n\t      return $.fn.form.settings.regExp.number.test(value);\n\t    },\n\t\n\t    // is value (case insensitive)\n\t    is: function(value, text) {\n\t      text = (typeof text == 'string')\n\t        ? text.toLowerCase()\n\t        : text\n\t      ;\n\t      value = (typeof value == 'string')\n\t        ? value.toLowerCase()\n\t        : value\n\t      ;\n\t      return (value == text);\n\t    },\n\t\n\t    // is value\n\t    isExactly: function(value, text) {\n\t      return (value == text);\n\t    },\n\t\n\t    // value is not another value (case insensitive)\n\t    not: function(value, notValue) {\n\t      value = (typeof value == 'string')\n\t        ? value.toLowerCase()\n\t        : value\n\t      ;\n\t      notValue = (typeof notValue == 'string')\n\t        ? notValue.toLowerCase()\n\t        : notValue\n\t      ;\n\t      return (value != notValue);\n\t    },\n\t\n\t    // value is not another value (case sensitive)\n\t    notExactly: function(value, notValue) {\n\t      return (value != notValue);\n\t    },\n\t\n\t    // value contains text (insensitive)\n\t    contains: function(value, text) {\n\t      // escape regex characters\n\t      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n\t      return (value.search( new RegExp(text, 'i') ) !== -1);\n\t    },\n\t\n\t    // value contains text (case sensitive)\n\t    containsExactly: function(value, text) {\n\t      // escape regex characters\n\t      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n\t      return (value.search( new RegExp(text) ) !== -1);\n\t    },\n\t\n\t    // value contains text (insensitive)\n\t    doesntContain: function(value, text) {\n\t      // escape regex characters\n\t      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n\t      return (value.search( new RegExp(text, 'i') ) === -1);\n\t    },\n\t\n\t    // value contains text (case sensitive)\n\t    doesntContainExactly: function(value, text) {\n\t      // escape regex characters\n\t      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n\t      return (value.search( new RegExp(text) ) === -1);\n\t    },\n\t\n\t    // is at least string length\n\t    minLength: function(value, requiredLength) {\n\t      return (value !== undefined)\n\t        ? (value.length >= requiredLength)\n\t        : false\n\t      ;\n\t    },\n\t\n\t    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n\t    length: function(value, requiredLength) {\n\t      return (value !== undefined)\n\t        ? (value.length >= requiredLength)\n\t        : false\n\t      ;\n\t    },\n\t\n\t    // is exactly length\n\t    exactLength: function(value, requiredLength) {\n\t      return (value !== undefined)\n\t        ? (value.length == requiredLength)\n\t        : false\n\t      ;\n\t    },\n\t\n\t    // is less than length\n\t    maxLength: function(value, maxLength) {\n\t      return (value !== undefined)\n\t        ? (value.length <= maxLength)\n\t        : false\n\t      ;\n\t    },\n\t\n\t    // matches another field\n\t    match: function(value, identifier) {\n\t      var\n\t        $form = $(this),\n\t        matchingValue\n\t      ;\n\t      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n\t        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n\t      }\n\t      else if($('#' + identifier).length > 0) {\n\t        matchingValue = $('#' + identifier).val();\n\t      }\n\t      else if($('[name=\"' + identifier +'\"]').length > 0) {\n\t        matchingValue = $('[name=\"' + identifier + '\"]').val();\n\t      }\n\t      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n\t        matchingValue = $('[name=\"' + identifier +'[]\"]');\n\t      }\n\t      return (matchingValue !== undefined)\n\t        ? ( value.toString() == matchingValue.toString() )\n\t        : false\n\t      ;\n\t    },\n\t\n\t    // different than another field\n\t    different: function(value, identifier) {\n\t      // use either id or name of field\n\t      var\n\t        $form = $(this),\n\t        matchingValue\n\t      ;\n\t      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n\t        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n\t      }\n\t      else if($('#' + identifier).length > 0) {\n\t        matchingValue = $('#' + identifier).val();\n\t      }\n\t      else if($('[name=\"' + identifier +'\"]').length > 0) {\n\t        matchingValue = $('[name=\"' + identifier + '\"]').val();\n\t      }\n\t      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n\t        matchingValue = $('[name=\"' + identifier +'[]\"]');\n\t      }\n\t      return (matchingValue !== undefined)\n\t        ? ( value.toString() !== matchingValue.toString() )\n\t        : false\n\t      ;\n\t    },\n\t\n\t    creditCard: function(cardNumber, cardTypes) {\n\t      var\n\t        cards = {\n\t          visa: {\n\t            pattern : /^4/,\n\t            length  : [16]\n\t          },\n\t          amex: {\n\t            pattern : /^3[47]/,\n\t            length  : [15]\n\t          },\n\t          mastercard: {\n\t            pattern : /^5[1-5]/,\n\t            length  : [16]\n\t          },\n\t          discover: {\n\t            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n\t            length  : [16]\n\t          },\n\t          unionPay: {\n\t            pattern : /^(62|88)/,\n\t            length  : [16, 17, 18, 19]\n\t          },\n\t          jcb: {\n\t            pattern : /^35(2[89]|[3-8][0-9])/,\n\t            length  : [16]\n\t          },\n\t          maestro: {\n\t            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n\t            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n\t          },\n\t          dinersClub: {\n\t            pattern : /^(30[0-5]|^36)/,\n\t            length  : [14]\n\t          },\n\t          laser: {\n\t            pattern : /^(6304|670[69]|6771)/,\n\t            length  : [16, 17, 18, 19]\n\t          },\n\t          visaElectron: {\n\t            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n\t            length  : [16]\n\t          }\n\t        },\n\t        valid         = {},\n\t        validCard     = false,\n\t        requiredTypes = (typeof cardTypes == 'string')\n\t          ? cardTypes.split(',')\n\t          : false,\n\t        unionPay,\n\t        validation\n\t      ;\n\t\n\t      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n\t        return;\n\t      }\n\t\n\t      // allow dashes in card\n\t      cardNumber = cardNumber.replace(/[\\-]/g, '');\n\t\n\t      // verify card types\n\t      if(requiredTypes) {\n\t        $.each(requiredTypes, function(index, type){\n\t          // verify each card type\n\t          validation = cards[type];\n\t          if(validation) {\n\t            valid = {\n\t              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n\t              pattern : (cardNumber.search(validation.pattern) !== -1)\n\t            };\n\t            if(valid.length && valid.pattern) {\n\t              validCard = true;\n\t            }\n\t          }\n\t        });\n\t\n\t        if(!validCard) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      // skip luhn for UnionPay\n\t      unionPay = {\n\t        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n\t        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n\t      };\n\t      if(unionPay.number && unionPay.pattern) {\n\t        return true;\n\t      }\n\t\n\t      // verify luhn, adapted from  <https://gist.github.com/2134376>\n\t      var\n\t        length        = cardNumber.length,\n\t        multiple      = 0,\n\t        producedValue = [\n\t          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n\t          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n\t        ],\n\t        sum           = 0\n\t      ;\n\t      while (length--) {\n\t        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n\t        multiple ^= 1;\n\t      }\n\t      return (sum % 10 === 0 && sum > 0);\n\t    },\n\t\n\t    minCount: function(value, minCount) {\n\t      if(minCount == 0) {\n\t        return true;\n\t      }\n\t      if(minCount == 1) {\n\t        return (value !== '');\n\t      }\n\t      return (value.split(',').length >= minCount);\n\t    },\n\t\n\t    exactCount: function(value, exactCount) {\n\t      if(exactCount == 0) {\n\t        return (value === '');\n\t      }\n\t      if(exactCount == 1) {\n\t        return (value !== '' && value.search(',') === -1);\n\t      }\n\t      return (value.split(',').length == exactCount);\n\t    },\n\t\n\t    maxCount: function(value, maxCount) {\n\t      if(maxCount == 0) {\n\t        return false;\n\t      }\n\t      if(maxCount == 1) {\n\t        return (value.search(',') === -1);\n\t      }\n\t      return (value.split(',').length <= maxCount);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Accordion\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.accordion = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    requestAnimationFrame = window.requestAnimationFrame\n\t      || window.mozRequestAnimationFrame\n\t      || window.webkitRequestAnimationFrame\n\t      || window.msRequestAnimationFrame\n\t      || function(callback) { setTimeout(callback, 0); },\n\t\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\n\t          : $.extend({}, $.fn.accordion.settings),\n\t\n\t        className       = settings.className,\n\t        namespace       = settings.namespace,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t        moduleSelector  = $allModules.selector || '',\n\t\n\t        $module  = $(this),\n\t        $title   = $module.find(selector.title),\n\t        $content = $module.find(selector.content),\n\t\n\t        element  = this,\n\t        instance = $module.data(moduleNamespace),\n\t        observer,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing', $module);\n\t          module.bind.events();\n\t          if(settings.observeChanges) {\n\t            module.observeChanges();\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.debug('Destroying previous instance', $module);\n\t          $module\n\t            .off(eventNamespace)\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          $title   = $module.find(selector.title);\n\t          $content = $module.find(selector.content);\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            observer = new MutationObserver(function(mutations) {\n\t              module.debug('DOM tree modified, updating selector cache');\n\t              module.refresh();\n\t            });\n\t            observer.observe(element, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            module.debug('Setting up mutation observer', observer);\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.debug('Binding delegated events');\n\t            $module\n\t              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\n\t            ;\n\t          }\n\t        },\n\t\n\t        event: {\n\t          click: function() {\n\t            module.toggle.call(this);\n\t          }\n\t        },\n\t\n\t        toggle: function(query) {\n\t          var\n\t            $activeTitle = (query !== undefined)\n\t              ? (typeof query === 'number')\n\t                ? $title.eq(query)\n\t                : $(query).closest(selector.title)\n\t              : $(this).closest(selector.title),\n\t            $activeContent = $activeTitle.next($content),\n\t            isAnimating = $activeContent.hasClass(className.animating),\n\t            isActive    = $activeContent.hasClass(className.active),\n\t            isOpen      = (isActive && !isAnimating),\n\t            isOpening   = (!isActive && isAnimating)\n\t          ;\n\t          module.debug('Toggling visibility of content', $activeTitle);\n\t          if(isOpen || isOpening) {\n\t            if(settings.collapsible) {\n\t              module.close.call($activeTitle);\n\t            }\n\t            else {\n\t              module.debug('Cannot close accordion content collapsing is disabled');\n\t            }\n\t          }\n\t          else {\n\t            module.open.call($activeTitle);\n\t          }\n\t        },\n\t\n\t        open: function(query) {\n\t          var\n\t            $activeTitle = (query !== undefined)\n\t              ? (typeof query === 'number')\n\t                ? $title.eq(query)\n\t                : $(query).closest(selector.title)\n\t              : $(this).closest(selector.title),\n\t            $activeContent = $activeTitle.next($content),\n\t            isAnimating = $activeContent.hasClass(className.animating),\n\t            isActive    = $activeContent.hasClass(className.active),\n\t            isOpen      = (isActive || isAnimating)\n\t          ;\n\t          if(isOpen) {\n\t            module.debug('Accordion already open, skipping', $activeContent);\n\t            return;\n\t          }\n\t          module.debug('Opening accordion content', $activeTitle);\n\t          settings.onOpening.call($activeContent);\n\t          if(settings.exclusive) {\n\t            module.closeOthers.call($activeTitle);\n\t          }\n\t          $activeTitle\n\t            .addClass(className.active)\n\t          ;\n\t          $activeContent\n\t            .stop(true, true)\n\t            .addClass(className.animating)\n\t          ;\n\t          if(settings.animateChildren) {\n\t            if($.fn.transition !== undefined && $module.transition('is supported')) {\n\t              $activeContent\n\t                .children()\n\t                  .transition({\n\t                    animation   : 'fade in',\n\t                    queue       : false,\n\t                    useFailSafe : true,\n\t                    debug       : settings.debug,\n\t                    verbose     : settings.verbose,\n\t                    duration    : settings.duration\n\t                  })\n\t              ;\n\t            }\n\t            else {\n\t              $activeContent\n\t                .children()\n\t                  .stop(true, true)\n\t                  .animate({\n\t                    opacity: 1\n\t                  }, settings.duration, module.resetOpacity)\n\t              ;\n\t            }\n\t          }\n\t          $activeContent\n\t            .slideDown(settings.duration, settings.easing, function() {\n\t              $activeContent\n\t                .removeClass(className.animating)\n\t                .addClass(className.active)\n\t              ;\n\t              module.reset.display.call(this);\n\t              settings.onOpen.call(this);\n\t              settings.onChange.call(this);\n\t            })\n\t          ;\n\t        },\n\t\n\t        close: function(query) {\n\t          var\n\t            $activeTitle = (query !== undefined)\n\t              ? (typeof query === 'number')\n\t                ? $title.eq(query)\n\t                : $(query).closest(selector.title)\n\t              : $(this).closest(selector.title),\n\t            $activeContent = $activeTitle.next($content),\n\t            isAnimating    = $activeContent.hasClass(className.animating),\n\t            isActive       = $activeContent.hasClass(className.active),\n\t            isOpening      = (!isActive && isAnimating),\n\t            isClosing      = (isActive && isAnimating)\n\t          ;\n\t          if((isActive || isOpening) && !isClosing) {\n\t            module.debug('Closing accordion content', $activeContent);\n\t            settings.onClosing.call($activeContent);\n\t            $activeTitle\n\t              .removeClass(className.active)\n\t            ;\n\t            $activeContent\n\t              .stop(true, true)\n\t              .addClass(className.animating)\n\t            ;\n\t            if(settings.animateChildren) {\n\t              if($.fn.transition !== undefined && $module.transition('is supported')) {\n\t                $activeContent\n\t                  .children()\n\t                    .transition({\n\t                      animation   : 'fade out',\n\t                      queue       : false,\n\t                      useFailSafe : true,\n\t                      debug       : settings.debug,\n\t                      verbose     : settings.verbose,\n\t                      duration    : settings.duration\n\t                    })\n\t                ;\n\t              }\n\t              else {\n\t                $activeContent\n\t                  .children()\n\t                    .stop(true, true)\n\t                    .animate({\n\t                      opacity: 0\n\t                    }, settings.duration, module.resetOpacity)\n\t                ;\n\t              }\n\t            }\n\t            $activeContent\n\t              .slideUp(settings.duration, settings.easing, function() {\n\t                $activeContent\n\t                  .removeClass(className.animating)\n\t                  .removeClass(className.active)\n\t                ;\n\t                module.reset.display.call(this);\n\t                settings.onClose.call(this);\n\t                settings.onChange.call(this);\n\t              })\n\t            ;\n\t          }\n\t        },\n\t\n\t        closeOthers: function(index) {\n\t          var\n\t            $activeTitle = (index !== undefined)\n\t              ? $title.eq(index)\n\t              : $(this).closest(selector.title),\n\t            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\n\t            $activeAccordion = $activeTitle.closest(selector.accordion),\n\t            activeSelector   = selector.title + '.' + className.active + ':visible',\n\t            activeContent    = selector.content + '.' + className.active + ':visible',\n\t            $openTitles,\n\t            $nestedTitles,\n\t            $openContents\n\t          ;\n\t          if(settings.closeNested) {\n\t            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n\t            $openContents = $openTitles.next($content);\n\t          }\n\t          else {\n\t            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n\t            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\n\t            $openTitles   = $openTitles.not($nestedTitles);\n\t            $openContents = $openTitles.next($content);\n\t          }\n\t          if( ($openTitles.length > 0) ) {\n\t            module.debug('Exclusive enabled, closing other content', $openTitles);\n\t            $openTitles\n\t              .removeClass(className.active)\n\t            ;\n\t            $openContents\n\t              .removeClass(className.animating)\n\t              .stop(true, true)\n\t            ;\n\t            if(settings.animateChildren) {\n\t              if($.fn.transition !== undefined && $module.transition('is supported')) {\n\t                $openContents\n\t                  .children()\n\t                    .transition({\n\t                      animation   : 'fade out',\n\t                      useFailSafe : true,\n\t                      debug       : settings.debug,\n\t                      verbose     : settings.verbose,\n\t                      duration    : settings.duration\n\t                    })\n\t                ;\n\t              }\n\t              else {\n\t                $openContents\n\t                  .children()\n\t                    .stop(true, true)\n\t                    .animate({\n\t                      opacity: 0\n\t                    }, settings.duration, module.resetOpacity)\n\t                ;\n\t              }\n\t            }\n\t            $openContents\n\t              .slideUp(settings.duration , settings.easing, function() {\n\t                $(this).removeClass(className.active);\n\t                module.reset.display.call(this);\n\t              })\n\t            ;\n\t          }\n\t        },\n\t\n\t        reset: {\n\t\n\t          display: function() {\n\t            module.verbose('Removing inline display from element', this);\n\t            $(this).css('display', '');\n\t            if( $(this).attr('style') === '') {\n\t              $(this)\n\t                .attr('style', '')\n\t                .removeAttr('style')\n\t              ;\n\t            }\n\t          },\n\t\n\t          opacity: function() {\n\t            module.verbose('Removing inline opacity from element', this);\n\t            $(this).css('opacity', '');\n\t            if( $(this).attr('style') === '') {\n\t              $(this)\n\t                .attr('style', '')\n\t                .removeAttr('style')\n\t              ;\n\t            }\n\t          },\n\t\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          module.debug('Changing internal', name, value);\n\t          if(value !== undefined) {\n\t            if( $.isPlainObject(name) ) {\n\t              $.extend(true, module, name);\n\t            }\n\t            else {\n\t              module[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.accordion.settings = {\n\t\n\t  name            : 'Accordion',\n\t  namespace       : 'accordion',\n\t\n\t  silent          : false,\n\t  debug           : false,\n\t  verbose         : false,\n\t  performance     : true,\n\t\n\t  on              : 'click', // event on title that opens accordion\n\t\n\t  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\n\t\n\t  exclusive       : true,  // whether a single accordion content panel should be open at once\n\t  collapsible     : true,  // whether accordion content can be closed\n\t  closeNested     : false, // whether nested content should be closed when a panel is closed\n\t  animateChildren : true,  // whether children opacity should be animated\n\t\n\t  duration        : 350, // duration of animation\n\t  easing          : 'easeOutQuad', // easing equation for animation\n\t\n\t\n\t  onOpening       : function(){}, // callback before open animation\n\t  onOpen          : function(){}, // callback after open animation\n\t  onClosing       : function(){}, // callback before closing animation\n\t  onClose         : function(){}, // callback after closing animation\n\t  onChange        : function(){}, // callback after closing or opening animation\n\t\n\t  error: {\n\t    method : 'The method you called is not defined'\n\t  },\n\t\n\t  className   : {\n\t    active    : 'active',\n\t    animating : 'animating'\n\t  },\n\t\n\t  selector    : {\n\t    accordion : '.accordion',\n\t    title     : '.title',\n\t    trigger   : '.title',\n\t    content   : '.content'\n\t  }\n\t\n\t};\n\t\n\t// Adds easing\n\t$.extend( $.easing, {\n\t  easeOutQuad: function (x, t, b, c, d) {\n\t    return -c *(t/=d)*(t-2) + b;\n\t  }\n\t});\n\t\n\t})( jQuery, window, document );\n\t\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Checkbox\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.checkbox = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\n\t\n\t        className       = settings.className,\n\t        namespace       = settings.namespace,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $module         = $(this),\n\t        $label          = $(this).children(selector.label),\n\t        $input          = $(this).children(selector.input),\n\t        input           = $input[0],\n\t\n\t        initialLoad     = false,\n\t        shortcutPressed = false,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        observer,\n\t        element         = this,\n\t        module\n\t      ;\n\t\n\t      module      = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing checkbox', settings);\n\t\n\t          module.create.label();\n\t          module.bind.events();\n\t\n\t          module.set.tabbable();\n\t          module.hide.input();\n\t\n\t          module.observeChanges();\n\t          module.instantiate();\n\t          module.setup();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying module');\n\t          module.unbind.events();\n\t          module.show.input();\n\t          $module.removeData(moduleNamespace);\n\t        },\n\t\n\t        fix: {\n\t          reference: function() {\n\t            if( $module.is(selector.input) ) {\n\t              module.debug('Behavior called on <input> adjusting invoked element');\n\t              $module = $module.closest(selector.checkbox);\n\t              module.refresh();\n\t            }\n\t          }\n\t        },\n\t\n\t        setup: function() {\n\t          module.set.initialLoad();\n\t          if( module.is.indeterminate() ) {\n\t            module.debug('Initial value is indeterminate');\n\t            module.indeterminate();\n\t          }\n\t          else if( module.is.checked() ) {\n\t            module.debug('Initial value is checked');\n\t            module.check();\n\t          }\n\t          else {\n\t            module.debug('Initial value is unchecked');\n\t            module.uncheck();\n\t          }\n\t          module.remove.initialLoad();\n\t        },\n\t\n\t        refresh: function() {\n\t          $label = $module.children(selector.label);\n\t          $input = $module.children(selector.input);\n\t          input  = $input[0];\n\t        },\n\t\n\t        hide: {\n\t          input: function() {\n\t            module.verbose('Modifying <input> z-index to be unselectable');\n\t            $input.addClass(className.hidden);\n\t          }\n\t        },\n\t        show: {\n\t          input: function() {\n\t            module.verbose('Modifying <input> z-index to be selectable');\n\t            $input.removeClass(className.hidden);\n\t          }\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            observer = new MutationObserver(function(mutations) {\n\t              module.debug('DOM tree modified, updating selector cache');\n\t              module.refresh();\n\t            });\n\t            observer.observe(element, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            module.debug('Setting up mutation observer', observer);\n\t          }\n\t        },\n\t\n\t        attachEvents: function(selector, event) {\n\t          var\n\t            $element = $(selector)\n\t          ;\n\t          event = $.isFunction(module[event])\n\t            ? module[event]\n\t            : module.toggle\n\t          ;\n\t          if($element.length > 0) {\n\t            module.debug('Attaching checkbox events to element', selector, event);\n\t            $element\n\t              .on('click' + eventNamespace, event)\n\t            ;\n\t          }\n\t          else {\n\t            module.error(error.notFound);\n\t          }\n\t        },\n\t\n\t        event: {\n\t          click: function(event) {\n\t            var\n\t              $target = $(event.target)\n\t            ;\n\t            if( $target.is(selector.input) ) {\n\t              module.verbose('Using default check action on initialized checkbox');\n\t              return;\n\t            }\n\t            if( $target.is(selector.link) ) {\n\t              module.debug('Clicking link inside checkbox, skipping toggle');\n\t              return;\n\t            }\n\t            module.toggle();\n\t            $input.focus();\n\t            event.preventDefault();\n\t          },\n\t          keydown: function(event) {\n\t            var\n\t              key     = event.which,\n\t              keyCode = {\n\t                enter  : 13,\n\t                space  : 32,\n\t                escape : 27\n\t              }\n\t            ;\n\t            if(key == keyCode.escape) {\n\t              module.verbose('Escape key pressed blurring field');\n\t              $input.blur();\n\t              shortcutPressed = true;\n\t            }\n\t            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\n\t              module.verbose('Enter/space key pressed, toggling checkbox');\n\t              module.toggle();\n\t              shortcutPressed = true;\n\t            }\n\t            else {\n\t              shortcutPressed = false;\n\t            }\n\t          },\n\t          keyup: function(event) {\n\t            if(shortcutPressed) {\n\t              event.preventDefault();\n\t            }\n\t          }\n\t        },\n\t\n\t        check: function() {\n\t          if( !module.should.allowCheck() ) {\n\t            return;\n\t          }\n\t          module.debug('Checking checkbox', $input);\n\t          module.set.checked();\n\t          if( !module.should.ignoreCallbacks() ) {\n\t            settings.onChecked.call(input);\n\t            settings.onChange.call(input);\n\t          }\n\t        },\n\t\n\t        uncheck: function() {\n\t          if( !module.should.allowUncheck() ) {\n\t            return;\n\t          }\n\t          module.debug('Unchecking checkbox');\n\t          module.set.unchecked();\n\t          if( !module.should.ignoreCallbacks() ) {\n\t            settings.onUnchecked.call(input);\n\t            settings.onChange.call(input);\n\t          }\n\t        },\n\t\n\t        indeterminate: function() {\n\t          if( module.should.allowIndeterminate() ) {\n\t            module.debug('Checkbox is already indeterminate');\n\t            return;\n\t          }\n\t          module.debug('Making checkbox indeterminate');\n\t          module.set.indeterminate();\n\t          if( !module.should.ignoreCallbacks() ) {\n\t            settings.onIndeterminate.call(input);\n\t            settings.onChange.call(input);\n\t          }\n\t        },\n\t\n\t        determinate: function() {\n\t          if( module.should.allowDeterminate() ) {\n\t            module.debug('Checkbox is already determinate');\n\t            return;\n\t          }\n\t          module.debug('Making checkbox determinate');\n\t          module.set.determinate();\n\t          if( !module.should.ignoreCallbacks() ) {\n\t            settings.onDeterminate.call(input);\n\t            settings.onChange.call(input);\n\t          }\n\t        },\n\t\n\t        enable: function() {\n\t          if( module.is.enabled() ) {\n\t            module.debug('Checkbox is already enabled');\n\t            return;\n\t          }\n\t          module.debug('Enabling checkbox');\n\t          module.set.enabled();\n\t          settings.onEnable.call(input);\n\t          // preserve legacy callbacks\n\t          settings.onEnabled.call(input);\n\t        },\n\t\n\t        disable: function() {\n\t          if( module.is.disabled() ) {\n\t            module.debug('Checkbox is already disabled');\n\t            return;\n\t          }\n\t          module.debug('Disabling checkbox');\n\t          module.set.disabled();\n\t          settings.onDisable.call(input);\n\t          // preserve legacy callbacks\n\t          settings.onDisabled.call(input);\n\t        },\n\t\n\t        get: {\n\t          radios: function() {\n\t            var\n\t              name = module.get.name()\n\t            ;\n\t            return $('input[name=\"' + name + '\"]').closest(selector.checkbox);\n\t          },\n\t          otherRadios: function() {\n\t            return module.get.radios().not($module);\n\t          },\n\t          name: function() {\n\t            return $input.attr('name');\n\t          }\n\t        },\n\t\n\t        is: {\n\t          initialLoad: function() {\n\t            return initialLoad;\n\t          },\n\t          radio: function() {\n\t            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\n\t          },\n\t          indeterminate: function() {\n\t            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\n\t          },\n\t          checked: function() {\n\t            return $input.prop('checked') !== undefined && $input.prop('checked');\n\t          },\n\t          disabled: function() {\n\t            return $input.prop('disabled') !== undefined && $input.prop('disabled');\n\t          },\n\t          enabled: function() {\n\t            return !module.is.disabled();\n\t          },\n\t          determinate: function() {\n\t            return !module.is.indeterminate();\n\t          },\n\t          unchecked: function() {\n\t            return !module.is.checked();\n\t          }\n\t        },\n\t\n\t        should: {\n\t          allowCheck: function() {\n\t            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\n\t              module.debug('Should not allow check, checkbox is already checked');\n\t              return false;\n\t            }\n\t            if(settings.beforeChecked.apply(input) === false) {\n\t              module.debug('Should not allow check, beforeChecked cancelled');\n\t              return false;\n\t            }\n\t            return true;\n\t          },\n\t          allowUncheck: function() {\n\t            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\n\t              module.debug('Should not allow uncheck, checkbox is already unchecked');\n\t              return false;\n\t            }\n\t            if(settings.beforeUnchecked.apply(input) === false) {\n\t              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\n\t              return false;\n\t            }\n\t            return true;\n\t          },\n\t          allowIndeterminate: function() {\n\t            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\n\t              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\n\t              return false;\n\t            }\n\t            if(settings.beforeIndeterminate.apply(input) === false) {\n\t              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\n\t              return false;\n\t            }\n\t            return true;\n\t          },\n\t          allowDeterminate: function() {\n\t            if(module.is.determinate() && !module.should.forceCallbacks() ) {\n\t              module.debug('Should not allow determinate, checkbox is already determinate');\n\t              return false;\n\t            }\n\t            if(settings.beforeDeterminate.apply(input) === false) {\n\t              module.debug('Should not allow determinate, beforeDeterminate cancelled');\n\t              return false;\n\t            }\n\t            return true;\n\t          },\n\t          forceCallbacks: function() {\n\t            return (module.is.initialLoad() && settings.fireOnInit);\n\t          },\n\t          ignoreCallbacks: function() {\n\t            return (initialLoad && !settings.fireOnInit);\n\t          }\n\t        },\n\t\n\t        can: {\n\t          change: function() {\n\t            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\n\t          },\n\t          uncheck: function() {\n\t            return (typeof settings.uncheckable === 'boolean')\n\t              ? settings.uncheckable\n\t              : !module.is.radio()\n\t            ;\n\t          }\n\t        },\n\t\n\t        set: {\n\t          initialLoad: function() {\n\t            initialLoad = true;\n\t          },\n\t          checked: function() {\n\t            module.verbose('Setting class to checked');\n\t            $module\n\t              .removeClass(className.indeterminate)\n\t              .addClass(className.checked)\n\t            ;\n\t            if( module.is.radio() ) {\n\t              module.uncheckOthers();\n\t            }\n\t            if(!module.is.indeterminate() && module.is.checked()) {\n\t              module.debug('Input is already checked, skipping input property change');\n\t              return;\n\t            }\n\t            module.verbose('Setting state to checked', input);\n\t            $input\n\t              .prop('indeterminate', false)\n\t              .prop('checked', true)\n\t            ;\n\t            module.trigger.change();\n\t          },\n\t          unchecked: function() {\n\t            module.verbose('Removing checked class');\n\t            $module\n\t              .removeClass(className.indeterminate)\n\t              .removeClass(className.checked)\n\t            ;\n\t            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\n\t              module.debug('Input is already unchecked');\n\t              return;\n\t            }\n\t            module.debug('Setting state to unchecked');\n\t            $input\n\t              .prop('indeterminate', false)\n\t              .prop('checked', false)\n\t            ;\n\t            module.trigger.change();\n\t          },\n\t          indeterminate: function() {\n\t            module.verbose('Setting class to indeterminate');\n\t            $module\n\t              .addClass(className.indeterminate)\n\t            ;\n\t            if( module.is.indeterminate() ) {\n\t              module.debug('Input is already indeterminate, skipping input property change');\n\t              return;\n\t            }\n\t            module.debug('Setting state to indeterminate');\n\t            $input\n\t              .prop('indeterminate', true)\n\t            ;\n\t            module.trigger.change();\n\t          },\n\t          determinate: function() {\n\t            module.verbose('Removing indeterminate class');\n\t            $module\n\t              .removeClass(className.indeterminate)\n\t            ;\n\t            if( module.is.determinate() ) {\n\t              module.debug('Input is already determinate, skipping input property change');\n\t              return;\n\t            }\n\t            module.debug('Setting state to determinate');\n\t            $input\n\t              .prop('indeterminate', false)\n\t            ;\n\t          },\n\t          disabled: function() {\n\t            module.verbose('Setting class to disabled');\n\t            $module\n\t              .addClass(className.disabled)\n\t            ;\n\t            if( module.is.disabled() ) {\n\t              module.debug('Input is already disabled, skipping input property change');\n\t              return;\n\t            }\n\t            module.debug('Setting state to disabled');\n\t            $input\n\t              .prop('disabled', 'disabled')\n\t            ;\n\t            module.trigger.change();\n\t          },\n\t          enabled: function() {\n\t            module.verbose('Removing disabled class');\n\t            $module.removeClass(className.disabled);\n\t            if( module.is.enabled() ) {\n\t              module.debug('Input is already enabled, skipping input property change');\n\t              return;\n\t            }\n\t            module.debug('Setting state to enabled');\n\t            $input\n\t              .prop('disabled', false)\n\t            ;\n\t            module.trigger.change();\n\t          },\n\t          tabbable: function() {\n\t            module.verbose('Adding tabindex to checkbox');\n\t            if( $input.attr('tabindex') === undefined) {\n\t              $input.attr('tabindex', 0);\n\t            }\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          initialLoad: function() {\n\t            initialLoad = false;\n\t          }\n\t        },\n\t\n\t        trigger: {\n\t          change: function() {\n\t            var\n\t              events       = document.createEvent('HTMLEvents'),\n\t              inputElement = $input[0]\n\t            ;\n\t            if(inputElement) {\n\t              module.verbose('Triggering native change event');\n\t              events.initEvent('change', true, false);\n\t              inputElement.dispatchEvent(events);\n\t            }\n\t          }\n\t        },\n\t\n\t\n\t        create: {\n\t          label: function() {\n\t            if($input.prevAll(selector.label).length > 0) {\n\t              $input.prev(selector.label).detach().insertAfter($input);\n\t              module.debug('Moving existing label', $label);\n\t            }\n\t            else if( !module.has.label() ) {\n\t              $label = $('<label>').insertAfter($input);\n\t              module.debug('Creating label', $label);\n\t            }\n\t          }\n\t        },\n\t\n\t        has: {\n\t          label: function() {\n\t            return ($label.length > 0);\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.verbose('Attaching checkbox events');\n\t            $module\n\t              .on('click'   + eventNamespace, module.event.click)\n\t              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\n\t              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\n\t            ;\n\t          }\n\t        },\n\t\n\t        unbind: {\n\t          events: function() {\n\t            module.debug('Removing events');\n\t            $module\n\t              .off(eventNamespace)\n\t            ;\n\t          }\n\t        },\n\t\n\t        uncheckOthers: function() {\n\t          var\n\t            $radios = module.get.otherRadios()\n\t          ;\n\t          module.debug('Unchecking other radios', $radios);\n\t          $radios.removeClass(className.checked);\n\t        },\n\t\n\t        toggle: function() {\n\t          if( !module.can.change() ) {\n\t            if(!module.is.radio()) {\n\t              module.debug('Checkbox is read-only or disabled, ignoring toggle');\n\t            }\n\t            return;\n\t          }\n\t          if( module.is.indeterminate() || module.is.unchecked() ) {\n\t            module.debug('Currently unchecked');\n\t            module.check();\n\t          }\n\t          else if( module.is.checked() && module.can.uncheck() ) {\n\t            module.debug('Currently checked');\n\t            module.uncheck();\n\t          }\n\t        },\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.checkbox.settings = {\n\t\n\t  name                : 'Checkbox',\n\t  namespace           : 'checkbox',\n\t\n\t  silent              : false,\n\t  debug               : false,\n\t  verbose             : true,\n\t  performance         : true,\n\t\n\t  // delegated event context\n\t  uncheckable         : 'auto',\n\t  fireOnInit          : false,\n\t\n\t  onChange            : function(){},\n\t\n\t  beforeChecked       : function(){},\n\t  beforeUnchecked     : function(){},\n\t  beforeDeterminate   : function(){},\n\t  beforeIndeterminate : function(){},\n\t\n\t  onChecked           : function(){},\n\t  onUnchecked         : function(){},\n\t\n\t  onDeterminate       : function() {},\n\t  onIndeterminate     : function() {},\n\t\n\t  onEnable            : function(){},\n\t  onDisable           : function(){},\n\t\n\t  // preserve misspelled callbacks (will be removed in 3.0)\n\t  onEnabled           : function(){},\n\t  onDisabled          : function(){},\n\t\n\t  className       : {\n\t    checked       : 'checked',\n\t    indeterminate : 'indeterminate',\n\t    disabled      : 'disabled',\n\t    hidden        : 'hidden',\n\t    radio         : 'radio',\n\t    readOnly      : 'read-only'\n\t  },\n\t\n\t  error     : {\n\t    method       : 'The method you called is not defined'\n\t  },\n\t\n\t  selector : {\n\t    checkbox : '.ui.checkbox',\n\t    label    : 'label, .box',\n\t    input    : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n\t    link     : 'a[href]'\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Dimmer\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.dimmer = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\n\t          : $.extend({}, $.fn.dimmer.settings),\n\t\n\t        selector        = settings.selector,\n\t        namespace       = settings.namespace,\n\t        className       = settings.className,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t        moduleSelector  = $allModules.selector || '',\n\t\n\t        clickEvent      = ('ontouchstart' in document.documentElement)\n\t          ? 'touchstart'\n\t          : 'click',\n\t\n\t        $module = $(this),\n\t        $dimmer,\n\t        $dimmable,\n\t\n\t        element   = this,\n\t        instance  = $module.data(moduleNamespace),\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        preinitialize: function() {\n\t          if( module.is.dimmer() ) {\n\t\n\t            $dimmable = $module.parent();\n\t            $dimmer   = $module;\n\t          }\n\t          else {\n\t            $dimmable = $module;\n\t            if( module.has.dimmer() ) {\n\t              if(settings.dimmerName) {\n\t                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\n\t              }\n\t              else {\n\t                $dimmer = $dimmable.find(selector.dimmer);\n\t              }\n\t            }\n\t            else {\n\t              $dimmer = module.create();\n\t            }\n\t            module.set.variation();\n\t          }\n\t        },\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing dimmer', settings);\n\t\n\t          module.bind.events();\n\t          module.set.dimmable();\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, instance)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module', $dimmer);\n\t          module.unbind.events();\n\t          module.remove.variation();\n\t          $dimmable\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            if(settings.on == 'hover') {\n\t              $dimmable\n\t                .on('mouseenter' + eventNamespace, module.show)\n\t                .on('mouseleave' + eventNamespace, module.hide)\n\t              ;\n\t            }\n\t            else if(settings.on == 'click') {\n\t              $dimmable\n\t                .on(clickEvent + eventNamespace, module.toggle)\n\t              ;\n\t            }\n\t            if( module.is.page() ) {\n\t              module.debug('Setting as a page dimmer', $dimmable);\n\t              module.set.pageDimmer();\n\t            }\n\t\n\t            if( module.is.closable() ) {\n\t              module.verbose('Adding dimmer close event', $dimmer);\n\t              $dimmable\n\t                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        unbind: {\n\t          events: function() {\n\t            $module\n\t              .removeData(moduleNamespace)\n\t            ;\n\t            $dimmable\n\t              .off(eventNamespace)\n\t            ;\n\t          }\n\t        },\n\t\n\t        event: {\n\t          click: function(event) {\n\t            module.verbose('Determining if event occured on dimmer', event);\n\t            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\n\t              module.hide();\n\t              event.stopImmediatePropagation();\n\t            }\n\t          }\n\t        },\n\t\n\t        addContent: function(element) {\n\t          var\n\t            $content = $(element)\n\t          ;\n\t          module.debug('Add content to dimmer', $content);\n\t          if($content.parent()[0] !== $dimmer[0]) {\n\t            $content.detach().appendTo($dimmer);\n\t          }\n\t        },\n\t\n\t        create: function() {\n\t          var\n\t            $element = $( settings.template.dimmer() )\n\t          ;\n\t          if(settings.dimmerName) {\n\t            module.debug('Creating named dimmer', settings.dimmerName);\n\t            $element.addClass(settings.dimmerName);\n\t          }\n\t          $element\n\t            .appendTo($dimmable)\n\t          ;\n\t          return $element;\n\t        },\n\t\n\t        show: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          module.debug('Showing dimmer', $dimmer, settings);\n\t          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\n\t            module.animate.show(callback);\n\t            settings.onShow.call(element);\n\t            settings.onChange.call(element);\n\t          }\n\t          else {\n\t            module.debug('Dimmer is already shown or disabled');\n\t          }\n\t        },\n\t\n\t        hide: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if( module.is.dimmed() || module.is.animating() ) {\n\t            module.debug('Hiding dimmer', $dimmer);\n\t            module.animate.hide(callback);\n\t            settings.onHide.call(element);\n\t            settings.onChange.call(element);\n\t          }\n\t          else {\n\t            module.debug('Dimmer is not visible');\n\t          }\n\t        },\n\t\n\t        toggle: function() {\n\t          module.verbose('Toggling dimmer visibility', $dimmer);\n\t          if( !module.is.dimmed() ) {\n\t            module.show();\n\t          }\n\t          else {\n\t            module.hide();\n\t          }\n\t        },\n\t\n\t        animate: {\n\t          show: function(callback) {\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n\t              if(settings.opacity !== 'auto') {\n\t                module.set.opacity();\n\t              }\n\t              $dimmer\n\t                .transition({\n\t                  animation   : settings.transition + ' in',\n\t                  queue       : false,\n\t                  duration    : module.get.duration(),\n\t                  useFailSafe : true,\n\t                  onStart     : function() {\n\t                    module.set.dimmed();\n\t                  },\n\t                  onComplete  : function() {\n\t                    module.set.active();\n\t                    callback();\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.verbose('Showing dimmer animation with javascript');\n\t              module.set.dimmed();\n\t              if(settings.opacity == 'auto') {\n\t                settings.opacity = 0.8;\n\t              }\n\t              $dimmer\n\t                .stop()\n\t                .css({\n\t                  opacity : 0,\n\t                  width   : '100%',\n\t                  height  : '100%'\n\t                })\n\t                .fadeTo(module.get.duration(), settings.opacity, function() {\n\t                  $dimmer.removeAttr('style');\n\t                  module.set.active();\n\t                  callback();\n\t                })\n\t              ;\n\t            }\n\t          },\n\t          hide: function(callback) {\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n\t              module.verbose('Hiding dimmer with css');\n\t              $dimmer\n\t                .transition({\n\t                  animation   : settings.transition + ' out',\n\t                  queue       : false,\n\t                  duration    : module.get.duration(),\n\t                  useFailSafe : true,\n\t                  onStart     : function() {\n\t                    module.remove.dimmed();\n\t                  },\n\t                  onComplete  : function() {\n\t                    module.remove.active();\n\t                    callback();\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.verbose('Hiding dimmer with javascript');\n\t              module.remove.dimmed();\n\t              $dimmer\n\t                .stop()\n\t                .fadeOut(module.get.duration(), function() {\n\t                  module.remove.active();\n\t                  $dimmer.removeAttr('style');\n\t                  callback();\n\t                })\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        get: {\n\t          dimmer: function() {\n\t            return $dimmer;\n\t          },\n\t          duration: function() {\n\t            if(typeof settings.duration == 'object') {\n\t              if( module.is.active() ) {\n\t                return settings.duration.hide;\n\t              }\n\t              else {\n\t                return settings.duration.show;\n\t              }\n\t            }\n\t            return settings.duration;\n\t          }\n\t        },\n\t\n\t        has: {\n\t          dimmer: function() {\n\t            if(settings.dimmerName) {\n\t              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\n\t            }\n\t            else {\n\t              return ( $module.find(selector.dimmer).length > 0 );\n\t            }\n\t          }\n\t        },\n\t\n\t        is: {\n\t          active: function() {\n\t            return $dimmer.hasClass(className.active);\n\t          },\n\t          animating: function() {\n\t            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\n\t          },\n\t          closable: function() {\n\t            if(settings.closable == 'auto') {\n\t              if(settings.on == 'hover') {\n\t                return false;\n\t              }\n\t              return true;\n\t            }\n\t            return settings.closable;\n\t          },\n\t          dimmer: function() {\n\t            return $module.hasClass(className.dimmer);\n\t          },\n\t          dimmable: function() {\n\t            return $module.hasClass(className.dimmable);\n\t          },\n\t          dimmed: function() {\n\t            return $dimmable.hasClass(className.dimmed);\n\t          },\n\t          disabled: function() {\n\t            return $dimmable.hasClass(className.disabled);\n\t          },\n\t          enabled: function() {\n\t            return !module.is.disabled();\n\t          },\n\t          page: function () {\n\t            return $dimmable.is('body');\n\t          },\n\t          pageDimmer: function() {\n\t            return $dimmer.hasClass(className.pageDimmer);\n\t          }\n\t        },\n\t\n\t        can: {\n\t          show: function() {\n\t            return !$dimmer.hasClass(className.disabled);\n\t          }\n\t        },\n\t\n\t        set: {\n\t          opacity: function(opacity) {\n\t            var\n\t              color      = $dimmer.css('background-color'),\n\t              colorArray = color.split(','),\n\t              isRGB      = (colorArray && colorArray.length == 3),\n\t              isRGBA     = (colorArray && colorArray.length == 4)\n\t            ;\n\t            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\n\t            if(isRGB || isRGBA) {\n\t              colorArray[3] = opacity + ')';\n\t              color         = colorArray.join(',');\n\t            }\n\t            else {\n\t              color = 'rgba(0, 0, 0, ' + opacity + ')';\n\t            }\n\t            module.debug('Setting opacity to', opacity);\n\t            $dimmer.css('background-color', color);\n\t          },\n\t          active: function() {\n\t            $dimmer.addClass(className.active);\n\t          },\n\t          dimmable: function() {\n\t            $dimmable.addClass(className.dimmable);\n\t          },\n\t          dimmed: function() {\n\t            $dimmable.addClass(className.dimmed);\n\t          },\n\t          pageDimmer: function() {\n\t            $dimmer.addClass(className.pageDimmer);\n\t          },\n\t          disabled: function() {\n\t            $dimmer.addClass(className.disabled);\n\t          },\n\t          variation: function(variation) {\n\t            variation = variation || settings.variation;\n\t            if(variation) {\n\t              $dimmer.addClass(variation);\n\t            }\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          active: function() {\n\t            $dimmer\n\t              .removeClass(className.active)\n\t            ;\n\t          },\n\t          dimmed: function() {\n\t            $dimmable.removeClass(className.dimmed);\n\t          },\n\t          disabled: function() {\n\t            $dimmer.removeClass(className.disabled);\n\t          },\n\t          variation: function(variation) {\n\t            variation = variation || settings.variation;\n\t            if(variation) {\n\t              $dimmer.removeClass(variation);\n\t            }\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      module.preinitialize();\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.dimmer.settings = {\n\t\n\t  name        : 'Dimmer',\n\t  namespace   : 'dimmer',\n\t\n\t  silent      : false,\n\t  debug       : false,\n\t  verbose     : false,\n\t  performance : true,\n\t\n\t  // name to distinguish between multiple dimmers in context\n\t  dimmerName  : false,\n\t\n\t  // whether to add a variation type\n\t  variation   : false,\n\t\n\t  // whether to bind close events\n\t  closable    : 'auto',\n\t\n\t  // whether to use css animations\n\t  useCSS      : true,\n\t\n\t  // css animation to use\n\t  transition  : 'fade',\n\t\n\t  // event to bind to\n\t  on          : false,\n\t\n\t  // overriding opacity value\n\t  opacity     : 'auto',\n\t\n\t  // transition durations\n\t  duration    : {\n\t    show : 500,\n\t    hide : 500\n\t  },\n\t\n\t  onChange    : function(){},\n\t  onShow      : function(){},\n\t  onHide      : function(){},\n\t\n\t  error   : {\n\t    method   : 'The method you called is not defined.'\n\t  },\n\t\n\t  className : {\n\t    active     : 'active',\n\t    animating  : 'animating',\n\t    dimmable   : 'dimmable',\n\t    dimmed     : 'dimmed',\n\t    dimmer     : 'dimmer',\n\t    disabled   : 'disabled',\n\t    hide       : 'hide',\n\t    pageDimmer : 'page',\n\t    show       : 'show'\n\t  },\n\t\n\t  selector: {\n\t    dimmer   : '> .ui.dimmer',\n\t    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\n\t  },\n\t\n\t  template: {\n\t    dimmer: function() {\n\t     return $('<div />').attr('class', 'ui dimmer');\n\t    }\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Dropdown\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.dropdown = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    $document      = $(document),\n\t\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    hasTouch       = ('ontouchstart' in document.documentElement),\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function(elementIndex) {\n\t      var\n\t        settings          = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\n\t          : $.extend({}, $.fn.dropdown.settings),\n\t\n\t        className       = settings.className,\n\t        message         = settings.message,\n\t        fields          = settings.fields,\n\t        keys            = settings.keys,\n\t        metadata        = settings.metadata,\n\t        namespace       = settings.namespace,\n\t        regExp          = settings.regExp,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t        templates       = settings.templates,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $module         = $(this),\n\t        $context        = $(settings.context),\n\t        $text           = $module.find(selector.text),\n\t        $search         = $module.find(selector.search),\n\t        $sizer          = $module.find(selector.sizer),\n\t        $input          = $module.find(selector.input),\n\t        $icon           = $module.find(selector.icon),\n\t\n\t        $combo = ($module.prev().find(selector.text).length > 0)\n\t          ? $module.prev().find(selector.text)\n\t          : $module.prev(),\n\t\n\t        $menu           = $module.children(selector.menu),\n\t        $item           = $menu.find(selector.item),\n\t\n\t        activated       = false,\n\t        itemActivated   = false,\n\t        internalChange  = false,\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        initialLoad,\n\t        pageLostFocus,\n\t        willRefocus,\n\t        elementNamespace,\n\t        id,\n\t        selectObserver,\n\t        menuObserver,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing dropdown', settings);\n\t\n\t          if( module.is.alreadySetup() ) {\n\t            module.setup.reference();\n\t          }\n\t          else {\n\t            module.setup.layout();\n\t            module.refreshData();\n\t\n\t            module.save.defaults();\n\t            module.restore.selected();\n\t\n\t            module.create.id();\n\t            module.bind.events();\n\t\n\t            module.observeChanges();\n\t            module.instantiate();\n\t          }\n\t\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of dropdown', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous dropdown', $module);\n\t          module.remove.tabbable();\n\t          $module\n\t            .off(eventNamespace)\n\t            .removeData(moduleNamespace)\n\t          ;\n\t          $menu\n\t            .off(eventNamespace)\n\t          ;\n\t          $document\n\t            .off(elementNamespace)\n\t          ;\n\t          module.disconnect.menuObserver();\n\t          module.disconnect.selectObserver();\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            selectObserver = new MutationObserver(module.event.select.mutation);\n\t            menuObserver   = new MutationObserver(module.event.menu.mutation);\n\t            module.debug('Setting up mutation observer', selectObserver, menuObserver);\n\t            module.observe.select();\n\t            module.observe.menu();\n\t          }\n\t        },\n\t\n\t        disconnect: {\n\t          menuObserver: function() {\n\t            if(menuObserver) {\n\t              menuObserver.disconnect();\n\t            }\n\t          },\n\t          selectObserver: function() {\n\t            if(selectObserver) {\n\t              selectObserver.disconnect();\n\t            }\n\t          }\n\t        },\n\t        observe: {\n\t          select: function() {\n\t            if(module.has.input()) {\n\t              selectObserver.observe($input[0], {\n\t                childList : true,\n\t                subtree   : true\n\t              });\n\t            }\n\t          },\n\t          menu: function() {\n\t            if(module.has.menu()) {\n\t              menuObserver.observe($menu[0], {\n\t                childList : true,\n\t                subtree   : true\n\t              });\n\t            }\n\t          }\n\t        },\n\t\n\t        create: {\n\t          id: function() {\n\t            id = (Math.random().toString(16) + '000000000').substr(2, 8);\n\t            elementNamespace = '.' + id;\n\t            module.verbose('Creating unique id for element', id);\n\t          },\n\t          userChoice: function(values) {\n\t            var\n\t              $userChoices,\n\t              $userChoice,\n\t              isUserValue,\n\t              html\n\t            ;\n\t            values = values || module.get.userValues();\n\t            if(!values) {\n\t              return false;\n\t            }\n\t            values = $.isArray(values)\n\t              ? values\n\t              : [values]\n\t            ;\n\t            $.each(values, function(index, value) {\n\t              if(module.get.item(value) === false) {\n\t                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\n\t                $userChoice  = $('<div />')\n\t                  .html(html)\n\t                  .attr('data-' + metadata.value, value)\n\t                  .attr('data-' + metadata.text, value)\n\t                  .addClass(className.addition)\n\t                  .addClass(className.item)\n\t                ;\n\t                if(settings.hideAdditions) {\n\t                  $userChoice.addClass(className.hidden);\n\t                }\n\t                $userChoices = ($userChoices === undefined)\n\t                  ? $userChoice\n\t                  : $userChoices.add($userChoice)\n\t                ;\n\t                module.verbose('Creating user choices for value', value, $userChoice);\n\t              }\n\t            });\n\t            return $userChoices;\n\t          },\n\t          userLabels: function(value) {\n\t            var\n\t              userValues = module.get.userValues()\n\t            ;\n\t            if(userValues) {\n\t              module.debug('Adding user labels', userValues);\n\t              $.each(userValues, function(index, value) {\n\t                module.verbose('Adding custom user value');\n\t                module.add.label(value, value);\n\t              });\n\t            }\n\t          },\n\t          menu: function() {\n\t            $menu = $('<div />')\n\t              .addClass(className.menu)\n\t              .appendTo($module)\n\t            ;\n\t          },\n\t          sizer: function() {\n\t            $sizer = $('<span />')\n\t              .addClass(className.sizer)\n\t              .insertAfter($search)\n\t            ;\n\t          }\n\t        },\n\t\n\t        search: function(query) {\n\t          query = (query !== undefined)\n\t            ? query\n\t            : module.get.query()\n\t          ;\n\t          module.verbose('Searching for query', query);\n\t          if(module.has.minCharacters(query)) {\n\t            module.filter(query);\n\t          }\n\t          else {\n\t            module.hide();\n\t          }\n\t        },\n\t\n\t        select: {\n\t          firstUnfiltered: function() {\n\t            module.verbose('Selecting first non-filtered element');\n\t            module.remove.selectedItem();\n\t            $item\n\t              .not(selector.unselectable)\n\t              .not(selector.addition + selector.hidden)\n\t                .eq(0)\n\t                .addClass(className.selected)\n\t            ;\n\t          },\n\t          nextAvailable: function($selected) {\n\t            $selected = $selected.eq(0);\n\t            var\n\t              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\n\t              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\n\t              hasNext        = ($nextAvailable.length > 0)\n\t            ;\n\t            if(hasNext) {\n\t              module.verbose('Moving selection to', $nextAvailable);\n\t              $nextAvailable.addClass(className.selected);\n\t            }\n\t            else {\n\t              module.verbose('Moving selection to', $prevAvailable);\n\t              $prevAvailable.addClass(className.selected);\n\t            }\n\t          }\n\t        },\n\t\n\t        setup: {\n\t          api: function() {\n\t            var\n\t              apiSettings = {\n\t                debug   : settings.debug,\n\t                urlData : {\n\t                  value : module.get.value(),\n\t                  query : module.get.query()\n\t                },\n\t                on    : false\n\t              }\n\t            ;\n\t            module.verbose('First request, initializing API');\n\t            $module\n\t              .api(apiSettings)\n\t            ;\n\t          },\n\t          layout: function() {\n\t            if( $module.is('select') ) {\n\t              module.setup.select();\n\t              module.setup.returnedObject();\n\t            }\n\t            if( !module.has.menu() ) {\n\t              module.create.menu();\n\t            }\n\t            if( module.is.search() && !module.has.search() ) {\n\t              module.verbose('Adding search input');\n\t              $search = $('<input />')\n\t                .addClass(className.search)\n\t                .prop('autocomplete', 'off')\n\t                .insertBefore($text)\n\t              ;\n\t            }\n\t            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\n\t              module.create.sizer();\n\t            }\n\t            if(settings.allowTab) {\n\t              module.set.tabbable();\n\t            }\n\t          },\n\t          select: function() {\n\t            var\n\t              selectValues  = module.get.selectValues()\n\t            ;\n\t            module.debug('Dropdown initialized on a select', selectValues);\n\t            if( $module.is('select') ) {\n\t              $input = $module;\n\t            }\n\t            // see if select is placed correctly already\n\t            if($input.parent(selector.dropdown).length > 0) {\n\t              module.debug('UI dropdown already exists. Creating dropdown menu only');\n\t              $module = $input.closest(selector.dropdown);\n\t              if( !module.has.menu() ) {\n\t                module.create.menu();\n\t              }\n\t              $menu = $module.children(selector.menu);\n\t              module.setup.menu(selectValues);\n\t            }\n\t            else {\n\t              module.debug('Creating entire dropdown from select');\n\t              $module = $('<div />')\n\t                .attr('class', $input.attr('class') )\n\t                .addClass(className.selection)\n\t                .addClass(className.dropdown)\n\t                .html( templates.dropdown(selectValues) )\n\t                .insertBefore($input)\n\t              ;\n\t              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\n\t                module.error(error.missingMultiple);\n\t                $input.prop('multiple', true);\n\t              }\n\t              if($input.is('[multiple]')) {\n\t                module.set.multiple();\n\t              }\n\t              if ($input.prop('disabled')) {\n\t                module.debug('Disabling dropdown');\n\t                $module.addClass(className.disabled);\n\t              }\n\t              $input\n\t                .removeAttr('class')\n\t                .detach()\n\t                .prependTo($module)\n\t              ;\n\t            }\n\t            module.refresh();\n\t          },\n\t          menu: function(values) {\n\t            $menu.html( templates.menu(values, fields));\n\t            $item = $menu.find(selector.item);\n\t          },\n\t          reference: function() {\n\t            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\n\t            // replace module reference\n\t            $module = $module.parent(selector.dropdown);\n\t            module.refresh();\n\t            module.setup.returnedObject();\n\t            // invoke method in context of current instance\n\t            if(methodInvoked) {\n\t              instance = module;\n\t              module.invoke(query);\n\t            }\n\t          },\n\t          returnedObject: function() {\n\t            var\n\t              $firstModules = $allModules.slice(0, elementIndex),\n\t              $lastModules = $allModules.slice(elementIndex + 1)\n\t            ;\n\t            // adjust all modules to use correct reference\n\t            $allModules = $firstModules.add($module).add($lastModules);\n\t          }\n\t        },\n\t\n\t        refresh: function() {\n\t          module.refreshSelectors();\n\t          module.refreshData();\n\t        },\n\t\n\t        refreshItems: function() {\n\t          $item = $menu.find(selector.item);\n\t        },\n\t\n\t        refreshSelectors: function() {\n\t          module.verbose('Refreshing selector cache');\n\t          $text   = $module.find(selector.text);\n\t          $search = $module.find(selector.search);\n\t          $input  = $module.find(selector.input);\n\t          $icon   = $module.find(selector.icon);\n\t          $combo  = ($module.prev().find(selector.text).length > 0)\n\t            ? $module.prev().find(selector.text)\n\t            : $module.prev()\n\t          ;\n\t          $menu    = $module.children(selector.menu);\n\t          $item    = $menu.find(selector.item);\n\t        },\n\t\n\t        refreshData: function() {\n\t          module.verbose('Refreshing cached metadata');\n\t          $item\n\t            .removeData(metadata.text)\n\t            .removeData(metadata.value)\n\t          ;\n\t        },\n\t\n\t        clearData: function() {\n\t          module.verbose('Clearing metadata');\n\t          $item\n\t            .removeData(metadata.text)\n\t            .removeData(metadata.value)\n\t          ;\n\t          $module\n\t            .removeData(metadata.defaultText)\n\t            .removeData(metadata.defaultValue)\n\t            .removeData(metadata.placeholderText)\n\t          ;\n\t        },\n\t\n\t        toggle: function() {\n\t          module.verbose('Toggling menu visibility');\n\t          if( !module.is.active() ) {\n\t            module.show();\n\t          }\n\t          else {\n\t            module.hide();\n\t          }\n\t        },\n\t\n\t        show: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if(!module.can.show() && module.is.remote()) {\n\t            module.debug('No API results retrieved, searching before show');\n\t            module.queryRemote(module.get.query(), module.show);\n\t          }\n\t          if( module.can.show() && !module.is.active() ) {\n\t            module.debug('Showing dropdown');\n\t            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\n\t              module.remove.message();\n\t            }\n\t            if(module.is.allFiltered()) {\n\t              return true;\n\t            }\n\t            if(settings.onShow.call(element) !== false) {\n\t              module.animate.show(function() {\n\t                if( module.can.click() ) {\n\t                  module.bind.intent();\n\t                }\n\t                if(module.has.menuSearch()) {\n\t                  module.focusSearch();\n\t                }\n\t                module.set.visible();\n\t                callback.call(element);\n\t              });\n\t            }\n\t          }\n\t        },\n\t\n\t        hide: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if( module.is.active() ) {\n\t            module.debug('Hiding dropdown');\n\t            if(settings.onHide.call(element) !== false) {\n\t              module.animate.hide(function() {\n\t                module.remove.visible();\n\t                callback.call(element);\n\t              });\n\t            }\n\t          }\n\t        },\n\t\n\t        hideOthers: function() {\n\t          module.verbose('Finding other dropdowns to hide');\n\t          $allModules\n\t            .not($module)\n\t              .has(selector.menu + '.' + className.visible)\n\t                .dropdown('hide')\n\t          ;\n\t        },\n\t\n\t        hideMenu: function() {\n\t          module.verbose('Hiding menu  instantaneously');\n\t          module.remove.active();\n\t          module.remove.visible();\n\t          $menu.transition('hide');\n\t        },\n\t\n\t        hideSubMenus: function() {\n\t          var\n\t            $subMenus = $menu.children(selector.item).find(selector.menu)\n\t          ;\n\t          module.verbose('Hiding sub menus', $subMenus);\n\t          $subMenus.transition('hide');\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            if(hasTouch) {\n\t              module.bind.touchEvents();\n\t            }\n\t            module.bind.keyboardEvents();\n\t            module.bind.inputEvents();\n\t            module.bind.mouseEvents();\n\t          },\n\t          touchEvents: function() {\n\t            module.debug('Touch device detected binding additional touch events');\n\t            if( module.is.searchSelection() ) {\n\t              // do nothing special yet\n\t            }\n\t            else if( module.is.single() ) {\n\t              $module\n\t                .on('touchstart' + eventNamespace, module.event.test.toggle)\n\t              ;\n\t            }\n\t            $menu\n\t              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\n\t            ;\n\t          },\n\t          keyboardEvents: function() {\n\t            module.verbose('Binding keyboard events');\n\t            $module\n\t              .on('keydown' + eventNamespace, module.event.keydown)\n\t            ;\n\t            if( module.has.search() ) {\n\t              $module\n\t                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\n\t              ;\n\t            }\n\t            if( module.is.multiple() ) {\n\t              $document\n\t                .on('keydown' + elementNamespace, module.event.document.keydown)\n\t              ;\n\t            }\n\t          },\n\t          inputEvents: function() {\n\t            module.verbose('Binding input change events');\n\t            $module\n\t              .on('change' + eventNamespace, selector.input, module.event.change)\n\t            ;\n\t          },\n\t          mouseEvents: function() {\n\t            module.verbose('Binding mouse events');\n\t            if(module.is.multiple()) {\n\t              $module\n\t                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\n\t                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\n\t              ;\n\t            }\n\t            if( module.is.searchSelection() ) {\n\t              $module\n\t                .on('mousedown' + eventNamespace, module.event.mousedown)\n\t                .on('mouseup'   + eventNamespace, module.event.mouseup)\n\t                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\n\t                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\n\t                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\n\t                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\n\t                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\n\t                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\n\t                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\n\t              ;\n\t              if(module.is.multiple()) {\n\t                $module\n\t                  .on('click' + eventNamespace, module.event.click)\n\t                ;\n\t              }\n\t            }\n\t            else {\n\t              if(settings.on == 'click') {\n\t                $module\n\t                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\n\t                  .on('click' + eventNamespace, module.event.test.toggle)\n\t                ;\n\t              }\n\t              else if(settings.on == 'hover') {\n\t                $module\n\t                  .on('mouseenter' + eventNamespace, module.delay.show)\n\t                  .on('mouseleave' + eventNamespace, module.delay.hide)\n\t                ;\n\t              }\n\t              else {\n\t                $module\n\t                  .on(settings.on + eventNamespace, module.toggle)\n\t                ;\n\t              }\n\t              $module\n\t                .on('mousedown' + eventNamespace, module.event.mousedown)\n\t                .on('mouseup'   + eventNamespace, module.event.mouseup)\n\t                .on('focus'     + eventNamespace, module.event.focus)\n\t              ;\n\t              if(module.has.menuSearch() ) {\n\t                $module\n\t                  .on('blur' + eventNamespace, selector.search, module.event.search.blur)\n\t                ;\n\t              }\n\t              else {\n\t                $module\n\t                  .on('blur' + eventNamespace, module.event.blur)\n\t                ;\n\t              }\n\t            }\n\t            $menu\n\t              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\n\t              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\n\t              .on('click'      + eventNamespace, selector.item, module.event.item.click)\n\t            ;\n\t          },\n\t          intent: function() {\n\t            module.verbose('Binding hide intent event to document');\n\t            if(hasTouch) {\n\t              $document\n\t                .on('touchstart' + elementNamespace, module.event.test.touch)\n\t                .on('touchmove'  + elementNamespace, module.event.test.touch)\n\t              ;\n\t            }\n\t            $document\n\t              .on('click' + elementNamespace, module.event.test.hide)\n\t            ;\n\t          }\n\t        },\n\t\n\t        unbind: {\n\t          intent: function() {\n\t            module.verbose('Removing hide intent event from document');\n\t            if(hasTouch) {\n\t              $document\n\t                .off('touchstart' + elementNamespace)\n\t                .off('touchmove' + elementNamespace)\n\t              ;\n\t            }\n\t            $document\n\t              .off('click' + elementNamespace)\n\t            ;\n\t          }\n\t        },\n\t\n\t        filter: function(query) {\n\t          var\n\t            searchTerm = (query !== undefined)\n\t              ? query\n\t              : module.get.query(),\n\t            afterFiltered = function() {\n\t              if(module.is.multiple()) {\n\t                module.filterActive();\n\t              }\n\t              module.select.firstUnfiltered();\n\t              if( module.has.allResultsFiltered() ) {\n\t                if( settings.onNoResults.call(element, searchTerm) ) {\n\t                  if(settings.allowAdditions) {\n\t                    if(settings.hideAdditions) {\n\t                      module.verbose('User addition with no menu, setting empty style');\n\t                      module.set.empty();\n\t                      module.hideMenu();\n\t                    }\n\t                  }\n\t                  else {\n\t                    module.verbose('All items filtered, showing message', searchTerm);\n\t                    module.add.message(message.noResults);\n\t                  }\n\t                }\n\t                else {\n\t                  module.verbose('All items filtered, hiding dropdown', searchTerm);\n\t                  module.hideMenu();\n\t                }\n\t              }\n\t              else {\n\t                module.remove.empty();\n\t                module.remove.message();\n\t              }\n\t              if(settings.allowAdditions) {\n\t                module.add.userSuggestion(query);\n\t              }\n\t              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\n\t                module.show();\n\t              }\n\t            }\n\t          ;\n\t          if(settings.useLabels && module.has.maxSelections()) {\n\t            return;\n\t          }\n\t          if(settings.apiSettings) {\n\t            if( module.can.useAPI() ) {\n\t              module.queryRemote(searchTerm, function() {\n\t                if(settings.filterRemoteData) {\n\t                  module.filterItems(searchTerm);\n\t                }\n\t                afterFiltered();\n\t              });\n\t            }\n\t            else {\n\t              module.error(error.noAPI);\n\t            }\n\t          }\n\t          else {\n\t            module.filterItems(searchTerm);\n\t            afterFiltered();\n\t          }\n\t        },\n\t\n\t        queryRemote: function(query, callback) {\n\t          var\n\t            apiSettings = {\n\t              errorDuration : false,\n\t              cache         : 'local',\n\t              throttle      : settings.throttle,\n\t              urlData       : {\n\t                query: query\n\t              },\n\t              onError: function() {\n\t                module.add.message(message.serverError);\n\t                callback();\n\t              },\n\t              onFailure: function() {\n\t                module.add.message(message.serverError);\n\t                callback();\n\t              },\n\t              onSuccess : function(response) {\n\t                module.remove.message();\n\t                module.setup.menu({\n\t                  values: response[fields.remoteValues]\n\t                });\n\t                callback();\n\t              }\n\t            }\n\t          ;\n\t          if( !$module.api('get request') ) {\n\t            module.setup.api();\n\t          }\n\t          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\n\t          $module\n\t            .api('setting', apiSettings)\n\t            .api('query')\n\t          ;\n\t        },\n\t\n\t        filterItems: function(query) {\n\t          var\n\t            searchTerm = (query !== undefined)\n\t              ? query\n\t              : module.get.query(),\n\t            results          =  null,\n\t            escapedTerm      = module.escape.string(searchTerm),\n\t            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\n\t          ;\n\t          // avoid loop if we're matching nothing\n\t          if( module.has.query() ) {\n\t            results = [];\n\t\n\t            module.verbose('Searching for matching values', searchTerm);\n\t            $item\n\t              .each(function(){\n\t                var\n\t                  $choice = $(this),\n\t                  text,\n\t                  value\n\t                ;\n\t                if(settings.match == 'both' || settings.match == 'text') {\n\t                  text = String(module.get.choiceText($choice, false));\n\t                  if(text.search(beginsWithRegExp) !== -1) {\n\t                    results.push(this);\n\t                    return true;\n\t                  }\n\t                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\n\t                    results.push(this);\n\t                    return true;\n\t                  }\n\t                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\n\t                    results.push(this);\n\t                    return true;\n\t                  }\n\t                }\n\t                if(settings.match == 'both' || settings.match == 'value') {\n\t                  value = String(module.get.choiceValue($choice, text));\n\t                  if(value.search(beginsWithRegExp) !== -1) {\n\t                    results.push(this);\n\t                    return true;\n\t                  }\n\t                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, value)) {\n\t                    results.push(this);\n\t                    return true;\n\t                  }\n\t                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, value)) {\n\t                    results.push(this);\n\t                    return true;\n\t                  }\n\t                }\n\t              })\n\t            ;\n\t          }\n\t          module.debug('Showing only matched items', searchTerm);\n\t          module.remove.filteredItem();\n\t          if(results) {\n\t            $item\n\t              .not(results)\n\t              .addClass(className.filtered)\n\t            ;\n\t          }\n\t        },\n\t\n\t        fuzzySearch: function(query, term) {\n\t          var\n\t            termLength  = term.length,\n\t            queryLength = query.length\n\t          ;\n\t          query = query.toLowerCase();\n\t          term  = term.toLowerCase();\n\t          if(queryLength > termLength) {\n\t            return false;\n\t          }\n\t          if(queryLength === termLength) {\n\t            return (query === term);\n\t          }\n\t          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n\t            var\n\t              queryCharacter = query.charCodeAt(characterIndex)\n\t            ;\n\t            while(nextCharacterIndex < termLength) {\n\t              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n\t                continue search;\n\t              }\n\t            }\n\t            return false;\n\t          }\n\t          return true;\n\t        },\n\t        exactSearch: function (query, term) {\n\t          query = query.toLowerCase();\n\t          term  = term.toLowerCase();\n\t          if(term.indexOf(query) > -1) {\n\t             return true;\n\t          }\n\t          return false;\n\t        },\n\t        filterActive: function() {\n\t          if(settings.useLabels) {\n\t            $item.filter('.' + className.active)\n\t              .addClass(className.filtered)\n\t            ;\n\t          }\n\t        },\n\t\n\t        focusSearch: function(skipHandler) {\n\t          if( module.has.search() && !module.is.focusedOnSearch() ) {\n\t            if(skipHandler) {\n\t              $module.off('focus' + eventNamespace, selector.search);\n\t              $search.focus();\n\t              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\n\t            }\n\t            else {\n\t              $search.focus();\n\t            }\n\t          }\n\t        },\n\t\n\t        forceSelection: function() {\n\t          var\n\t            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\n\t            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\n\t            $selectedItem      = ($currentlySelected.length > 0)\n\t              ? $currentlySelected\n\t              : $activeItem,\n\t            hasSelected = ($selectedItem.length > 0)\n\t          ;\n\t          if(hasSelected && !module.is.multiple()) {\n\t            module.debug('Forcing partial selection to selected item', $selectedItem);\n\t            module.event.item.click.call($selectedItem, {}, true);\n\t            return;\n\t          }\n\t          else {\n\t            if(settings.allowAdditions) {\n\t              module.set.selected(module.get.query());\n\t              module.remove.searchTerm();\n\t            }\n\t            else {\n\t              module.remove.searchTerm();\n\t            }\n\t          }\n\t        },\n\t\n\t        event: {\n\t          change: function() {\n\t            if(!internalChange) {\n\t              module.debug('Input changed, updating selection');\n\t              module.set.selected();\n\t            }\n\t          },\n\t          focus: function() {\n\t            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\n\t              module.show();\n\t            }\n\t          },\n\t          blur: function(event) {\n\t            pageLostFocus = (document.activeElement === this);\n\t            if(!activated && !pageLostFocus) {\n\t              module.remove.activeLabel();\n\t              module.hide();\n\t            }\n\t          },\n\t          mousedown: function() {\n\t            if(module.is.searchSelection()) {\n\t              // prevent menu hiding on immediate re-focus\n\t              willRefocus = true;\n\t            }\n\t            else {\n\t              // prevents focus callback from occurring on mousedown\n\t              activated = true;\n\t            }\n\t          },\n\t          mouseup: function() {\n\t            if(module.is.searchSelection()) {\n\t              // prevent menu hiding on immediate re-focus\n\t              willRefocus = false;\n\t            }\n\t            else {\n\t              activated = false;\n\t            }\n\t          },\n\t          click: function(event) {\n\t            var\n\t              $target = $(event.target)\n\t            ;\n\t            // focus search\n\t            if($target.is($module)) {\n\t              if(!module.is.focusedOnSearch()) {\n\t                module.focusSearch();\n\t              }\n\t              else {\n\t                module.show();\n\t              }\n\t            }\n\t          },\n\t          search: {\n\t            focus: function() {\n\t              activated = true;\n\t              if(module.is.multiple()) {\n\t                module.remove.activeLabel();\n\t              }\n\t              if(settings.showOnFocus) {\n\t                module.search();\n\t              }\n\t            },\n\t            blur: function(event) {\n\t              pageLostFocus = (document.activeElement === this);\n\t              if(module.is.searchSelection() && !willRefocus) {\n\t                if(!itemActivated && !pageLostFocus) {\n\t                  if(settings.forceSelection) {\n\t                    module.forceSelection();\n\t                  }\n\t                  module.hide();\n\t                }\n\t              }\n\t              willRefocus = false;\n\t            }\n\t          },\n\t          icon: {\n\t            click: function(event) {\n\t              module.toggle();\n\t            }\n\t          },\n\t          text: {\n\t            focus: function(event) {\n\t              activated = true;\n\t              module.focusSearch();\n\t            }\n\t          },\n\t          input: function(event) {\n\t            if(module.is.multiple() || module.is.searchSelection()) {\n\t              module.set.filtered();\n\t            }\n\t            clearTimeout(module.timer);\n\t            module.timer = setTimeout(module.search, settings.delay.search);\n\t          },\n\t          label: {\n\t            click: function(event) {\n\t              var\n\t                $label        = $(this),\n\t                $labels       = $module.find(selector.label),\n\t                $activeLabels = $labels.filter('.' + className.active),\n\t                $nextActive   = $label.nextAll('.' + className.active),\n\t                $prevActive   = $label.prevAll('.' + className.active),\n\t                $range = ($nextActive.length > 0)\n\t                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\n\t                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\n\t              ;\n\t              if(event.shiftKey) {\n\t                $activeLabels.removeClass(className.active);\n\t                $range.addClass(className.active);\n\t              }\n\t              else if(event.ctrlKey) {\n\t                $label.toggleClass(className.active);\n\t              }\n\t              else {\n\t                $activeLabels.removeClass(className.active);\n\t                $label.addClass(className.active);\n\t              }\n\t              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\n\t            }\n\t          },\n\t          remove: {\n\t            click: function() {\n\t              var\n\t                $label = $(this).parent()\n\t              ;\n\t              if( $label.hasClass(className.active) ) {\n\t                // remove all selected labels\n\t                module.remove.activeLabels();\n\t              }\n\t              else {\n\t                // remove this label only\n\t                module.remove.activeLabels( $label );\n\t              }\n\t            }\n\t          },\n\t          test: {\n\t            toggle: function(event) {\n\t              var\n\t                toggleBehavior = (module.is.multiple())\n\t                  ? module.show\n\t                  : module.toggle\n\t              ;\n\t              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\n\t                return;\n\t              }\n\t              if( module.determine.eventOnElement(event, toggleBehavior) ) {\n\t                event.preventDefault();\n\t              }\n\t            },\n\t            touch: function(event) {\n\t              module.determine.eventOnElement(event, function() {\n\t                if(event.type == 'touchstart') {\n\t                  module.timer = setTimeout(function() {\n\t                    module.hide();\n\t                  }, settings.delay.touch);\n\t                }\n\t                else if(event.type == 'touchmove') {\n\t                  clearTimeout(module.timer);\n\t                }\n\t              });\n\t              event.stopPropagation();\n\t            },\n\t            hide: function(event) {\n\t              module.determine.eventInModule(event, module.hide);\n\t            }\n\t          },\n\t          select: {\n\t            mutation: function(mutations) {\n\t              module.debug('<select> modified, recreating menu');\n\t              module.setup.select();\n\t            }\n\t          },\n\t          menu: {\n\t            mutation: function(mutations) {\n\t              var\n\t                mutation   = mutations[0],\n\t                $addedNode = mutation.addedNodes\n\t                  ? $(mutation.addedNodes[0])\n\t                  : $(false),\n\t                $removedNode = mutation.removedNodes\n\t                  ? $(mutation.removedNodes[0])\n\t                  : $(false),\n\t                $changedNodes  = $addedNode.add($removedNode),\n\t                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\n\t                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\n\t              ;\n\t              if(isUserAddition || isMessage) {\n\t                module.debug('Updating item selector cache');\n\t                module.refreshItems();\n\t              }\n\t              else {\n\t                module.debug('Menu modified, updating selector cache');\n\t                module.refresh();\n\t              }\n\t            },\n\t            mousedown: function() {\n\t              itemActivated = true;\n\t            },\n\t            mouseup: function() {\n\t              itemActivated = false;\n\t            }\n\t          },\n\t          item: {\n\t            mouseenter: function(event) {\n\t              var\n\t                $target        = $(event.target),\n\t                $item          = $(this),\n\t                $subMenu       = $item.children(selector.menu),\n\t                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\n\t                hasSubMenu     = ($subMenu.length > 0),\n\t                isBubbledEvent = ($subMenu.find($target).length > 0)\n\t              ;\n\t              if( !isBubbledEvent && hasSubMenu ) {\n\t                clearTimeout(module.itemTimer);\n\t                module.itemTimer = setTimeout(function() {\n\t                  module.verbose('Showing sub-menu', $subMenu);\n\t                  $.each($otherMenus, function() {\n\t                    module.animate.hide(false, $(this));\n\t                  });\n\t                  module.animate.show(false, $subMenu);\n\t                }, settings.delay.show);\n\t                event.preventDefault();\n\t              }\n\t            },\n\t            mouseleave: function(event) {\n\t              var\n\t                $subMenu = $(this).children(selector.menu)\n\t              ;\n\t              if($subMenu.length > 0) {\n\t                clearTimeout(module.itemTimer);\n\t                module.itemTimer = setTimeout(function() {\n\t                  module.verbose('Hiding sub-menu', $subMenu);\n\t                  module.animate.hide(false, $subMenu);\n\t                }, settings.delay.hide);\n\t              }\n\t            },\n\t            click: function (event, skipRefocus) {\n\t              var\n\t                $choice        = $(this),\n\t                $target        = (event)\n\t                  ? $(event.target)\n\t                  : $(''),\n\t                $subMenu       = $choice.find(selector.menu),\n\t                text           = module.get.choiceText($choice),\n\t                value          = module.get.choiceValue($choice, text),\n\t                hasSubMenu     = ($subMenu.length > 0),\n\t                isBubbledEvent = ($subMenu.find($target).length > 0)\n\t              ;\n\t              // prevents IE11 bug where menu receives focus even though `tabindex=-1`\n\t              if(module.has.menuSearch()) {\n\t                $(document.activeElement).blur();\n\t              }\n\t              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\n\t                if(module.is.searchSelection()) {\n\t                  if(settings.allowAdditions) {\n\t                    module.remove.userAddition();\n\t                  }\n\t                  module.remove.searchTerm();\n\t                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\n\t                    module.focusSearch(true);\n\t                  }\n\t                }\n\t                if(!settings.useLabels) {\n\t                  module.remove.filteredItem();\n\t                  module.set.scrollPosition($choice);\n\t                }\n\t                module.determine.selectAction.call(this, text, value);\n\t              }\n\t            }\n\t          },\n\t\n\t          document: {\n\t            // label selection should occur even when element has no focus\n\t            keydown: function(event) {\n\t              var\n\t                pressedKey    = event.which,\n\t                isShortcutKey = module.is.inObject(pressedKey, keys)\n\t              ;\n\t              if(isShortcutKey) {\n\t                var\n\t                  $label            = $module.find(selector.label),\n\t                  $activeLabel      = $label.filter('.' + className.active),\n\t                  activeValue       = $activeLabel.data(metadata.value),\n\t                  labelIndex        = $label.index($activeLabel),\n\t                  labelCount        = $label.length,\n\t                  hasActiveLabel    = ($activeLabel.length > 0),\n\t                  hasMultipleActive = ($activeLabel.length > 1),\n\t                  isFirstLabel      = (labelIndex === 0),\n\t                  isLastLabel       = (labelIndex + 1 == labelCount),\n\t                  isSearch          = module.is.searchSelection(),\n\t                  isFocusedOnSearch = module.is.focusedOnSearch(),\n\t                  isFocused         = module.is.focused(),\n\t                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\n\t                  $nextLabel\n\t                ;\n\t                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\n\t                  return;\n\t                }\n\t\n\t                if(pressedKey == keys.leftArrow) {\n\t                  // activate previous label\n\t                  if((isFocused || caretAtStart) && !hasActiveLabel) {\n\t                    module.verbose('Selecting previous label');\n\t                    $label.last().addClass(className.active);\n\t                  }\n\t                  else if(hasActiveLabel) {\n\t                    if(!event.shiftKey) {\n\t                      module.verbose('Selecting previous label');\n\t                      $label.removeClass(className.active);\n\t                    }\n\t                    else {\n\t                      module.verbose('Adding previous label to selection');\n\t                    }\n\t                    if(isFirstLabel && !hasMultipleActive) {\n\t                      $activeLabel.addClass(className.active);\n\t                    }\n\t                    else {\n\t                      $activeLabel.prev(selector.siblingLabel)\n\t                        .addClass(className.active)\n\t                        .end()\n\t                      ;\n\t                    }\n\t                    event.preventDefault();\n\t                  }\n\t                }\n\t                else if(pressedKey == keys.rightArrow) {\n\t                  // activate first label\n\t                  if(isFocused && !hasActiveLabel) {\n\t                    $label.first().addClass(className.active);\n\t                  }\n\t                  // activate next label\n\t                  if(hasActiveLabel) {\n\t                    if(!event.shiftKey) {\n\t                      module.verbose('Selecting next label');\n\t                      $label.removeClass(className.active);\n\t                    }\n\t                    else {\n\t                      module.verbose('Adding next label to selection');\n\t                    }\n\t                    if(isLastLabel) {\n\t                      if(isSearch) {\n\t                        if(!isFocusedOnSearch) {\n\t                          module.focusSearch();\n\t                        }\n\t                        else {\n\t                          $label.removeClass(className.active);\n\t                        }\n\t                      }\n\t                      else if(hasMultipleActive) {\n\t                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\n\t                      }\n\t                      else {\n\t                        $activeLabel.addClass(className.active);\n\t                      }\n\t                    }\n\t                    else {\n\t                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\n\t                    }\n\t                    event.preventDefault();\n\t                  }\n\t                }\n\t                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\n\t                  if(hasActiveLabel) {\n\t                    module.verbose('Removing active labels');\n\t                    if(isLastLabel) {\n\t                      if(isSearch && !isFocusedOnSearch) {\n\t                        module.focusSearch();\n\t                      }\n\t                    }\n\t                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\n\t                    module.remove.activeLabels($activeLabel);\n\t                    event.preventDefault();\n\t                  }\n\t                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\n\t                    module.verbose('Removing last label on input backspace');\n\t                    $activeLabel = $label.last().addClass(className.active);\n\t                    module.remove.activeLabels($activeLabel);\n\t                  }\n\t                }\n\t                else {\n\t                  $activeLabel.removeClass(className.active);\n\t                }\n\t              }\n\t            }\n\t          },\n\t\n\t          keydown: function(event) {\n\t            var\n\t              pressedKey    = event.which,\n\t              isShortcutKey = module.is.inObject(pressedKey, keys)\n\t            ;\n\t            if(isShortcutKey) {\n\t              var\n\t                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\n\t                $activeItem        = $menu.children('.' + className.active).eq(0),\n\t                $selectedItem      = ($currentlySelected.length > 0)\n\t                  ? $currentlySelected\n\t                  : $activeItem,\n\t                $visibleItems = ($selectedItem.length > 0)\n\t                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\n\t                  : $menu.children(':not(.' + className.filtered +')'),\n\t                $subMenu              = $selectedItem.children(selector.menu),\n\t                $parentMenu           = $selectedItem.closest(selector.menu),\n\t                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\n\t                hasSubMenu            = ($subMenu.length> 0),\n\t                hasSelectedItem       = ($selectedItem.length > 0),\n\t                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\n\t                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\n\t                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\n\t                $nextItem,\n\t                isSubMenuItem,\n\t                newIndex\n\t              ;\n\t              // allow selection with menu closed\n\t              if(isAdditionWithoutMenu) {\n\t                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n\t                module.event.item.click.call($selectedItem, event);\n\t                if(module.is.searchSelection()) {\n\t                  module.remove.searchTerm();\n\t                }\n\t              }\n\t\n\t              // visible menu keyboard shortcuts\n\t              if( module.is.visible() ) {\n\t\n\t                // enter (select or open sub-menu)\n\t                if(pressedKey == keys.enter || delimiterPressed) {\n\t                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\n\t                    module.verbose('Pressed enter on unselectable category, opening sub menu');\n\t                    pressedKey = keys.rightArrow;\n\t                  }\n\t                  else if(selectedIsSelectable) {\n\t                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n\t                    module.event.item.click.call($selectedItem, event);\n\t                    if(module.is.searchSelection()) {\n\t                      module.remove.searchTerm();\n\t                    }\n\t                  }\n\t                  event.preventDefault();\n\t                }\n\t\n\t                // sub-menu actions\n\t                if(hasSelectedItem) {\n\t\n\t                  if(pressedKey == keys.leftArrow) {\n\t\n\t                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\n\t\n\t                    if(isSubMenuItem) {\n\t                      module.verbose('Left key pressed, closing sub-menu');\n\t                      module.animate.hide(false, $parentMenu);\n\t                      $selectedItem\n\t                        .removeClass(className.selected)\n\t                      ;\n\t                      $parentMenu\n\t                        .closest(selector.item)\n\t                          .addClass(className.selected)\n\t                      ;\n\t                      event.preventDefault();\n\t                    }\n\t                  }\n\t\n\t                  // right arrow (show sub-menu)\n\t                  if(pressedKey == keys.rightArrow) {\n\t                    if(hasSubMenu) {\n\t                      module.verbose('Right key pressed, opening sub-menu');\n\t                      module.animate.show(false, $subMenu);\n\t                      $selectedItem\n\t                        .removeClass(className.selected)\n\t                      ;\n\t                      $subMenu\n\t                        .find(selector.item).eq(0)\n\t                          .addClass(className.selected)\n\t                      ;\n\t                      event.preventDefault();\n\t                    }\n\t                  }\n\t                }\n\t\n\t                // up arrow (traverse menu up)\n\t                if(pressedKey == keys.upArrow) {\n\t                  $nextItem = (hasSelectedItem && inVisibleMenu)\n\t                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n\t                    : $item.eq(0)\n\t                  ;\n\t                  if($visibleItems.index( $nextItem ) < 0) {\n\t                    module.verbose('Up key pressed but reached top of current menu');\n\t                    event.preventDefault();\n\t                    return;\n\t                  }\n\t                  else {\n\t                    module.verbose('Up key pressed, changing active item');\n\t                    $selectedItem\n\t                      .removeClass(className.selected)\n\t                    ;\n\t                    $nextItem\n\t                      .addClass(className.selected)\n\t                    ;\n\t                    module.set.scrollPosition($nextItem);\n\t                    if(settings.selectOnKeydown && module.is.single()) {\n\t                      module.set.selectedItem($nextItem);\n\t                    }\n\t                  }\n\t                  event.preventDefault();\n\t                }\n\t\n\t                // down arrow (traverse menu down)\n\t                if(pressedKey == keys.downArrow) {\n\t                  $nextItem = (hasSelectedItem && inVisibleMenu)\n\t                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n\t                    : $item.eq(0)\n\t                  ;\n\t                  if($nextItem.length === 0) {\n\t                    module.verbose('Down key pressed but reached bottom of current menu');\n\t                    event.preventDefault();\n\t                    return;\n\t                  }\n\t                  else {\n\t                    module.verbose('Down key pressed, changing active item');\n\t                    $item\n\t                      .removeClass(className.selected)\n\t                    ;\n\t                    $nextItem\n\t                      .addClass(className.selected)\n\t                    ;\n\t                    module.set.scrollPosition($nextItem);\n\t                    if(settings.selectOnKeydown && module.is.single()) {\n\t                      module.set.selectedItem($nextItem);\n\t                    }\n\t                  }\n\t                  event.preventDefault();\n\t                }\n\t\n\t                // page down (show next page)\n\t                if(pressedKey == keys.pageUp) {\n\t                  module.scrollPage('up');\n\t                  event.preventDefault();\n\t                }\n\t                if(pressedKey == keys.pageDown) {\n\t                  module.scrollPage('down');\n\t                  event.preventDefault();\n\t                }\n\t\n\t                // escape (close menu)\n\t                if(pressedKey == keys.escape) {\n\t                  module.verbose('Escape key pressed, closing dropdown');\n\t                  module.hide();\n\t                }\n\t\n\t              }\n\t              else {\n\t                // delimiter key\n\t                if(delimiterPressed) {\n\t                  event.preventDefault();\n\t                }\n\t                // down arrow (open menu)\n\t                if(pressedKey == keys.downArrow && !module.is.visible()) {\n\t                  module.verbose('Down key pressed, showing dropdown');\n\t                  module.select.firstUnfiltered();\n\t                  module.show();\n\t                  event.preventDefault();\n\t                }\n\t              }\n\t            }\n\t            else {\n\t              if( !module.has.search() ) {\n\t                module.set.selectedLetter( String.fromCharCode(pressedKey) );\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        trigger: {\n\t          change: function() {\n\t            var\n\t              events       = document.createEvent('HTMLEvents'),\n\t              inputElement = $input[0]\n\t            ;\n\t            if(inputElement) {\n\t              module.verbose('Triggering native change event');\n\t              events.initEvent('change', true, false);\n\t              inputElement.dispatchEvent(events);\n\t            }\n\t          }\n\t        },\n\t\n\t        determine: {\n\t          selectAction: function(text, value) {\n\t            module.verbose('Determining action', settings.action);\n\t            if( $.isFunction( module.action[settings.action] ) ) {\n\t              module.verbose('Triggering preset action', settings.action, text, value);\n\t              module.action[ settings.action ].call(element, text, value, this);\n\t            }\n\t            else if( $.isFunction(settings.action) ) {\n\t              module.verbose('Triggering user action', settings.action, text, value);\n\t              settings.action.call(element, text, value, this);\n\t            }\n\t            else {\n\t              module.error(error.action, settings.action);\n\t            }\n\t          },\n\t          eventInModule: function(event, callback) {\n\t            var\n\t              $target    = $(event.target),\n\t              inDocument = ($target.closest(document.documentElement).length > 0),\n\t              inModule   = ($target.closest($module).length > 0)\n\t            ;\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            if(inDocument && !inModule) {\n\t              module.verbose('Triggering event', callback);\n\t              callback();\n\t              return true;\n\t            }\n\t            else {\n\t              module.verbose('Event occurred in dropdown, canceling callback');\n\t              return false;\n\t            }\n\t          },\n\t          eventOnElement: function(event, callback) {\n\t            var\n\t              $target      = $(event.target),\n\t              $label       = $target.closest(selector.siblingLabel),\n\t              inVisibleDOM = document.body.contains(event.target),\n\t              notOnLabel   = ($module.find($label).length === 0),\n\t              notInMenu    = ($target.closest($menu).length === 0)\n\t            ;\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            if(inVisibleDOM && notOnLabel && notInMenu) {\n\t              module.verbose('Triggering event', callback);\n\t              callback();\n\t              return true;\n\t            }\n\t            else {\n\t              module.verbose('Event occurred in dropdown menu, canceling callback');\n\t              return false;\n\t            }\n\t          }\n\t        },\n\t\n\t        action: {\n\t\n\t          nothing: function() {},\n\t\n\t          activate: function(text, value, element) {\n\t            value = (value !== undefined)\n\t              ? value\n\t              : text\n\t            ;\n\t            if( module.can.activate( $(element) ) ) {\n\t              module.set.selected(value, $(element));\n\t              if(module.is.multiple() && !module.is.allFiltered()) {\n\t                return;\n\t              }\n\t              else {\n\t                module.hideAndClear();\n\t              }\n\t            }\n\t          },\n\t\n\t          select: function(text, value, element) {\n\t            value = (value !== undefined)\n\t              ? value\n\t              : text\n\t            ;\n\t            if( module.can.activate( $(element) ) ) {\n\t              module.set.value(value, $(element));\n\t              if(module.is.multiple() && !module.is.allFiltered()) {\n\t                return;\n\t              }\n\t              else {\n\t                module.hideAndClear();\n\t              }\n\t            }\n\t          },\n\t\n\t          combo: function(text, value, element) {\n\t            value = (value !== undefined)\n\t              ? value\n\t              : text\n\t            ;\n\t            module.set.selected(value, $(element));\n\t            module.hideAndClear();\n\t          },\n\t\n\t          hide: function(text, value, element) {\n\t            module.set.value(value, text);\n\t            module.hideAndClear();\n\t          }\n\t\n\t        },\n\t\n\t        get: {\n\t          id: function() {\n\t            return id;\n\t          },\n\t          defaultText: function() {\n\t            return $module.data(metadata.defaultText);\n\t          },\n\t          defaultValue: function() {\n\t            return $module.data(metadata.defaultValue);\n\t          },\n\t          placeholderText: function() {\n\t            return $module.data(metadata.placeholderText) || '';\n\t          },\n\t          text: function() {\n\t            return $text.text();\n\t          },\n\t          query: function() {\n\t            return $.trim($search.val());\n\t          },\n\t          searchWidth: function(value) {\n\t            value = (value !== undefined)\n\t              ? value\n\t              : $search.val()\n\t            ;\n\t            $sizer.text(value);\n\t            // prevent rounding issues\n\t            return Math.ceil( $sizer.width() + 1);\n\t          },\n\t          selectionCount: function() {\n\t            var\n\t              values = module.get.values(),\n\t              count\n\t            ;\n\t            count = ( module.is.multiple() )\n\t              ? $.isArray(values)\n\t                ? values.length\n\t                : 0\n\t              : (module.get.value() !== '')\n\t                ? 1\n\t                : 0\n\t            ;\n\t            return count;\n\t          },\n\t          transition: function($subMenu) {\n\t            return (settings.transition == 'auto')\n\t              ? module.is.upward($subMenu)\n\t                ? 'slide up'\n\t                : 'slide down'\n\t              : settings.transition\n\t            ;\n\t          },\n\t          userValues: function() {\n\t            var\n\t              values = module.get.values()\n\t            ;\n\t            if(!values) {\n\t              return false;\n\t            }\n\t            values = $.isArray(values)\n\t              ? values\n\t              : [values]\n\t            ;\n\t            return $.grep(values, function(value) {\n\t              return (module.get.item(value) === false);\n\t            });\n\t          },\n\t          uniqueArray: function(array) {\n\t            return $.grep(array, function (value, index) {\n\t                return $.inArray(value, array) === index;\n\t            });\n\t          },\n\t          caretPosition: function() {\n\t            var\n\t              input = $search.get(0),\n\t              range,\n\t              rangeLength\n\t            ;\n\t            if('selectionStart' in input) {\n\t              return input.selectionStart;\n\t            }\n\t            else if (document.selection) {\n\t              input.focus();\n\t              range       = document.selection.createRange();\n\t              rangeLength = range.text.length;\n\t              range.moveStart('character', -input.value.length);\n\t              return range.text.length - rangeLength;\n\t            }\n\t          },\n\t          value: function() {\n\t            var\n\t              value = ($input.length > 0)\n\t                ? $input.val()\n\t                : $module.data(metadata.value),\n\t              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\n\t            ;\n\t            // prevents placeholder element from being selected when multiple\n\t            return (value === undefined || isEmptyMultiselect)\n\t              ? ''\n\t              : value\n\t            ;\n\t          },\n\t          values: function() {\n\t            var\n\t              value = module.get.value()\n\t            ;\n\t            if(value === '') {\n\t              return '';\n\t            }\n\t            return ( !module.has.selectInput() && module.is.multiple() )\n\t              ? (typeof value == 'string') // delimited string\n\t                ? value.split(settings.delimiter)\n\t                : ''\n\t              : value\n\t            ;\n\t          },\n\t          remoteValues: function() {\n\t            var\n\t              values = module.get.values(),\n\t              remoteValues = false\n\t            ;\n\t            if(values) {\n\t              if(typeof values == 'string') {\n\t                values = [values];\n\t              }\n\t              $.each(values, function(index, value) {\n\t                var\n\t                  name = module.read.remoteData(value)\n\t                ;\n\t                module.verbose('Restoring value from session data', name, value);\n\t                if(name) {\n\t                  if(!remoteValues) {\n\t                    remoteValues = {};\n\t                  }\n\t                  remoteValues[value] = name;\n\t                }\n\t              });\n\t            }\n\t            return remoteValues;\n\t          },\n\t          choiceText: function($choice, preserveHTML) {\n\t            preserveHTML = (preserveHTML !== undefined)\n\t              ? preserveHTML\n\t              : settings.preserveHTML\n\t            ;\n\t            if($choice) {\n\t              if($choice.find(selector.menu).length > 0) {\n\t                module.verbose('Retrieving text of element with sub-menu');\n\t                $choice = $choice.clone();\n\t                $choice.find(selector.menu).remove();\n\t                $choice.find(selector.menuIcon).remove();\n\t              }\n\t              return ($choice.data(metadata.text) !== undefined)\n\t                ? $choice.data(metadata.text)\n\t                : (preserveHTML)\n\t                  ? $.trim($choice.html())\n\t                  : $.trim($choice.text())\n\t              ;\n\t            }\n\t          },\n\t          choiceValue: function($choice, choiceText) {\n\t            choiceText = choiceText || module.get.choiceText($choice);\n\t            if(!$choice) {\n\t              return false;\n\t            }\n\t            return ($choice.data(metadata.value) !== undefined)\n\t              ? String( $choice.data(metadata.value) )\n\t              : (typeof choiceText === 'string')\n\t                ? $.trim(choiceText.toLowerCase())\n\t                : String(choiceText)\n\t            ;\n\t          },\n\t          inputEvent: function() {\n\t            var\n\t              input = $search[0]\n\t            ;\n\t            if(input) {\n\t              return (input.oninput !== undefined)\n\t                ? 'input'\n\t                : (input.onpropertychange !== undefined)\n\t                  ? 'propertychange'\n\t                  : 'keyup'\n\t              ;\n\t            }\n\t            return false;\n\t          },\n\t          selectValues: function() {\n\t            var\n\t              select = {}\n\t            ;\n\t            select.values = [];\n\t            $module\n\t              .find('option')\n\t                .each(function() {\n\t                  var\n\t                    $option  = $(this),\n\t                    name     = $option.html(),\n\t                    disabled = $option.attr('disabled'),\n\t                    value    = ( $option.attr('value') !== undefined )\n\t                      ? $option.attr('value')\n\t                      : name\n\t                  ;\n\t                  if(settings.placeholder === 'auto' && value === '') {\n\t                    select.placeholder = name;\n\t                  }\n\t                  else {\n\t                    select.values.push({\n\t                      name     : name,\n\t                      value    : value,\n\t                      disabled : disabled\n\t                    });\n\t                  }\n\t                })\n\t            ;\n\t            if(settings.placeholder && settings.placeholder !== 'auto') {\n\t              module.debug('Setting placeholder value to', settings.placeholder);\n\t              select.placeholder = settings.placeholder;\n\t            }\n\t            if(settings.sortSelect) {\n\t              select.values.sort(function(a, b) {\n\t                return (a.name > b.name)\n\t                  ? 1\n\t                  : -1\n\t                ;\n\t              });\n\t              module.debug('Retrieved and sorted values from select', select);\n\t            }\n\t            else {\n\t              module.debug('Retrieved values from select', select);\n\t            }\n\t            return select;\n\t          },\n\t          activeItem: function() {\n\t            return $item.filter('.'  + className.active);\n\t          },\n\t          selectedItem: function() {\n\t            var\n\t              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\n\t            ;\n\t            return ($selectedItem.length > 0)\n\t              ? $selectedItem\n\t              : $item.eq(0)\n\t            ;\n\t          },\n\t          itemWithAdditions: function(value) {\n\t            var\n\t              $items       = module.get.item(value),\n\t              $userItems   = module.create.userChoice(value),\n\t              hasUserItems = ($userItems && $userItems.length > 0)\n\t            ;\n\t            if(hasUserItems) {\n\t              $items = ($items.length > 0)\n\t                ? $items.add($userItems)\n\t                : $userItems\n\t              ;\n\t            }\n\t            return $items;\n\t          },\n\t          item: function(value, strict) {\n\t            var\n\t              $selectedItem = false,\n\t              shouldSearch,\n\t              isMultiple\n\t            ;\n\t            value = (value !== undefined)\n\t              ? value\n\t              : ( module.get.values() !== undefined)\n\t                ? module.get.values()\n\t                : module.get.text()\n\t            ;\n\t            shouldSearch = (isMultiple)\n\t              ? (value.length > 0)\n\t              : (value !== undefined && value !== null)\n\t            ;\n\t            isMultiple = (module.is.multiple() && $.isArray(value));\n\t            strict     = (value === '' || value === 0)\n\t              ? true\n\t              : strict || false\n\t            ;\n\t            if(shouldSearch) {\n\t              $item\n\t                .each(function() {\n\t                  var\n\t                    $choice       = $(this),\n\t                    optionText    = module.get.choiceText($choice),\n\t                    optionValue   = module.get.choiceValue($choice, optionText)\n\t                  ;\n\t                  // safe early exit\n\t                  if(optionValue === null || optionValue === undefined) {\n\t                    return;\n\t                  }\n\t                  if(isMultiple) {\n\t                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\n\t                      $selectedItem = ($selectedItem)\n\t                        ? $selectedItem.add($choice)\n\t                        : $choice\n\t                      ;\n\t                    }\n\t                  }\n\t                  else if(strict) {\n\t                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\n\t                    if( optionValue === value || optionText === value) {\n\t                      $selectedItem = $choice;\n\t                      return true;\n\t                    }\n\t                  }\n\t                  else {\n\t                    if( String(optionValue) == String(value) || optionText == value) {\n\t                      module.verbose('Found select item by value', optionValue, value);\n\t                      $selectedItem = $choice;\n\t                      return true;\n\t                    }\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            return $selectedItem;\n\t          }\n\t        },\n\t\n\t        check: {\n\t          maxSelections: function(selectionCount) {\n\t            if(settings.maxSelections) {\n\t              selectionCount = (selectionCount !== undefined)\n\t                ? selectionCount\n\t                : module.get.selectionCount()\n\t              ;\n\t              if(selectionCount >= settings.maxSelections) {\n\t                module.debug('Maximum selection count reached');\n\t                if(settings.useLabels) {\n\t                  $item.addClass(className.filtered);\n\t                  module.add.message(message.maxSelections);\n\t                }\n\t                return true;\n\t              }\n\t              else {\n\t                module.verbose('No longer at maximum selection count');\n\t                module.remove.message();\n\t                module.remove.filteredItem();\n\t                if(module.is.searchSelection()) {\n\t                  module.filterItems();\n\t                }\n\t                return false;\n\t              }\n\t            }\n\t            return true;\n\t          }\n\t        },\n\t\n\t        restore: {\n\t          defaults: function() {\n\t            module.clear();\n\t            module.restore.defaultText();\n\t            module.restore.defaultValue();\n\t          },\n\t          defaultText: function() {\n\t            var\n\t              defaultText     = module.get.defaultText(),\n\t              placeholderText = module.get.placeholderText\n\t            ;\n\t            if(defaultText === placeholderText) {\n\t              module.debug('Restoring default placeholder text', defaultText);\n\t              module.set.placeholderText(defaultText);\n\t            }\n\t            else {\n\t              module.debug('Restoring default text', defaultText);\n\t              module.set.text(defaultText);\n\t            }\n\t          },\n\t          placeholderText: function() {\n\t            module.set.placeholderText();\n\t          },\n\t          defaultValue: function() {\n\t            var\n\t              defaultValue = module.get.defaultValue()\n\t            ;\n\t            if(defaultValue !== undefined) {\n\t              module.debug('Restoring default value', defaultValue);\n\t              if(defaultValue !== '') {\n\t                module.set.value(defaultValue);\n\t                module.set.selected();\n\t              }\n\t              else {\n\t                module.remove.activeItem();\n\t                module.remove.selectedItem();\n\t              }\n\t            }\n\t          },\n\t          labels: function() {\n\t            if(settings.allowAdditions) {\n\t              if(!settings.useLabels) {\n\t                module.error(error.labels);\n\t                settings.useLabels = true;\n\t              }\n\t              module.debug('Restoring selected values');\n\t              module.create.userLabels();\n\t            }\n\t            module.check.maxSelections();\n\t          },\n\t          selected: function() {\n\t            module.restore.values();\n\t            if(module.is.multiple()) {\n\t              module.debug('Restoring previously selected values and labels');\n\t              module.restore.labels();\n\t            }\n\t            else {\n\t              module.debug('Restoring previously selected values');\n\t            }\n\t          },\n\t          values: function() {\n\t            // prevents callbacks from occurring on initial load\n\t            module.set.initialLoad();\n\t            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\n\t              module.restore.remoteValues();\n\t            }\n\t            else {\n\t              module.set.selected();\n\t            }\n\t            module.remove.initialLoad();\n\t          },\n\t          remoteValues: function() {\n\t            var\n\t              values = module.get.remoteValues()\n\t            ;\n\t            module.debug('Recreating selected from session data', values);\n\t            if(values) {\n\t              if( module.is.single() ) {\n\t                $.each(values, function(value, name) {\n\t                  module.set.text(name);\n\t                });\n\t              }\n\t              else {\n\t                $.each(values, function(value, name) {\n\t                  module.add.label(value, name);\n\t                });\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        read: {\n\t          remoteData: function(value) {\n\t            var\n\t              name\n\t            ;\n\t            if(window.Storage === undefined) {\n\t              module.error(error.noStorage);\n\t              return;\n\t            }\n\t            name = sessionStorage.getItem(value);\n\t            return (name !== undefined)\n\t              ? name\n\t              : false\n\t            ;\n\t          }\n\t        },\n\t\n\t        save: {\n\t          defaults: function() {\n\t            module.save.defaultText();\n\t            module.save.placeholderText();\n\t            module.save.defaultValue();\n\t          },\n\t          defaultValue: function() {\n\t            var\n\t              value = module.get.value()\n\t            ;\n\t            module.verbose('Saving default value as', value);\n\t            $module.data(metadata.defaultValue, value);\n\t          },\n\t          defaultText: function() {\n\t            var\n\t              text = module.get.text()\n\t            ;\n\t            module.verbose('Saving default text as', text);\n\t            $module.data(metadata.defaultText, text);\n\t          },\n\t          placeholderText: function() {\n\t            var\n\t              text\n\t            ;\n\t            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\n\t              text = module.get.text();\n\t              module.verbose('Saving placeholder text as', text);\n\t              $module.data(metadata.placeholderText, text);\n\t            }\n\t          },\n\t          remoteData: function(name, value) {\n\t            if(window.Storage === undefined) {\n\t              module.error(error.noStorage);\n\t              return;\n\t            }\n\t            module.verbose('Saving remote data to session storage', value, name);\n\t            sessionStorage.setItem(value, name);\n\t          }\n\t        },\n\t\n\t        clear: function() {\n\t          if(module.is.multiple() && settings.useLabels) {\n\t            module.remove.labels();\n\t          }\n\t          else {\n\t            module.remove.activeItem();\n\t            module.remove.selectedItem();\n\t          }\n\t          module.set.placeholderText();\n\t          module.clearValue();\n\t        },\n\t\n\t        clearValue: function() {\n\t          module.set.value('');\n\t        },\n\t\n\t        scrollPage: function(direction, $selectedItem) {\n\t          var\n\t            $currentItem  = $selectedItem || module.get.selectedItem(),\n\t            $menu         = $currentItem.closest(selector.menu),\n\t            menuHeight    = $menu.outerHeight(),\n\t            currentScroll = $menu.scrollTop(),\n\t            itemHeight    = $item.eq(0).outerHeight(),\n\t            itemsPerPage  = Math.floor(menuHeight / itemHeight),\n\t            maxScroll     = $menu.prop('scrollHeight'),\n\t            newScroll     = (direction == 'up')\n\t              ? currentScroll - (itemHeight * itemsPerPage)\n\t              : currentScroll + (itemHeight * itemsPerPage),\n\t            $selectableItem = $item.not(selector.unselectable),\n\t            isWithinRange,\n\t            $nextSelectedItem,\n\t            elementIndex\n\t          ;\n\t          elementIndex      = (direction == 'up')\n\t            ? $selectableItem.index($currentItem) - itemsPerPage\n\t            : $selectableItem.index($currentItem) + itemsPerPage\n\t          ;\n\t          isWithinRange = (direction == 'up')\n\t            ? (elementIndex >= 0)\n\t            : (elementIndex < $selectableItem.length)\n\t          ;\n\t          $nextSelectedItem = (isWithinRange)\n\t            ? $selectableItem.eq(elementIndex)\n\t            : (direction == 'up')\n\t              ? $selectableItem.first()\n\t              : $selectableItem.last()\n\t          ;\n\t          if($nextSelectedItem.length > 0) {\n\t            module.debug('Scrolling page', direction, $nextSelectedItem);\n\t            $currentItem\n\t              .removeClass(className.selected)\n\t            ;\n\t            $nextSelectedItem\n\t              .addClass(className.selected)\n\t            ;\n\t            if(settings.selectOnKeydown && module.is.single()) {\n\t              module.set.selectedItem($nextSelectedItem);\n\t            }\n\t            $menu\n\t              .scrollTop(newScroll)\n\t            ;\n\t          }\n\t        },\n\t\n\t        set: {\n\t          filtered: function() {\n\t            var\n\t              isMultiple       = module.is.multiple(),\n\t              isSearch         = module.is.searchSelection(),\n\t              isSearchMultiple = (isMultiple && isSearch),\n\t              searchValue      = (isSearch)\n\t                ? module.get.query()\n\t                : '',\n\t              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\n\t              searchWidth      = module.get.searchWidth(),\n\t              valueIsSet       = searchValue !== ''\n\t            ;\n\t            if(isMultiple && hasSearchValue) {\n\t              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\n\t              $search.css('width', searchWidth);\n\t            }\n\t            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\n\t              module.verbose('Hiding placeholder text');\n\t              $text.addClass(className.filtered);\n\t            }\n\t            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\n\t              module.verbose('Showing placeholder text');\n\t              $text.removeClass(className.filtered);\n\t            }\n\t          },\n\t          empty: function() {\n\t            $module.addClass(className.empty);\n\t          },\n\t          loading: function() {\n\t            $module.addClass(className.loading);\n\t          },\n\t          placeholderText: function(text) {\n\t            text = text || module.get.placeholderText();\n\t            module.debug('Setting placeholder text', text);\n\t            module.set.text(text);\n\t            $text.addClass(className.placeholder);\n\t          },\n\t          tabbable: function() {\n\t            if( module.is.searchSelection() ) {\n\t              module.debug('Added tabindex to searchable dropdown');\n\t              $search\n\t                .val('')\n\t                .attr('tabindex', 0)\n\t              ;\n\t              $menu\n\t                .attr('tabindex', -1)\n\t              ;\n\t            }\n\t            else {\n\t              module.debug('Added tabindex to dropdown');\n\t              if( $module.attr('tabindex') === undefined) {\n\t                $module\n\t                  .attr('tabindex', 0)\n\t                ;\n\t                $menu\n\t                  .attr('tabindex', -1)\n\t                ;\n\t              }\n\t            }\n\t          },\n\t          initialLoad: function() {\n\t            module.verbose('Setting initial load');\n\t            initialLoad = true;\n\t          },\n\t          activeItem: function($item) {\n\t            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\n\t              $item.addClass(className.filtered);\n\t            }\n\t            else {\n\t              $item.addClass(className.active);\n\t            }\n\t          },\n\t          partialSearch: function(text) {\n\t            var\n\t              length = module.get.query().length\n\t            ;\n\t            $search.val( text.substr(0 , length));\n\t          },\n\t          scrollPosition: function($item, forceScroll) {\n\t            var\n\t              edgeTolerance = 5,\n\t              $menu,\n\t              hasActive,\n\t              offset,\n\t              itemHeight,\n\t              itemOffset,\n\t              menuOffset,\n\t              menuScroll,\n\t              menuHeight,\n\t              abovePage,\n\t              belowPage\n\t            ;\n\t\n\t            $item       = $item || module.get.selectedItem();\n\t            $menu       = $item.closest(selector.menu);\n\t            hasActive   = ($item && $item.length > 0);\n\t            forceScroll = (forceScroll !== undefined)\n\t              ? forceScroll\n\t              : false\n\t            ;\n\t            if($item && $menu.length > 0 && hasActive) {\n\t              itemOffset = $item.position().top;\n\t\n\t              $menu.addClass(className.loading);\n\t              menuScroll = $menu.scrollTop();\n\t              menuOffset = $menu.offset().top;\n\t              itemOffset = $item.offset().top;\n\t              offset     = menuScroll - menuOffset + itemOffset;\n\t              if(!forceScroll) {\n\t                menuHeight = $menu.height();\n\t                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\n\t                abovePage  = ((offset - edgeTolerance) < menuScroll);\n\t              }\n\t              module.debug('Scrolling to active item', offset);\n\t              if(forceScroll || abovePage || belowPage) {\n\t                $menu.scrollTop(offset);\n\t              }\n\t              $menu.removeClass(className.loading);\n\t            }\n\t          },\n\t          text: function(text) {\n\t            if(settings.action !== 'select') {\n\t              if(settings.action == 'combo') {\n\t                module.debug('Changing combo button text', text, $combo);\n\t                if(settings.preserveHTML) {\n\t                  $combo.html(text);\n\t                }\n\t                else {\n\t                  $combo.text(text);\n\t                }\n\t              }\n\t              else {\n\t                if(text !== module.get.placeholderText()) {\n\t                  $text.removeClass(className.placeholder);\n\t                }\n\t                module.debug('Changing text', text, $text);\n\t                $text\n\t                  .removeClass(className.filtered)\n\t                ;\n\t                if(settings.preserveHTML) {\n\t                  $text.html(text);\n\t                }\n\t                else {\n\t                  $text.text(text);\n\t                }\n\t              }\n\t            }\n\t          },\n\t          selectedItem: function($item) {\n\t            var\n\t              value      = module.get.choiceValue($item),\n\t              searchText = module.get.choiceText($item, false),\n\t              text       = module.get.choiceText($item, true)\n\t            ;\n\t            module.debug('Setting user selection to item', $item);\n\t            module.remove.activeItem();\n\t            module.set.partialSearch(searchText);\n\t            module.set.activeItem($item);\n\t            module.set.selected(value, $item);\n\t            module.set.text(text);\n\t          },\n\t          selectedLetter: function(letter) {\n\t            var\n\t              $selectedItem         = $item.filter('.' + className.selected),\n\t              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\n\t              $nextValue            = false,\n\t              $nextItem\n\t            ;\n\t            // check next of same letter\n\t            if(alreadySelectedLetter) {\n\t              $nextItem = $selectedItem.nextAll($item).eq(0);\n\t              if( module.has.firstLetter($nextItem, letter) ) {\n\t                $nextValue  = $nextItem;\n\t              }\n\t            }\n\t            // check all values\n\t            if(!$nextValue) {\n\t              $item\n\t                .each(function(){\n\t                  if(module.has.firstLetter($(this), letter)) {\n\t                    $nextValue = $(this);\n\t                    return false;\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            // set next value\n\t            if($nextValue) {\n\t              module.verbose('Scrolling to next value with letter', letter);\n\t              module.set.scrollPosition($nextValue);\n\t              $selectedItem.removeClass(className.selected);\n\t              $nextValue.addClass(className.selected);\n\t              if(settings.selectOnKeydown && module.is.single()) {\n\t                module.set.selectedItem($nextValue);\n\t              }\n\t            }\n\t          },\n\t          direction: function($menu) {\n\t            if(settings.direction == 'auto') {\n\t              if(module.is.onScreen($menu)) {\n\t                module.remove.upward($menu);\n\t              }\n\t              else {\n\t                module.set.upward($menu);\n\t              }\n\t            }\n\t            else if(settings.direction == 'upward') {\n\t              module.set.upward($menu);\n\t            }\n\t          },\n\t          upward: function($menu) {\n\t            var $element = $menu || $module;\n\t            $element.addClass(className.upward);\n\t          },\n\t          value: function(value, text, $selected) {\n\t            var\n\t              escapedValue = module.escape.value(value),\n\t              hasInput     = ($input.length > 0),\n\t              isAddition   = !module.has.value(value),\n\t              currentValue = module.get.values(),\n\t              stringValue  = (value !== undefined)\n\t                ? String(value)\n\t                : value,\n\t              newValue\n\t            ;\n\t            if(hasInput) {\n\t              if(!settings.allowReselection && stringValue == currentValue) {\n\t                module.verbose('Skipping value update already same value', value, currentValue);\n\t                if(!module.is.initialLoad()) {\n\t                  return;\n\t                }\n\t              }\n\t\n\t              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\n\t                module.debug('Adding user option', value);\n\t                module.add.optionValue(value);\n\t              }\n\t              module.debug('Updating input value', escapedValue, currentValue);\n\t              internalChange = true;\n\t              $input\n\t                .val(escapedValue)\n\t              ;\n\t              if(settings.fireOnInit === false && module.is.initialLoad()) {\n\t                module.debug('Input native change event ignored on initial load');\n\t              }\n\t              else {\n\t                module.trigger.change();\n\t              }\n\t              internalChange = false;\n\t            }\n\t            else {\n\t              module.verbose('Storing value in metadata', escapedValue, $input);\n\t              if(escapedValue !== currentValue) {\n\t                $module.data(metadata.value, stringValue);\n\t              }\n\t            }\n\t            if(settings.fireOnInit === false && module.is.initialLoad()) {\n\t              module.verbose('No callback on initial load', settings.onChange);\n\t            }\n\t            else {\n\t              settings.onChange.call(element, value, text, $selected);\n\t            }\n\t          },\n\t          active: function() {\n\t            $module\n\t              .addClass(className.active)\n\t            ;\n\t          },\n\t          multiple: function() {\n\t            $module.addClass(className.multiple);\n\t          },\n\t          visible: function() {\n\t            $module.addClass(className.visible);\n\t          },\n\t          exactly: function(value, $selectedItem) {\n\t            module.debug('Setting selected to exact values');\n\t            module.clear();\n\t            module.set.selected(value, $selectedItem);\n\t          },\n\t          selected: function(value, $selectedItem) {\n\t            var\n\t              isMultiple = module.is.multiple(),\n\t              $userSelectedItem\n\t            ;\n\t            $selectedItem = (settings.allowAdditions)\n\t              ? $selectedItem || module.get.itemWithAdditions(value)\n\t              : $selectedItem || module.get.item(value)\n\t            ;\n\t            if(!$selectedItem) {\n\t              return;\n\t            }\n\t            module.debug('Setting selected menu item to', $selectedItem);\n\t            if(module.is.multiple()) {\n\t              module.remove.searchWidth();\n\t            }\n\t            if(module.is.single()) {\n\t              module.remove.activeItem();\n\t              module.remove.selectedItem();\n\t            }\n\t            else if(settings.useLabels) {\n\t              module.remove.selectedItem();\n\t            }\n\t            // select each item\n\t            $selectedItem\n\t              .each(function() {\n\t                var\n\t                  $selected      = $(this),\n\t                  selectedText   = module.get.choiceText($selected),\n\t                  selectedValue  = module.get.choiceValue($selected, selectedText),\n\t\n\t                  isFiltered     = $selected.hasClass(className.filtered),\n\t                  isActive       = $selected.hasClass(className.active),\n\t                  isUserValue    = $selected.hasClass(className.addition),\n\t                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\n\t                ;\n\t                if(isMultiple) {\n\t                  if(!isActive || isUserValue) {\n\t                    if(settings.apiSettings && settings.saveRemoteData) {\n\t                      module.save.remoteData(selectedText, selectedValue);\n\t                    }\n\t                    if(settings.useLabels) {\n\t                      module.add.value(selectedValue, selectedText, $selected);\n\t                      module.add.label(selectedValue, selectedText, shouldAnimate);\n\t                      module.set.activeItem($selected);\n\t                      module.filterActive();\n\t                      module.select.nextAvailable($selectedItem);\n\t                    }\n\t                    else {\n\t                      module.add.value(selectedValue, selectedText, $selected);\n\t                      module.set.text(module.add.variables(message.count));\n\t                      module.set.activeItem($selected);\n\t                    }\n\t                  }\n\t                  else if(!isFiltered) {\n\t                    module.debug('Selected active value, removing label');\n\t                    module.remove.selected(selectedValue);\n\t                  }\n\t                }\n\t                else {\n\t                  if(settings.apiSettings && settings.saveRemoteData) {\n\t                    module.save.remoteData(selectedText, selectedValue);\n\t                  }\n\t                  module.set.text(selectedText);\n\t                  module.set.value(selectedValue, selectedText, $selected);\n\t                  $selected\n\t                    .addClass(className.active)\n\t                    .addClass(className.selected)\n\t                  ;\n\t                }\n\t              })\n\t            ;\n\t          }\n\t        },\n\t\n\t        add: {\n\t          label: function(value, text, shouldAnimate) {\n\t            var\n\t              $next  = module.is.searchSelection()\n\t                ? $search\n\t                : $text,\n\t              escapedValue = module.escape.value(value),\n\t              $label\n\t            ;\n\t            $label =  $('<a />')\n\t              .addClass(className.label)\n\t              .attr('data-' + metadata.value, escapedValue)\n\t              .html(templates.label(escapedValue, text))\n\t            ;\n\t            $label = settings.onLabelCreate.call($label, escapedValue, text);\n\t\n\t            if(module.has.label(value)) {\n\t              module.debug('Label already exists, skipping', escapedValue);\n\t              return;\n\t            }\n\t            if(settings.label.variation) {\n\t              $label.addClass(settings.label.variation);\n\t            }\n\t            if(shouldAnimate === true) {\n\t              module.debug('Animating in label', $label);\n\t              $label\n\t                .addClass(className.hidden)\n\t                .insertBefore($next)\n\t                .transition(settings.label.transition, settings.label.duration)\n\t              ;\n\t            }\n\t            else {\n\t              module.debug('Adding selection label', $label);\n\t              $label\n\t                .insertBefore($next)\n\t              ;\n\t            }\n\t          },\n\t          message: function(message) {\n\t            var\n\t              $message = $menu.children(selector.message),\n\t              html     = settings.templates.message(module.add.variables(message))\n\t            ;\n\t            if($message.length > 0) {\n\t              $message\n\t                .html(html)\n\t              ;\n\t            }\n\t            else {\n\t              $message = $('<div/>')\n\t                .html(html)\n\t                .addClass(className.message)\n\t                .appendTo($menu)\n\t              ;\n\t            }\n\t          },\n\t          optionValue: function(value) {\n\t            var\n\t              escapedValue = module.escape.value(value),\n\t              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n\t              hasOption    = ($option.length > 0)\n\t            ;\n\t            if(hasOption) {\n\t              return;\n\t            }\n\t            // temporarily disconnect observer\n\t            module.disconnect.selectObserver();\n\t            if( module.is.single() ) {\n\t              module.verbose('Removing previous user addition');\n\t              $input.find('option.' + className.addition).remove();\n\t            }\n\t            $('<option/>')\n\t              .prop('value', escapedValue)\n\t              .addClass(className.addition)\n\t              .html(value)\n\t              .appendTo($input)\n\t            ;\n\t            module.verbose('Adding user addition as an <option>', value);\n\t            module.observe.select();\n\t          },\n\t          userSuggestion: function(value) {\n\t            var\n\t              $addition         = $menu.children(selector.addition),\n\t              $existingItem     = module.get.item(value),\n\t              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\n\t              hasUserSuggestion = $addition.length > 0,\n\t              html\n\t            ;\n\t            if(settings.useLabels && module.has.maxSelections()) {\n\t              return;\n\t            }\n\t            if(value === '' || alreadyHasValue) {\n\t              $addition.remove();\n\t              return;\n\t            }\n\t            if(hasUserSuggestion) {\n\t              $addition\n\t                .data(metadata.value, value)\n\t                .data(metadata.text, value)\n\t                .attr('data-' + metadata.value, value)\n\t                .attr('data-' + metadata.text, value)\n\t                .removeClass(className.filtered)\n\t              ;\n\t              if(!settings.hideAdditions) {\n\t                html = settings.templates.addition( module.add.variables(message.addResult, value) );\n\t                $addition\n\t                  .html(html)\n\t                ;\n\t              }\n\t              module.verbose('Replacing user suggestion with new value', $addition);\n\t            }\n\t            else {\n\t              $addition = module.create.userChoice(value);\n\t              $addition\n\t                .prependTo($menu)\n\t              ;\n\t              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\n\t            }\n\t            if(!settings.hideAdditions || module.is.allFiltered()) {\n\t              $addition\n\t                .addClass(className.selected)\n\t                .siblings()\n\t                .removeClass(className.selected)\n\t              ;\n\t            }\n\t            module.refreshItems();\n\t          },\n\t          variables: function(message, term) {\n\t            var\n\t              hasCount    = (message.search('{count}') !== -1),\n\t              hasMaxCount = (message.search('{maxCount}') !== -1),\n\t              hasTerm     = (message.search('{term}') !== -1),\n\t              values,\n\t              count,\n\t              query\n\t            ;\n\t            module.verbose('Adding templated variables to message', message);\n\t            if(hasCount) {\n\t              count  = module.get.selectionCount();\n\t              message = message.replace('{count}', count);\n\t            }\n\t            if(hasMaxCount) {\n\t              count  = module.get.selectionCount();\n\t              message = message.replace('{maxCount}', settings.maxSelections);\n\t            }\n\t            if(hasTerm) {\n\t              query   = term || module.get.query();\n\t              message = message.replace('{term}', query);\n\t            }\n\t            return message;\n\t          },\n\t          value: function(addedValue, addedText, $selectedItem) {\n\t            var\n\t              currentValue = module.get.values(),\n\t              newValue\n\t            ;\n\t            if(addedValue === '') {\n\t              module.debug('Cannot select blank values from multiselect');\n\t              return;\n\t            }\n\t            // extend current array\n\t            if($.isArray(currentValue)) {\n\t              newValue = currentValue.concat([addedValue]);\n\t              newValue = module.get.uniqueArray(newValue);\n\t            }\n\t            else {\n\t              newValue = [addedValue];\n\t            }\n\t            // add values\n\t            if( module.has.selectInput() ) {\n\t              if(module.can.extendSelect()) {\n\t                module.debug('Adding value to select', addedValue, newValue, $input);\n\t                module.add.optionValue(addedValue);\n\t              }\n\t            }\n\t            else {\n\t              newValue = newValue.join(settings.delimiter);\n\t              module.debug('Setting hidden input to delimited value', newValue, $input);\n\t            }\n\t\n\t            if(settings.fireOnInit === false && module.is.initialLoad()) {\n\t              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\n\t            }\n\t            else {\n\t              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\n\t            }\n\t            module.set.value(newValue, addedValue, addedText, $selectedItem);\n\t            module.check.maxSelections();\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          active: function() {\n\t            $module.removeClass(className.active);\n\t          },\n\t          activeLabel: function() {\n\t            $module.find(selector.label).removeClass(className.active);\n\t          },\n\t          empty: function() {\n\t            $module.removeClass(className.empty);\n\t          },\n\t          loading: function() {\n\t            $module.removeClass(className.loading);\n\t          },\n\t          initialLoad: function() {\n\t            initialLoad = false;\n\t          },\n\t          upward: function($menu) {\n\t            var $element = $menu || $module;\n\t            $element.removeClass(className.upward);\n\t          },\n\t          visible: function() {\n\t            $module.removeClass(className.visible);\n\t          },\n\t          activeItem: function() {\n\t            $item.removeClass(className.active);\n\t          },\n\t          filteredItem: function() {\n\t            if(settings.useLabels && module.has.maxSelections() ) {\n\t              return;\n\t            }\n\t            if(settings.useLabels && module.is.multiple()) {\n\t              $item.not('.' + className.active).removeClass(className.filtered);\n\t            }\n\t            else {\n\t              $item.removeClass(className.filtered);\n\t            }\n\t            module.remove.empty();\n\t          },\n\t          optionValue: function(value) {\n\t            var\n\t              escapedValue = module.escape.value(value),\n\t              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n\t              hasOption    = ($option.length > 0)\n\t            ;\n\t            if(!hasOption || !$option.hasClass(className.addition)) {\n\t              return;\n\t            }\n\t            // temporarily disconnect observer\n\t            if(selectObserver) {\n\t              selectObserver.disconnect();\n\t              module.verbose('Temporarily disconnecting mutation observer');\n\t            }\n\t            $option.remove();\n\t            module.verbose('Removing user addition as an <option>', escapedValue);\n\t            if(selectObserver) {\n\t              selectObserver.observe($input[0], {\n\t                childList : true,\n\t                subtree   : true\n\t              });\n\t            }\n\t          },\n\t          message: function() {\n\t            $menu.children(selector.message).remove();\n\t          },\n\t          searchWidth: function() {\n\t            $search.css('width', '');\n\t          },\n\t          searchTerm: function() {\n\t            module.verbose('Cleared search term');\n\t            $search.val('');\n\t            module.set.filtered();\n\t          },\n\t          userAddition: function() {\n\t            $item.filter(selector.addition).remove();\n\t          },\n\t          selected: function(value, $selectedItem) {\n\t            $selectedItem = (settings.allowAdditions)\n\t              ? $selectedItem || module.get.itemWithAdditions(value)\n\t              : $selectedItem || module.get.item(value)\n\t            ;\n\t\n\t            if(!$selectedItem) {\n\t              return false;\n\t            }\n\t\n\t            $selectedItem\n\t              .each(function() {\n\t                var\n\t                  $selected     = $(this),\n\t                  selectedText  = module.get.choiceText($selected),\n\t                  selectedValue = module.get.choiceValue($selected, selectedText)\n\t                ;\n\t                if(module.is.multiple()) {\n\t                  if(settings.useLabels) {\n\t                    module.remove.value(selectedValue, selectedText, $selected);\n\t                    module.remove.label(selectedValue);\n\t                  }\n\t                  else {\n\t                    module.remove.value(selectedValue, selectedText, $selected);\n\t                    if(module.get.selectionCount() === 0) {\n\t                      module.set.placeholderText();\n\t                    }\n\t                    else {\n\t                      module.set.text(module.add.variables(message.count));\n\t                    }\n\t                  }\n\t                }\n\t                else {\n\t                  module.remove.value(selectedValue, selectedText, $selected);\n\t                }\n\t                $selected\n\t                  .removeClass(className.filtered)\n\t                  .removeClass(className.active)\n\t                ;\n\t                if(settings.useLabels) {\n\t                  $selected.removeClass(className.selected);\n\t                }\n\t              })\n\t            ;\n\t          },\n\t          selectedItem: function() {\n\t            $item.removeClass(className.selected);\n\t          },\n\t          value: function(removedValue, removedText, $removedItem) {\n\t            var\n\t              values = module.get.values(),\n\t              newValue\n\t            ;\n\t            if( module.has.selectInput() ) {\n\t              module.verbose('Input is <select> removing selected option', removedValue);\n\t              newValue = module.remove.arrayValue(removedValue, values);\n\t              module.remove.optionValue(removedValue);\n\t            }\n\t            else {\n\t              module.verbose('Removing from delimited values', removedValue);\n\t              newValue = module.remove.arrayValue(removedValue, values);\n\t              newValue = newValue.join(settings.delimiter);\n\t            }\n\t            if(settings.fireOnInit === false && module.is.initialLoad()) {\n\t              module.verbose('No callback on initial load', settings.onRemove);\n\t            }\n\t            else {\n\t              settings.onRemove.call(element, removedValue, removedText, $removedItem);\n\t            }\n\t            module.set.value(newValue, removedText, $removedItem);\n\t            module.check.maxSelections();\n\t          },\n\t          arrayValue: function(removedValue, values) {\n\t            if( !$.isArray(values) ) {\n\t              values = [values];\n\t            }\n\t            values = $.grep(values, function(value){\n\t              return (removedValue != value);\n\t            });\n\t            module.verbose('Removed value from delimited string', removedValue, values);\n\t            return values;\n\t          },\n\t          label: function(value, shouldAnimate) {\n\t            var\n\t              $labels       = $module.find(selector.label),\n\t              $removedLabel = $labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(value) +'\"]')\n\t            ;\n\t            module.verbose('Removing label', $removedLabel);\n\t            $removedLabel.remove();\n\t          },\n\t          activeLabels: function($activeLabels) {\n\t            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\n\t            module.verbose('Removing active label selections', $activeLabels);\n\t            module.remove.labels($activeLabels);\n\t          },\n\t          labels: function($labels) {\n\t            $labels = $labels || $module.find(selector.label);\n\t            module.verbose('Removing labels', $labels);\n\t            $labels\n\t              .each(function(){\n\t                var\n\t                  $label      = $(this),\n\t                  value       = $label.data(metadata.value),\n\t                  stringValue = (value !== undefined)\n\t                    ? String(value)\n\t                    : value,\n\t                  isUserValue = module.is.userValue(stringValue)\n\t                ;\n\t                if(settings.onLabelRemove.call($label, value) === false) {\n\t                  module.debug('Label remove callback cancelled removal');\n\t                  return;\n\t                }\n\t                module.remove.message();\n\t                if(isUserValue) {\n\t                  module.remove.value(stringValue);\n\t                  module.remove.label(stringValue);\n\t                }\n\t                else {\n\t                  // selected will also remove label\n\t                  module.remove.selected(stringValue);\n\t                }\n\t              })\n\t            ;\n\t          },\n\t          tabbable: function() {\n\t            if( module.is.searchSelection() ) {\n\t              module.debug('Searchable dropdown initialized');\n\t              $search\n\t                .removeAttr('tabindex')\n\t              ;\n\t              $menu\n\t                .removeAttr('tabindex')\n\t              ;\n\t            }\n\t            else {\n\t              module.debug('Simple selection dropdown initialized');\n\t              $module\n\t                .removeAttr('tabindex')\n\t              ;\n\t              $menu\n\t                .removeAttr('tabindex')\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        has: {\n\t          menuSearch: function() {\n\t            return (module.has.search() && $search.closest($menu).length > 0);\n\t          },\n\t          search: function() {\n\t            return ($search.length > 0);\n\t          },\n\t          sizer: function() {\n\t            return ($sizer.length > 0);\n\t          },\n\t          selectInput: function() {\n\t            return ( $input.is('select') );\n\t          },\n\t          minCharacters: function(searchTerm) {\n\t            if(settings.minCharacters) {\n\t              searchTerm = (searchTerm !== undefined)\n\t                ? String(searchTerm)\n\t                : String(module.get.query())\n\t              ;\n\t              return (searchTerm.length >= settings.minCharacters);\n\t            }\n\t            return true;\n\t          },\n\t          firstLetter: function($item, letter) {\n\t            var\n\t              text,\n\t              firstLetter\n\t            ;\n\t            if(!$item || $item.length === 0 || typeof letter !== 'string') {\n\t              return false;\n\t            }\n\t            text        = module.get.choiceText($item, false);\n\t            letter      = letter.toLowerCase();\n\t            firstLetter = String(text).charAt(0).toLowerCase();\n\t            return (letter == firstLetter);\n\t          },\n\t          input: function() {\n\t            return ($input.length > 0);\n\t          },\n\t          items: function() {\n\t            return ($item.length > 0);\n\t          },\n\t          menu: function() {\n\t            return ($menu.length > 0);\n\t          },\n\t          message: function() {\n\t            return ($menu.children(selector.message).length !== 0);\n\t          },\n\t          label: function(value) {\n\t            var\n\t              escapedValue = module.escape.value(value),\n\t              $labels      = $module.find(selector.label)\n\t            ;\n\t            return ($labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(escapedValue) +'\"]').length > 0);\n\t          },\n\t          maxSelections: function() {\n\t            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\n\t          },\n\t          allResultsFiltered: function() {\n\t            var\n\t              $normalResults = $item.not(selector.addition)\n\t            ;\n\t            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\n\t          },\n\t          userSuggestion: function() {\n\t            return ($menu.children(selector.addition).length > 0);\n\t          },\n\t          query: function() {\n\t            return (module.get.query() !== '');\n\t          },\n\t          value: function(value) {\n\t            var\n\t              values   = module.get.values(),\n\t              hasValue = $.isArray(values)\n\t               ? values && ($.inArray(value, values) !== -1)\n\t               : (values == value)\n\t            ;\n\t            return (hasValue)\n\t              ? true\n\t              : false\n\t            ;\n\t          }\n\t        },\n\t\n\t        is: {\n\t          active: function() {\n\t            return $module.hasClass(className.active);\n\t          },\n\t          bubbledLabelClick: function(event) {\n\t            return $(event.target).is('select, input') && $module.closest('label').length > 0;\n\t          },\n\t          bubbledIconClick: function(event) {\n\t            return $(event.target).closest($icon).length > 0;\n\t          },\n\t          alreadySetup: function() {\n\t            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\n\t          },\n\t          animating: function($subMenu) {\n\t            return ($subMenu)\n\t              ? $subMenu.transition && $subMenu.transition('is animating')\n\t              : $menu.transition    && $menu.transition('is animating')\n\t            ;\n\t          },\n\t          disabled: function() {\n\t            return $module.hasClass(className.disabled);\n\t          },\n\t          focused: function() {\n\t            return (document.activeElement === $module[0]);\n\t          },\n\t          focusedOnSearch: function() {\n\t            return (document.activeElement === $search[0]);\n\t          },\n\t          allFiltered: function() {\n\t            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\n\t          },\n\t          hidden: function($subMenu) {\n\t            return !module.is.visible($subMenu);\n\t          },\n\t          initialLoad: function() {\n\t            return initialLoad;\n\t          },\n\t          onScreen: function($subMenu) {\n\t            var\n\t              $currentMenu   = $subMenu || $menu,\n\t              canOpenDownward = true,\n\t              onScreen = {},\n\t              calculations\n\t            ;\n\t            $currentMenu.addClass(className.loading);\n\t            calculations = {\n\t              context: {\n\t                scrollTop : $context.scrollTop(),\n\t                height    : $context.outerHeight()\n\t              },\n\t              menu : {\n\t                offset: $currentMenu.offset(),\n\t                height: $currentMenu.outerHeight()\n\t              }\n\t            };\n\t            if(module.is.verticallyScrollableContext()) {\n\t              calculations.menu.offset.top += calculations.context.scrollTop;\n\t            }\n\t            onScreen = {\n\t              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\n\t              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\n\t            };\n\t            if(onScreen.below) {\n\t              module.verbose('Dropdown can fit in context downward', onScreen);\n\t              canOpenDownward = true;\n\t            }\n\t            else if(!onScreen.below && !onScreen.above) {\n\t              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\n\t              canOpenDownward = true;\n\t            }\n\t            else {\n\t              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\n\t              canOpenDownward = false;\n\t            }\n\t            $currentMenu.removeClass(className.loading);\n\t            return canOpenDownward;\n\t          },\n\t          inObject: function(needle, object) {\n\t            var\n\t              found = false\n\t            ;\n\t            $.each(object, function(index, property) {\n\t              if(property == needle) {\n\t                found = true;\n\t                return true;\n\t              }\n\t            });\n\t            return found;\n\t          },\n\t          multiple: function() {\n\t            return $module.hasClass(className.multiple);\n\t          },\n\t          remote: function() {\n\t            return settings.apiSettings && module.can.useAPI();\n\t          },\n\t          single: function() {\n\t            return !module.is.multiple();\n\t          },\n\t          selectMutation: function(mutations) {\n\t            var\n\t              selectChanged = false\n\t            ;\n\t            $.each(mutations, function(index, mutation) {\n\t              if(mutation.target && $(mutation.target).is('select')) {\n\t                selectChanged = true;\n\t                return true;\n\t              }\n\t            });\n\t            return selectChanged;\n\t          },\n\t          search: function() {\n\t            return $module.hasClass(className.search);\n\t          },\n\t          searchSelection: function() {\n\t            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\n\t          },\n\t          selection: function() {\n\t            return $module.hasClass(className.selection);\n\t          },\n\t          userValue: function(value) {\n\t            return ($.inArray(value, module.get.userValues()) !== -1);\n\t          },\n\t          upward: function($menu) {\n\t            var $element = $menu || $module;\n\t            return $element.hasClass(className.upward);\n\t          },\n\t          visible: function($subMenu) {\n\t            return ($subMenu)\n\t              ? $subMenu.hasClass(className.visible)\n\t              : $menu.hasClass(className.visible)\n\t            ;\n\t          },\n\t          verticallyScrollableContext: function() {\n\t            var\n\t              overflowY = ($context.get(0) !== window)\n\t                ? $context.css('overflow-y')\n\t                : false\n\t            ;\n\t            return (overflowY == 'auto' || overflowY == 'scroll');\n\t          }\n\t        },\n\t\n\t        can: {\n\t          activate: function($item) {\n\t            if(settings.useLabels) {\n\t              return true;\n\t            }\n\t            if(!module.has.maxSelections()) {\n\t              return true;\n\t            }\n\t            if(module.has.maxSelections() && $item.hasClass(className.active)) {\n\t              return true;\n\t            }\n\t            return false;\n\t          },\n\t          click: function() {\n\t            return (hasTouch || settings.on == 'click');\n\t          },\n\t          extendSelect: function() {\n\t            return settings.allowAdditions || settings.apiSettings;\n\t          },\n\t          show: function() {\n\t            return !module.is.disabled() && (module.has.items() || module.has.message());\n\t          },\n\t          useAPI: function() {\n\t            return $.fn.api !== undefined;\n\t          }\n\t        },\n\t\n\t        animate: {\n\t          show: function(callback, $subMenu) {\n\t            var\n\t              $currentMenu = $subMenu || $menu,\n\t              start = ($subMenu)\n\t                ? function() {}\n\t                : function() {\n\t                  module.hideSubMenus();\n\t                  module.hideOthers();\n\t                  module.set.active();\n\t                },\n\t              transition\n\t            ;\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            module.verbose('Doing menu show animation', $currentMenu);\n\t            module.set.direction($subMenu);\n\t            transition = module.get.transition($subMenu);\n\t            if( module.is.selection() ) {\n\t              module.set.scrollPosition(module.get.selectedItem(), true);\n\t            }\n\t            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\n\t              if(transition == 'none') {\n\t                start();\n\t                $currentMenu.transition('show');\n\t                callback.call(element);\n\t              }\n\t              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n\t                $currentMenu\n\t                  .transition({\n\t                    animation  : transition + ' in',\n\t                    debug      : settings.debug,\n\t                    verbose    : settings.verbose,\n\t                    duration   : settings.duration,\n\t                    queue      : true,\n\t                    onStart    : start,\n\t                    onComplete : function() {\n\t                      callback.call(element);\n\t                    }\n\t                  })\n\t                ;\n\t              }\n\t              else {\n\t                module.error(error.noTransition, transition);\n\t              }\n\t            }\n\t          },\n\t          hide: function(callback, $subMenu) {\n\t            var\n\t              $currentMenu = $subMenu || $menu,\n\t              duration = ($subMenu)\n\t                ? (settings.duration * 0.9)\n\t                : settings.duration,\n\t              start = ($subMenu)\n\t                ? function() {}\n\t                : function() {\n\t                  if( module.can.click() ) {\n\t                    module.unbind.intent();\n\t                  }\n\t                  module.remove.active();\n\t                },\n\t              transition = module.get.transition($subMenu)\n\t            ;\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\n\t              module.verbose('Doing menu hide animation', $currentMenu);\n\t\n\t              if(transition == 'none') {\n\t                start();\n\t                $currentMenu.transition('hide');\n\t                callback.call(element);\n\t              }\n\t              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n\t                $currentMenu\n\t                  .transition({\n\t                    animation  : transition + ' out',\n\t                    duration   : settings.duration,\n\t                    debug      : settings.debug,\n\t                    verbose    : settings.verbose,\n\t                    queue      : true,\n\t                    onStart    : start,\n\t                    onComplete : function() {\n\t                      if(settings.direction == 'auto') {\n\t                        module.remove.upward($subMenu);\n\t                      }\n\t                      callback.call(element);\n\t                    }\n\t                  })\n\t                ;\n\t              }\n\t              else {\n\t                module.error(error.transition);\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        hideAndClear: function() {\n\t          module.remove.searchTerm();\n\t          if( module.has.maxSelections() ) {\n\t            return;\n\t          }\n\t          if(module.has.search()) {\n\t            module.hide(function() {\n\t              module.remove.filteredItem();\n\t            });\n\t          }\n\t          else {\n\t            module.hide();\n\t          }\n\t        },\n\t\n\t        delay: {\n\t          show: function() {\n\t            module.verbose('Delaying show event to ensure user intent');\n\t            clearTimeout(module.timer);\n\t            module.timer = setTimeout(module.show, settings.delay.show);\n\t          },\n\t          hide: function() {\n\t            module.verbose('Delaying hide event to ensure user intent');\n\t            clearTimeout(module.timer);\n\t            module.timer = setTimeout(module.hide, settings.delay.hide);\n\t          }\n\t        },\n\t\n\t        escape: {\n\t          value: function(value) {\n\t            var\n\t              multipleValues = $.isArray(value),\n\t              stringValue    = (typeof value === 'string'),\n\t              isUnparsable   = (!stringValue && !multipleValues),\n\t              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\n\t              values         = []\n\t            ;\n\t            if(isUnparsable || !hasQuotes) {\n\t              return value;\n\t            }\n\t            module.debug('Encoding quote values for use in select', value);\n\t            if(multipleValues) {\n\t              $.each(value, function(index, value){\n\t                values.push(value.replace(regExp.quote, '&quot;'));\n\t              });\n\t              return values;\n\t            }\n\t            return value.replace(regExp.quote, '&quot;');\n\t          },\n\t          string: function(text) {\n\t            text =  String(text);\n\t            return text.replace(regExp.escape, '\\\\$&');\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : $allModules\n\t  ;\n\t};\n\t\n\t$.fn.dropdown.settings = {\n\t\n\t  silent                 : false,\n\t  debug                  : false,\n\t  verbose                : false,\n\t  performance            : true,\n\t\n\t  on                     : 'click',    // what event should show menu action on item selection\n\t  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\n\t\n\t\n\t  apiSettings            : false,\n\t  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\n\t  minCharacters          : 0,          // Minimum characters required to trigger API call\n\t\n\t  filterRemoteData       : false,      // Whether API results should be filtered after being returned for query term\n\t  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\n\t\n\t  throttle               : 200,        // How long to wait after last user input to search remotely\n\t\n\t  context                : window,     // Context to use when determining if on screen\n\t  direction              : 'auto',     // Whether dropdown should always open in one direction\n\t  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\n\t\n\t  match                  : 'both',     // what to match against with search selection (both, text, or label)\n\t  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\n\t\n\t  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\n\t  preserveHTML           : true,       // preserve html when selecting value\n\t  sortSelect             : false,      // sort selection on init\n\t\n\t  forceSelection         : true,       // force a choice on blur with search selection\n\t\n\t  allowAdditions         : false,      // whether multiple select should allow user added values\n\t  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\n\t\n\t  maxSelections          : false,      // When set to a number limits the number of selections to this count\n\t  useLabels              : true,       // whether multiple select should filter currently active selections from choices\n\t  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\n\t\n\t  showOnFocus            : true,       // show menu on focus\n\t  allowReselection       : false,      // whether current value should trigger callbacks when reselected\n\t  allowTab               : true,       // add tabindex to element\n\t  allowCategorySelection : false,      // allow elements with sub-menus to be selected\n\t\n\t  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\n\t\n\t  transition             : 'auto',     // auto transition will slide down or up based on direction\n\t  duration               : 200,        // duration of transition\n\t\n\t  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\n\t\n\t  // label settings on multi-select\n\t  label: {\n\t    transition : 'scale',\n\t    duration   : 200,\n\t    variation  : false\n\t  },\n\t\n\t  // delay before event\n\t  delay : {\n\t    hide   : 300,\n\t    show   : 200,\n\t    search : 20,\n\t    touch  : 50\n\t  },\n\t\n\t  /* Callbacks */\n\t  onChange      : function(value, text, $selected){},\n\t  onAdd         : function(value, text, $selected){},\n\t  onRemove      : function(value, text, $selected){},\n\t\n\t  onLabelSelect : function($selectedLabels){},\n\t  onLabelCreate : function(value, text) { return $(this); },\n\t  onLabelRemove : function(value) { return true; },\n\t  onNoResults   : function(searchTerm) { return true; },\n\t  onShow        : function(){},\n\t  onHide        : function(){},\n\t\n\t  /* Component */\n\t  name           : 'Dropdown',\n\t  namespace      : 'dropdown',\n\t\n\t  message: {\n\t    addResult     : 'Add <b>{term}</b>',\n\t    count         : '{count} selected',\n\t    maxSelections : 'Max {maxCount} selections',\n\t    noResults     : 'No results found.',\n\t    serverError   : 'There was an error contacting the server'\n\t  },\n\t\n\t  error : {\n\t    action          : 'You called a dropdown action that was not defined',\n\t    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\n\t    labels          : 'Allowing user additions currently requires the use of labels.',\n\t    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\n\t    method          : 'The method you called is not defined.',\n\t    noAPI           : 'The API module is required to load resources remotely',\n\t    noStorage       : 'Saving remote data requires session storage',\n\t    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\n\t  },\n\t\n\t  regExp : {\n\t    escape   : /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n\t    quote    : /\"/g\n\t  },\n\t\n\t  metadata : {\n\t    defaultText     : 'defaultText',\n\t    defaultValue    : 'defaultValue',\n\t    placeholderText : 'placeholder',\n\t    text            : 'text',\n\t    value           : 'value'\n\t  },\n\t\n\t  // property names for remote query\n\t  fields: {\n\t    remoteValues : 'results',  // grouping for api results\n\t    values       : 'values',   // grouping for all dropdown values\n\t    disabled     : 'disabled', // whether value should be disabled\n\t    name         : 'name',     // displayed dropdown text\n\t    value        : 'value',    // actual dropdown value\n\t    text         : 'text'      // displayed text when selected\n\t  },\n\t\n\t  keys : {\n\t    backspace  : 8,\n\t    delimiter  : 188, // comma\n\t    deleteKey  : 46,\n\t    enter      : 13,\n\t    escape     : 27,\n\t    pageUp     : 33,\n\t    pageDown   : 34,\n\t    leftArrow  : 37,\n\t    upArrow    : 38,\n\t    rightArrow : 39,\n\t    downArrow  : 40\n\t  },\n\t\n\t  selector : {\n\t    addition     : '.addition',\n\t    dropdown     : '.ui.dropdown',\n\t    hidden       : '.hidden',\n\t    icon         : '> .dropdown.icon',\n\t    input        : '> input[type=\"hidden\"], > select',\n\t    item         : '.item',\n\t    label        : '> .label',\n\t    remove       : '> .label > .delete.icon',\n\t    siblingLabel : '.label',\n\t    menu         : '.menu',\n\t    message      : '.message',\n\t    menuIcon     : '.dropdown.icon',\n\t    search       : 'input.search, .menu > .search > input, .menu input.search',\n\t    sizer        : '> input.sizer',\n\t    text         : '> .text:not(.icon)',\n\t    unselectable : '.disabled, .filtered'\n\t  },\n\t\n\t  className : {\n\t    active      : 'active',\n\t    addition    : 'addition',\n\t    animating   : 'animating',\n\t    disabled    : 'disabled',\n\t    empty       : 'empty',\n\t    dropdown    : 'ui dropdown',\n\t    filtered    : 'filtered',\n\t    hidden      : 'hidden transition',\n\t    item        : 'item',\n\t    label       : 'ui label',\n\t    loading     : 'loading',\n\t    menu        : 'menu',\n\t    message     : 'message',\n\t    multiple    : 'multiple',\n\t    placeholder : 'default',\n\t    sizer       : 'sizer',\n\t    search      : 'search',\n\t    selected    : 'selected',\n\t    selection   : 'selection',\n\t    upward      : 'upward',\n\t    visible     : 'visible'\n\t  }\n\t\n\t};\n\t\n\t/* Templates */\n\t$.fn.dropdown.settings.templates = {\n\t\n\t  // generates dropdown from select values\n\t  dropdown: function(select) {\n\t    var\n\t      placeholder = select.placeholder || false,\n\t      values      = select.values || {},\n\t      html        = ''\n\t    ;\n\t    html +=  '<i class=\"dropdown icon\"></i>';\n\t    if(select.placeholder) {\n\t      html += '<div class=\"default text\">' + placeholder + '</div>';\n\t    }\n\t    else {\n\t      html += '<div class=\"text\"></div>';\n\t    }\n\t    html += '<div class=\"menu\">';\n\t    $.each(select.values, function(index, option) {\n\t      html += (option.disabled)\n\t        ? '<div class=\"disabled item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n\t        : '<div class=\"item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n\t      ;\n\t    });\n\t    html += '</div>';\n\t    return html;\n\t  },\n\t\n\t  // generates just menu from select\n\t  menu: function(response, fields) {\n\t    var\n\t      values = response[fields.values] || {},\n\t      html   = ''\n\t    ;\n\t    $.each(values, function(index, option) {\n\t      var\n\t        maybeText = (option[fields.text])\n\t          ? 'data-text=\"' + option[fields.text] + '\"'\n\t          : '',\n\t        maybeDisabled = (option[fields.disabled])\n\t          ? 'disabled '\n\t          : ''\n\t      ;\n\t      html += '<div class=\"'+ maybeDisabled +'item\" data-value=\"' + option[fields.value] + '\"' + maybeText + '>'\n\t      html +=   option[fields.name];\n\t      html += '</div>';\n\t    });\n\t    return html;\n\t  },\n\t\n\t  // generates label for multiselect\n\t  label: function(value, text) {\n\t    return text + '<i class=\"delete icon\"></i>';\n\t  },\n\t\n\t\n\t  // generates messages like \"No results\"\n\t  message: function(message) {\n\t    return message;\n\t  },\n\t\n\t  // generates user addition to selection menu\n\t  addition: function(choice) {\n\t    return choice;\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Embed\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.embed = function(parameters) {\n\t\n\t  var\n\t    $allModules     = $(this),\n\t\n\t    moduleSelector  = $allModules.selector || '',\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.embed.settings, parameters)\n\t          : $.extend({}, $.fn.embed.settings),\n\t\n\t        selector        = settings.selector,\n\t        className       = settings.className,\n\t        sources         = settings.sources,\n\t        error           = settings.error,\n\t        metadata        = settings.metadata,\n\t        namespace       = settings.namespace,\n\t        templates       = settings.templates,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $window         = $(window),\n\t        $module         = $(this),\n\t        $placeholder    = $module.find(selector.placeholder),\n\t        $icon           = $module.find(selector.icon),\n\t        $embed          = $module.find(selector.embed),\n\t\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing embed');\n\t          module.determine.autoplay();\n\t          module.create();\n\t          module.bind.events();\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous instance of embed');\n\t          module.reset();\n\t          $module\n\t            .removeData(moduleNamespace)\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          module.verbose('Refreshing selector cache');\n\t          $placeholder = $module.find(selector.placeholder);\n\t          $icon        = $module.find(selector.icon);\n\t          $embed       = $module.find(selector.embed);\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            if( module.has.placeholder() ) {\n\t              module.debug('Adding placeholder events');\n\t              $module\n\t                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\n\t                .on('click' + eventNamespace, selector.icon, module.createAndShow)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        create: function() {\n\t          var\n\t            placeholder = module.get.placeholder()\n\t          ;\n\t          if(placeholder) {\n\t            module.createPlaceholder();\n\t          }\n\t          else {\n\t            module.createAndShow();\n\t          }\n\t        },\n\t\n\t        createPlaceholder: function(placeholder) {\n\t          var\n\t            icon  = module.get.icon(),\n\t            url   = module.get.url(),\n\t            embed = module.generate.embed(url)\n\t          ;\n\t          placeholder = placeholder || module.get.placeholder();\n\t          $module.html( templates.placeholder(placeholder, icon) );\n\t          module.debug('Creating placeholder for embed', placeholder, icon);\n\t        },\n\t\n\t        createEmbed: function(url) {\n\t          module.refresh();\n\t          url = url || module.get.url();\n\t          $embed = $('<div/>')\n\t            .addClass(className.embed)\n\t            .html( module.generate.embed(url) )\n\t            .appendTo($module)\n\t          ;\n\t          settings.onCreate.call(element, url);\n\t          module.debug('Creating embed object', $embed);\n\t        },\n\t\n\t        changeEmbed: function(url) {\n\t          $embed\n\t            .html( module.generate.embed(url) )\n\t          ;\n\t        },\n\t\n\t        createAndShow: function() {\n\t          module.createEmbed();\n\t          module.show();\n\t        },\n\t\n\t        // sets new embed\n\t        change: function(source, id, url) {\n\t          module.debug('Changing video to ', source, id, url);\n\t          $module\n\t            .data(metadata.source, source)\n\t            .data(metadata.id, id)\n\t          ;\n\t          if(url) {\n\t            $module.data(metadata.url, url);\n\t          }\n\t          else {\n\t            $module.removeData(metadata.url);\n\t          }\n\t          if(module.has.embed()) {\n\t            module.changeEmbed();\n\t          }\n\t          else {\n\t            module.create();\n\t          }\n\t        },\n\t\n\t        // clears embed\n\t        reset: function() {\n\t          module.debug('Clearing embed and showing placeholder');\n\t          module.remove.active();\n\t          module.remove.embed();\n\t          module.showPlaceholder();\n\t          settings.onReset.call(element);\n\t        },\n\t\n\t        // shows current embed\n\t        show: function() {\n\t          module.debug('Showing embed');\n\t          module.set.active();\n\t          settings.onDisplay.call(element);\n\t        },\n\t\n\t        hide: function() {\n\t          module.debug('Hiding embed');\n\t          module.showPlaceholder();\n\t        },\n\t\n\t        showPlaceholder: function() {\n\t          module.debug('Showing placeholder image');\n\t          module.remove.active();\n\t          settings.onPlaceholderDisplay.call(element);\n\t        },\n\t\n\t        get: {\n\t          id: function() {\n\t            return settings.id || $module.data(metadata.id);\n\t          },\n\t          placeholder: function() {\n\t            return settings.placeholder || $module.data(metadata.placeholder);\n\t          },\n\t          icon: function() {\n\t            return (settings.icon)\n\t              ? settings.icon\n\t              : ($module.data(metadata.icon) !== undefined)\n\t                ? $module.data(metadata.icon)\n\t                : module.determine.icon()\n\t            ;\n\t          },\n\t          source: function(url) {\n\t            return (settings.source)\n\t              ? settings.source\n\t              : ($module.data(metadata.source) !== undefined)\n\t                ? $module.data(metadata.source)\n\t                : module.determine.source()\n\t            ;\n\t          },\n\t          type: function() {\n\t            var source = module.get.source();\n\t            return (sources[source] !== undefined)\n\t              ? sources[source].type\n\t              : false\n\t            ;\n\t          },\n\t          url: function() {\n\t            return (settings.url)\n\t              ? settings.url\n\t              : ($module.data(metadata.url) !== undefined)\n\t                ? $module.data(metadata.url)\n\t                : module.determine.url()\n\t            ;\n\t          }\n\t        },\n\t\n\t        determine: {\n\t          autoplay: function() {\n\t            if(module.should.autoplay()) {\n\t              settings.autoplay = true;\n\t            }\n\t          },\n\t          source: function(url) {\n\t            var\n\t              matchedSource = false\n\t            ;\n\t            url = url || module.get.url();\n\t            if(url) {\n\t              $.each(sources, function(name, source) {\n\t                if(url.search(source.domain) !== -1) {\n\t                  matchedSource = name;\n\t                  return false;\n\t                }\n\t              });\n\t            }\n\t            return matchedSource;\n\t          },\n\t          icon: function() {\n\t            var\n\t              source = module.get.source()\n\t            ;\n\t            return (sources[source] !== undefined)\n\t              ? sources[source].icon\n\t              : false\n\t            ;\n\t          },\n\t          url: function() {\n\t            var\n\t              id     = settings.id     || $module.data(metadata.id),\n\t              source = settings.source || $module.data(metadata.source),\n\t              url\n\t            ;\n\t            url = (sources[source] !== undefined)\n\t              ? sources[source].url.replace('{id}', id)\n\t              : false\n\t            ;\n\t            if(url) {\n\t              $module.data(metadata.url, url);\n\t            }\n\t            return url;\n\t          }\n\t        },\n\t\n\t\n\t        set: {\n\t          active: function() {\n\t            $module.addClass(className.active);\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          active: function() {\n\t            $module.removeClass(className.active);\n\t          },\n\t          embed: function() {\n\t            $embed.empty();\n\t          }\n\t        },\n\t\n\t        encode: {\n\t          parameters: function(parameters) {\n\t            var\n\t              urlString = [],\n\t              index\n\t            ;\n\t            for (index in parameters) {\n\t              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\n\t            }\n\t            return urlString.join('&amp;');\n\t          }\n\t        },\n\t\n\t        generate: {\n\t          embed: function(url) {\n\t            module.debug('Generating embed html');\n\t            var\n\t              source = module.get.source(),\n\t              html,\n\t              parameters\n\t            ;\n\t            url = module.get.url(url);\n\t            if(url) {\n\t              parameters = module.generate.parameters(source);\n\t              html       = templates.iframe(url, parameters);\n\t            }\n\t            else {\n\t              module.error(error.noURL, $module);\n\t            }\n\t            return html;\n\t          },\n\t          parameters: function(source, extraParameters) {\n\t            var\n\t              parameters = (sources[source] && sources[source].parameters !== undefined)\n\t                ? sources[source].parameters(settings)\n\t                : {}\n\t            ;\n\t            extraParameters = extraParameters || settings.parameters;\n\t            if(extraParameters) {\n\t              parameters = $.extend({}, parameters, extraParameters);\n\t            }\n\t            parameters = settings.onEmbed(parameters);\n\t            return module.encode.parameters(parameters);\n\t          }\n\t        },\n\t\n\t        has: {\n\t          embed: function() {\n\t            return ($embed.length > 0);\n\t          },\n\t          placeholder: function() {\n\t            return settings.placeholder || $module.data(metadata.placeholder);\n\t          }\n\t        },\n\t\n\t        should: {\n\t          autoplay: function() {\n\t            return (settings.autoplay === 'auto')\n\t              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\n\t              : settings.autoplay\n\t            ;\n\t          }\n\t        },\n\t\n\t        is: {\n\t          video: function() {\n\t            return module.get.type() == 'video';\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.embed.settings = {\n\t\n\t  name        : 'Embed',\n\t  namespace   : 'embed',\n\t\n\t  silent      : false,\n\t  debug       : false,\n\t  verbose     : false,\n\t  performance : true,\n\t\n\t  icon     : false,\n\t  source   : false,\n\t  url      : false,\n\t  id       : false,\n\t\n\t  // standard video settings\n\t  autoplay  : 'auto',\n\t  color     : '#444444',\n\t  hd        : true,\n\t  brandedUI : false,\n\t\n\t  // additional parameters to include with the embed\n\t  parameters: false,\n\t\n\t  onDisplay            : function() {},\n\t  onPlaceholderDisplay : function() {},\n\t  onReset              : function() {},\n\t  onCreate             : function(url) {},\n\t  onEmbed              : function(parameters) {\n\t    return parameters;\n\t  },\n\t\n\t  metadata    : {\n\t    id          : 'id',\n\t    icon        : 'icon',\n\t    placeholder : 'placeholder',\n\t    source      : 'source',\n\t    url         : 'url'\n\t  },\n\t\n\t  error : {\n\t    noURL  : 'No URL specified',\n\t    method : 'The method you called is not defined'\n\t  },\n\t\n\t  className : {\n\t    active : 'active',\n\t    embed  : 'embed'\n\t  },\n\t\n\t  selector : {\n\t    embed       : '.embed',\n\t    placeholder : '.placeholder',\n\t    icon        : '.icon'\n\t  },\n\t\n\t  sources: {\n\t    youtube: {\n\t      name   : 'youtube',\n\t      type   : 'video',\n\t      icon   : 'video play',\n\t      domain : 'youtube.com',\n\t      url    : '//www.youtube.com/embed/{id}',\n\t      parameters: function(settings) {\n\t        return {\n\t          autohide       : !settings.brandedUI,\n\t          autoplay       : settings.autoplay,\n\t          color          : settings.color || undefined,\n\t          hq             : settings.hd,\n\t          jsapi          : settings.api,\n\t          modestbranding : !settings.brandedUI\n\t        };\n\t      }\n\t    },\n\t    vimeo: {\n\t      name   : 'vimeo',\n\t      type   : 'video',\n\t      icon   : 'video play',\n\t      domain : 'vimeo.com',\n\t      url    : '//player.vimeo.com/video/{id}',\n\t      parameters: function(settings) {\n\t        return {\n\t          api      : settings.api,\n\t          autoplay : settings.autoplay,\n\t          byline   : settings.brandedUI,\n\t          color    : settings.color || undefined,\n\t          portrait : settings.brandedUI,\n\t          title    : settings.brandedUI\n\t        };\n\t      }\n\t    }\n\t  },\n\t\n\t  templates: {\n\t    iframe : function(url, parameters) {\n\t      var src = url;\n\t      if (parameters) {\n\t          src += '?' + parameters;\n\t      }\n\t      return ''\n\t        + '<iframe src=\"' + src + '\"'\n\t        + ' width=\"100%\" height=\"100%\"'\n\t        + ' frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n\t      ;\n\t    },\n\t    placeholder : function(image, icon) {\n\t      var\n\t        html = ''\n\t      ;\n\t      if(icon) {\n\t        html += '<i class=\"' + icon + ' icon\"></i>';\n\t      }\n\t      if(image) {\n\t        html += '<img class=\"placeholder\" src=\"' + image + '\">';\n\t      }\n\t      return html;\n\t    }\n\t  },\n\t\n\t  // NOT YET IMPLEMENTED\n\t  api     : false,\n\t  onPause : function() {},\n\t  onPlay  : function() {},\n\t  onStop  : function() {}\n\t\n\t};\n\t\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Modal\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.modal = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    $window        = $(window),\n\t    $document      = $(document),\n\t    $body          = $('body'),\n\t\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t\n\t    requestAnimationFrame = window.requestAnimationFrame\n\t      || window.mozRequestAnimationFrame\n\t      || window.webkitRequestAnimationFrame\n\t      || window.msRequestAnimationFrame\n\t      || function(callback) { setTimeout(callback, 0); },\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings    = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.modal.settings, parameters)\n\t          : $.extend({}, $.fn.modal.settings),\n\t\n\t        selector        = settings.selector,\n\t        className       = settings.className,\n\t        namespace       = settings.namespace,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $module         = $(this),\n\t        $context        = $(settings.context),\n\t        $close          = $module.find(selector.close),\n\t\n\t        $allModals,\n\t        $otherModals,\n\t        $focusedElement,\n\t        $dimmable,\n\t        $dimmer,\n\t\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        ignoreRepeatedEvents = false,\n\t\n\t        elementEventNamespace,\n\t        id,\n\t        observer,\n\t        module\n\t      ;\n\t      module  = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing dimmer', $context);\n\t\n\t          module.create.id();\n\t          module.create.dimmer();\n\t          module.refreshModals();\n\t\n\t          module.bind.events();\n\t          if(settings.observeChanges) {\n\t            module.observeChanges();\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of modal');\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, instance)\n\t          ;\n\t        },\n\t\n\t        create: {\n\t          dimmer: function() {\n\t            var\n\t              defaultSettings = {\n\t                debug      : settings.debug,\n\t                dimmerName : 'modals',\n\t                duration   : {\n\t                  show     : settings.duration,\n\t                  hide     : settings.duration\n\t                }\n\t              },\n\t              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\n\t            ;\n\t            if(settings.inverted) {\n\t              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\n\t                ? dimmerSettings.variation + ' inverted'\n\t                : 'inverted'\n\t              ;\n\t            }\n\t            if($.fn.dimmer === undefined) {\n\t              module.error(error.dimmer);\n\t              return;\n\t            }\n\t            module.debug('Creating dimmer with settings', dimmerSettings);\n\t            $dimmable = $context.dimmer(dimmerSettings);\n\t            if(settings.detachable) {\n\t              module.verbose('Modal is detachable, moving content into dimmer');\n\t              $dimmable.dimmer('add content', $module);\n\t            }\n\t            else {\n\t              module.set.undetached();\n\t            }\n\t            if(settings.blurring) {\n\t              $dimmable.addClass(className.blurring);\n\t            }\n\t            $dimmer = $dimmable.dimmer('get dimmer');\n\t          },\n\t          id: function() {\n\t            id = (Math.random().toString(16) + '000000000').substr(2,8);\n\t            elementEventNamespace = '.' + id;\n\t            module.verbose('Creating unique id for element', id);\n\t          }\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous modal');\n\t          $module\n\t            .removeData(moduleNamespace)\n\t            .off(eventNamespace)\n\t          ;\n\t          $window.off(elementEventNamespace);\n\t          $dimmer.off(elementEventNamespace);\n\t          $close.off(eventNamespace);\n\t          $context.dimmer('destroy');\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            observer = new MutationObserver(function(mutations) {\n\t              module.debug('DOM tree modified, refreshing');\n\t              module.refresh();\n\t            });\n\t            observer.observe(element, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            module.debug('Setting up mutation observer', observer);\n\t          }\n\t        },\n\t\n\t        refresh: function() {\n\t          module.remove.scrolling();\n\t          module.cacheSizes();\n\t          module.set.screenHeight();\n\t          module.set.type();\n\t          module.set.position();\n\t        },\n\t\n\t        refreshModals: function() {\n\t          $otherModals = $module.siblings(selector.modal);\n\t          $allModals   = $otherModals.add($module);\n\t        },\n\t\n\t        attachEvents: function(selector, event) {\n\t          var\n\t            $toggle = $(selector)\n\t          ;\n\t          event = $.isFunction(module[event])\n\t            ? module[event]\n\t            : module.toggle\n\t          ;\n\t          if($toggle.length > 0) {\n\t            module.debug('Attaching modal events to element', selector, event);\n\t            $toggle\n\t              .off(eventNamespace)\n\t              .on('click' + eventNamespace, event)\n\t            ;\n\t          }\n\t          else {\n\t            module.error(error.notFound, selector);\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.verbose('Attaching events');\n\t            $module\n\t              .on('click' + eventNamespace, selector.close, module.event.close)\n\t              .on('click' + eventNamespace, selector.approve, module.event.approve)\n\t              .on('click' + eventNamespace, selector.deny, module.event.deny)\n\t            ;\n\t            $window\n\t              .on('resize' + elementEventNamespace, module.event.resize)\n\t            ;\n\t          }\n\t        },\n\t\n\t        get: {\n\t          id: function() {\n\t            return (Math.random().toString(16) + '000000000').substr(2,8);\n\t          }\n\t        },\n\t\n\t        event: {\n\t          approve: function() {\n\t            if(ignoreRepeatedEvents || settings.onApprove.call(element, $(this)) === false) {\n\t              module.verbose('Approve callback returned false cancelling hide');\n\t              return;\n\t            }\n\t            ignoreRepeatedEvents = true;\n\t            module.hide(function() {\n\t              ignoreRepeatedEvents = false;\n\t            });\n\t          },\n\t          deny: function() {\n\t            if(ignoreRepeatedEvents || settings.onDeny.call(element, $(this)) === false) {\n\t              module.verbose('Deny callback returned false cancelling hide');\n\t              return;\n\t            }\n\t            ignoreRepeatedEvents = true;\n\t            module.hide(function() {\n\t              ignoreRepeatedEvents = false;\n\t            });\n\t          },\n\t          close: function() {\n\t            module.hide();\n\t          },\n\t          click: function(event) {\n\t            var\n\t              $target   = $(event.target),\n\t              isInModal = ($target.closest(selector.modal).length > 0),\n\t              isInDOM   = $.contains(document.documentElement, event.target)\n\t            ;\n\t            if(!isInModal && isInDOM) {\n\t              module.debug('Dimmer clicked, hiding all modals');\n\t              if( module.is.active() ) {\n\t                module.remove.clickaway();\n\t                if(settings.allowMultiple) {\n\t                  module.hide();\n\t                }\n\t                else {\n\t                  module.hideAll();\n\t                }\n\t              }\n\t            }\n\t          },\n\t          debounce: function(method, delay) {\n\t            clearTimeout(module.timer);\n\t            module.timer = setTimeout(method, delay);\n\t          },\n\t          keyboard: function(event) {\n\t            var\n\t              keyCode   = event.which,\n\t              escapeKey = 27\n\t            ;\n\t            if(keyCode == escapeKey) {\n\t              if(settings.closable) {\n\t                module.debug('Escape key pressed hiding modal');\n\t                module.hide();\n\t              }\n\t              else {\n\t                module.debug('Escape key pressed, but closable is set to false');\n\t              }\n\t              event.preventDefault();\n\t            }\n\t          },\n\t          resize: function() {\n\t            if( $dimmable.dimmer('is active') ) {\n\t              requestAnimationFrame(module.refresh);\n\t            }\n\t          }\n\t        },\n\t\n\t        toggle: function() {\n\t          if( module.is.active() || module.is.animating() ) {\n\t            module.hide();\n\t          }\n\t          else {\n\t            module.show();\n\t          }\n\t        },\n\t\n\t        show: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          module.refreshModals();\n\t          module.showModal(callback);\n\t        },\n\t\n\t        hide: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          module.refreshModals();\n\t          module.hideModal(callback);\n\t        },\n\t\n\t        showModal: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if( module.is.animating() || !module.is.active() ) {\n\t\n\t            module.showDimmer();\n\t            module.cacheSizes();\n\t            module.set.position();\n\t            module.set.screenHeight();\n\t            module.set.type();\n\t            module.set.clickaway();\n\t\n\t            if( !settings.allowMultiple && module.others.active() ) {\n\t              module.hideOthers(module.showModal);\n\t            }\n\t            else {\n\t              settings.onShow.call(element);\n\t              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n\t                module.debug('Showing modal with css animations');\n\t                $module\n\t                  .transition({\n\t                    debug       : settings.debug,\n\t                    animation   : settings.transition + ' in',\n\t                    queue       : settings.queue,\n\t                    duration    : settings.duration,\n\t                    useFailSafe : true,\n\t                    onComplete : function() {\n\t                      settings.onVisible.apply(element);\n\t                      if(settings.keyboardShortcuts) {\n\t                        module.add.keyboardShortcuts();\n\t                      }\n\t                      module.save.focus();\n\t                      module.set.active();\n\t                      if(settings.autofocus) {\n\t                        module.set.autofocus();\n\t                      }\n\t                      callback();\n\t                    }\n\t                  })\n\t                ;\n\t              }\n\t              else {\n\t                module.error(error.noTransition);\n\t              }\n\t            }\n\t          }\n\t          else {\n\t            module.debug('Modal is already visible');\n\t          }\n\t        },\n\t\n\t        hideModal: function(callback, keepDimmed) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          module.debug('Hiding modal');\n\t          if(settings.onHide.call(element, $(this)) === false) {\n\t            module.verbose('Hide callback returned false cancelling hide');\n\t            return;\n\t          }\n\t\n\t          if( module.is.animating() || module.is.active() ) {\n\t            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n\t              module.remove.active();\n\t              $module\n\t                .transition({\n\t                  debug       : settings.debug,\n\t                  animation   : settings.transition + ' out',\n\t                  queue       : settings.queue,\n\t                  duration    : settings.duration,\n\t                  useFailSafe : true,\n\t                  onStart     : function() {\n\t                    if(!module.others.active() && !keepDimmed) {\n\t                      module.hideDimmer();\n\t                    }\n\t                    if(settings.keyboardShortcuts) {\n\t                      module.remove.keyboardShortcuts();\n\t                    }\n\t                  },\n\t                  onComplete : function() {\n\t                    settings.onHidden.call(element);\n\t                    module.restore.focus();\n\t                    callback();\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.error(error.noTransition);\n\t            }\n\t          }\n\t        },\n\t\n\t        showDimmer: function() {\n\t          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\n\t            module.debug('Showing dimmer');\n\t            $dimmable.dimmer('show');\n\t          }\n\t          else {\n\t            module.debug('Dimmer already visible');\n\t          }\n\t        },\n\t\n\t        hideDimmer: function() {\n\t          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\n\t            $dimmable.dimmer('hide', function() {\n\t              module.remove.clickaway();\n\t              module.remove.screenHeight();\n\t            });\n\t          }\n\t          else {\n\t            module.debug('Dimmer is not visible cannot hide');\n\t            return;\n\t          }\n\t        },\n\t\n\t        hideAll: function(callback) {\n\t          var\n\t            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\n\t          ;\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if( $visibleModals.length > 0 ) {\n\t            module.debug('Hiding all visible modals');\n\t            module.hideDimmer();\n\t            $visibleModals\n\t              .modal('hide modal', callback)\n\t            ;\n\t          }\n\t        },\n\t\n\t        hideOthers: function(callback) {\n\t          var\n\t            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\n\t          ;\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if( $visibleModals.length > 0 ) {\n\t            module.debug('Hiding other modals', $otherModals);\n\t            $visibleModals\n\t              .modal('hide modal', callback, true)\n\t            ;\n\t          }\n\t        },\n\t\n\t        others: {\n\t          active: function() {\n\t            return ($otherModals.filter('.' + className.active).length > 0);\n\t          },\n\t          animating: function() {\n\t            return ($otherModals.filter('.' + className.animating).length > 0);\n\t          }\n\t        },\n\t\n\t\n\t        add: {\n\t          keyboardShortcuts: function() {\n\t            module.verbose('Adding keyboard shortcuts');\n\t            $document\n\t              .on('keyup' + eventNamespace, module.event.keyboard)\n\t            ;\n\t          }\n\t        },\n\t\n\t        save: {\n\t          focus: function() {\n\t            $focusedElement = $(document.activeElement).blur();\n\t          }\n\t        },\n\t\n\t        restore: {\n\t          focus: function() {\n\t            if($focusedElement && $focusedElement.length > 0) {\n\t              $focusedElement.focus();\n\t            }\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          active: function() {\n\t            $module.removeClass(className.active);\n\t          },\n\t          clickaway: function() {\n\t            if(settings.closable) {\n\t              $dimmer\n\t                .off('click' + elementEventNamespace)\n\t              ;\n\t            }\n\t          },\n\t          bodyStyle: function() {\n\t            if($body.attr('style') === '') {\n\t              module.verbose('Removing style attribute');\n\t              $body.removeAttr('style');\n\t            }\n\t          },\n\t          screenHeight: function() {\n\t            module.debug('Removing page height');\n\t            $body\n\t              .css('height', '')\n\t            ;\n\t          },\n\t          keyboardShortcuts: function() {\n\t            module.verbose('Removing keyboard shortcuts');\n\t            $document\n\t              .off('keyup' + eventNamespace)\n\t            ;\n\t          },\n\t          scrolling: function() {\n\t            $dimmable.removeClass(className.scrolling);\n\t            $module.removeClass(className.scrolling);\n\t          }\n\t        },\n\t\n\t        cacheSizes: function() {\n\t          var\n\t            modalHeight = $module.outerHeight()\n\t          ;\n\t          if(module.cache === undefined || modalHeight !== 0) {\n\t            module.cache = {\n\t              pageHeight    : $(document).outerHeight(),\n\t              height        : modalHeight + settings.offset,\n\t              contextHeight : (settings.context == 'body')\n\t                ? $(window).height()\n\t                : $dimmable.height()\n\t            };\n\t          }\n\t          module.debug('Caching modal and container sizes', module.cache);\n\t        },\n\t\n\t        can: {\n\t          fit: function() {\n\t            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\n\t          }\n\t        },\n\t\n\t        is: {\n\t          active: function() {\n\t            return $module.hasClass(className.active);\n\t          },\n\t          animating: function() {\n\t            return $module.transition('is supported')\n\t              ? $module.transition('is animating')\n\t              : $module.is(':visible')\n\t            ;\n\t          },\n\t          scrolling: function() {\n\t            return $dimmable.hasClass(className.scrolling);\n\t          },\n\t          modernBrowser: function() {\n\t            // appName for IE11 reports 'Netscape' can no longer use\n\t            return !(window.ActiveXObject || \"ActiveXObject\" in window);\n\t          }\n\t        },\n\t\n\t        set: {\n\t          autofocus: function() {\n\t            var\n\t              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\n\t              $autofocus = $inputs.filter('[autofocus]'),\n\t              $input     = ($autofocus.length > 0)\n\t                ? $autofocus.first()\n\t                : $inputs.first()\n\t            ;\n\t            if($input.length > 0) {\n\t              $input.focus();\n\t            }\n\t          },\n\t          clickaway: function() {\n\t            if(settings.closable) {\n\t              $dimmer\n\t                .on('click' + elementEventNamespace, module.event.click)\n\t              ;\n\t            }\n\t          },\n\t          screenHeight: function() {\n\t            if( module.can.fit() ) {\n\t              $body.css('height', '');\n\t            }\n\t            else {\n\t              module.debug('Modal is taller than page content, resizing page height');\n\t              $body\n\t                .css('height', module.cache.height + (settings.padding * 2) )\n\t              ;\n\t            }\n\t          },\n\t          active: function() {\n\t            $module.addClass(className.active);\n\t          },\n\t          scrolling: function() {\n\t            $dimmable.addClass(className.scrolling);\n\t            $module.addClass(className.scrolling);\n\t          },\n\t          type: function() {\n\t            if(module.can.fit()) {\n\t              module.verbose('Modal fits on screen');\n\t              if(!module.others.active() && !module.others.animating()) {\n\t                module.remove.scrolling();\n\t              }\n\t            }\n\t            else {\n\t              module.verbose('Modal cannot fit on screen setting to scrolling');\n\t              module.set.scrolling();\n\t            }\n\t          },\n\t          position: function() {\n\t            module.verbose('Centering modal on page', module.cache);\n\t            if(module.can.fit()) {\n\t              $module\n\t                .css({\n\t                  top: '',\n\t                  marginTop: -(module.cache.height / 2)\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              $module\n\t                .css({\n\t                  marginTop : '',\n\t                  top       : $document.scrollTop()\n\t                })\n\t              ;\n\t            }\n\t          },\n\t          undetached: function() {\n\t            $dimmable.addClass(className.undetached);\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.modal.settings = {\n\t\n\t  name           : 'Modal',\n\t  namespace      : 'modal',\n\t\n\t  silent         : false,\n\t  debug          : false,\n\t  verbose        : false,\n\t  performance    : true,\n\t\n\t  observeChanges : false,\n\t\n\t  allowMultiple  : false,\n\t  detachable     : true,\n\t  closable       : true,\n\t  autofocus      : true,\n\t\n\t  inverted       : false,\n\t  blurring       : false,\n\t\n\t  dimmerSettings : {\n\t    closable : false,\n\t    useCSS   : true\n\t  },\n\t\n\t  // whether to use keyboard shortcuts\n\t  keyboardShortcuts: true,\n\t\n\t  context    : 'body',\n\t\n\t  queue      : false,\n\t  duration   : 500,\n\t  offset     : 0,\n\t  transition : 'scale',\n\t\n\t  // padding with edge of page\n\t  padding    : 50,\n\t\n\t  // called before show animation\n\t  onShow     : function(){},\n\t\n\t  // called after show animation\n\t  onVisible  : function(){},\n\t\n\t  // called before hide animation\n\t  onHide     : function(){ return true; },\n\t\n\t  // called after hide animation\n\t  onHidden   : function(){},\n\t\n\t  // called after approve selector match\n\t  onApprove  : function(){ return true; },\n\t\n\t  // called after deny selector match\n\t  onDeny     : function(){ return true; },\n\t\n\t  selector    : {\n\t    close    : '> .close',\n\t    approve  : '.actions .positive, .actions .approve, .actions .ok',\n\t    deny     : '.actions .negative, .actions .deny, .actions .cancel',\n\t    modal    : '.ui.modal'\n\t  },\n\t  error : {\n\t    dimmer    : 'UI Dimmer, a required component is not included in this page',\n\t    method    : 'The method you called is not defined.',\n\t    notFound  : 'The element you specified could not be found'\n\t  },\n\t  className : {\n\t    active     : 'active',\n\t    animating  : 'animating',\n\t    blurring   : 'blurring',\n\t    scrolling  : 'scrolling',\n\t    undetached : 'undetached'\n\t  }\n\t};\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Nag\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.nag = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings          = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.nag.settings, parameters)\n\t          : $.extend({}, $.fn.nag.settings),\n\t\n\t        className       = settings.className,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t        namespace       = settings.namespace,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = namespace + '-module',\n\t\n\t        $module         = $(this),\n\t\n\t        $close          = $module.find(selector.close),\n\t        $context        = (settings.context)\n\t          ? $(settings.context)\n\t          : $('body'),\n\t\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        moduleOffset,\n\t        moduleHeight,\n\t\n\t        contextWidth,\n\t        contextHeight,\n\t        contextOffset,\n\t\n\t        yOffset,\n\t        yPosition,\n\t\n\t        timer,\n\t        module,\n\t\n\t        requestAnimationFrame = window.requestAnimationFrame\n\t          || window.mozRequestAnimationFrame\n\t          || window.webkitRequestAnimationFrame\n\t          || window.msRequestAnimationFrame\n\t          || function(callback) { setTimeout(callback, 0); }\n\t      ;\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing element');\n\t\n\t          $module\n\t            .on('click' + eventNamespace, selector.close, module.dismiss)\n\t            .data(moduleNamespace, module)\n\t          ;\n\t\n\t          if(settings.detachable && $module.parent()[0] !== $context[0]) {\n\t            $module\n\t              .detach()\n\t              .prependTo($context)\n\t            ;\n\t          }\n\t\n\t          if(settings.displayTime > 0) {\n\t            setTimeout(module.hide, settings.displayTime);\n\t          }\n\t          module.show();\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying instance');\n\t          $module\n\t            .removeData(moduleNamespace)\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        show: function() {\n\t          if( module.should.show() && !$module.is(':visible') ) {\n\t            module.debug('Showing nag', settings.animation.show);\n\t            if(settings.animation.show == 'fade') {\n\t              $module\n\t                .fadeIn(settings.duration, settings.easing)\n\t              ;\n\t            }\n\t            else {\n\t              $module\n\t                .slideDown(settings.duration, settings.easing)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        hide: function() {\n\t          module.debug('Showing nag', settings.animation.hide);\n\t          if(settings.animation.show == 'fade') {\n\t            $module\n\t              .fadeIn(settings.duration, settings.easing)\n\t            ;\n\t          }\n\t          else {\n\t            $module\n\t              .slideUp(settings.duration, settings.easing)\n\t            ;\n\t          }\n\t        },\n\t\n\t        onHide: function() {\n\t          module.debug('Removing nag', settings.animation.hide);\n\t          $module.remove();\n\t          if (settings.onHide) {\n\t            settings.onHide();\n\t          }\n\t        },\n\t\n\t        dismiss: function(event) {\n\t          if(settings.storageMethod) {\n\t            module.storage.set(settings.key, settings.value);\n\t          }\n\t          module.hide();\n\t          event.stopImmediatePropagation();\n\t          event.preventDefault();\n\t        },\n\t\n\t        should: {\n\t          show: function() {\n\t            if(settings.persist) {\n\t              module.debug('Persistent nag is set, can show nag');\n\t              return true;\n\t            }\n\t            if( module.storage.get(settings.key) != settings.value.toString() ) {\n\t              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\n\t              return true;\n\t            }\n\t            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\n\t            return false;\n\t          }\n\t        },\n\t\n\t        get: {\n\t          storageOptions: function() {\n\t            var\n\t              options = {}\n\t            ;\n\t            if(settings.expires) {\n\t              options.expires = settings.expires;\n\t            }\n\t            if(settings.domain) {\n\t              options.domain = settings.domain;\n\t            }\n\t            if(settings.path) {\n\t              options.path = settings.path;\n\t            }\n\t            return options;\n\t          }\n\t        },\n\t\n\t        clear: function() {\n\t          module.storage.remove(settings.key);\n\t        },\n\t\n\t        storage: {\n\t          set: function(key, value) {\n\t            var\n\t              options = module.get.storageOptions()\n\t            ;\n\t            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n\t              window.localStorage.setItem(key, value);\n\t              module.debug('Value stored using local storage', key, value);\n\t            }\n\t            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n\t              window.sessionStorage.setItem(key, value);\n\t              module.debug('Value stored using session storage', key, value);\n\t            }\n\t            else if($.cookie !== undefined) {\n\t              $.cookie(key, value, options);\n\t              module.debug('Value stored using cookie', key, value, options);\n\t            }\n\t            else {\n\t              module.error(error.noCookieStorage);\n\t              return;\n\t            }\n\t          },\n\t          get: function(key, value) {\n\t            var\n\t              storedValue\n\t            ;\n\t            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n\t              storedValue = window.localStorage.getItem(key);\n\t            }\n\t            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n\t              storedValue = window.sessionStorage.getItem(key);\n\t            }\n\t            // get by cookie\n\t            else if($.cookie !== undefined) {\n\t              storedValue = $.cookie(key);\n\t            }\n\t            else {\n\t              module.error(error.noCookieStorage);\n\t            }\n\t            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\n\t              storedValue = undefined;\n\t            }\n\t            return storedValue;\n\t          },\n\t          remove: function(key) {\n\t            var\n\t              options = module.get.storageOptions()\n\t            ;\n\t            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n\t              window.localStorage.removeItem(key);\n\t            }\n\t            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n\t              window.sessionStorage.removeItem(key);\n\t            }\n\t            // store by cookie\n\t            else if($.cookie !== undefined) {\n\t              $.removeCookie(key, options);\n\t            }\n\t            else {\n\t              module.error(error.noStorage);\n\t            }\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.nag.settings = {\n\t\n\t  name        : 'Nag',\n\t\n\t  silent      : false,\n\t  debug       : false,\n\t  verbose     : false,\n\t  performance : true,\n\t\n\t  namespace   : 'Nag',\n\t\n\t  // allows cookie to be overridden\n\t  persist     : false,\n\t\n\t  // set to zero to require manually dismissal, otherwise hides on its own\n\t  displayTime : 0,\n\t\n\t  animation   : {\n\t    show : 'slide',\n\t    hide : 'slide'\n\t  },\n\t\n\t  context       : false,\n\t  detachable    : false,\n\t\n\t  expires       : 30,\n\t  domain        : false,\n\t  path          : '/',\n\t\n\t  // type of storage to use\n\t  storageMethod : 'cookie',\n\t\n\t  // value to store in dismissed localstorage/cookie\n\t  key           : 'nag',\n\t  value         : 'dismiss',\n\t\n\t  error: {\n\t    noCookieStorage : '$.cookie is not included. A storage solution is required.',\n\t    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\n\t    method          : 'The method you called is not defined.'\n\t  },\n\t\n\t  className     : {\n\t    bottom : 'bottom',\n\t    fixed  : 'fixed'\n\t  },\n\t\n\t  selector      : {\n\t    close : '.close.icon'\n\t  },\n\t\n\t  speed         : 500,\n\t  easing        : 'easeOutQuad',\n\t\n\t  onHide: function() {}\n\t\n\t};\n\t\n\t// Adds easing\n\t$.extend( $.easing, {\n\t  easeOutQuad: function (x, t, b, c, d) {\n\t    return -c *(t/=d)*(t-2) + b;\n\t  }\n\t});\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Popup\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.popup = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    $document      = $(document),\n\t    $window        = $(window),\n\t    $body          = $('body'),\n\t\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    hasTouch       = (true),\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.popup.settings, parameters)\n\t          : $.extend({}, $.fn.popup.settings),\n\t\n\t        selector           = settings.selector,\n\t        className          = settings.className,\n\t        error              = settings.error,\n\t        metadata           = settings.metadata,\n\t        namespace          = settings.namespace,\n\t\n\t        eventNamespace     = '.' + settings.namespace,\n\t        moduleNamespace    = 'module-' + namespace,\n\t\n\t        $module            = $(this),\n\t        $context           = $(settings.context),\n\t        $scrollContext     = $(settings.scrollContext),\n\t        $boundary          = $(settings.boundary),\n\t        $target            = (settings.target)\n\t          ? $(settings.target)\n\t          : $module,\n\t\n\t        $popup,\n\t        $offsetParent,\n\t\n\t        searchDepth        = 0,\n\t        triedPositions     = false,\n\t        openedWithTouch    = false,\n\t\n\t        element            = this,\n\t        instance           = $module.data(moduleNamespace),\n\t\n\t        documentObserver,\n\t        elementNamespace,\n\t        id,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        // binds events\n\t        initialize: function() {\n\t          module.debug('Initializing', $module);\n\t          module.createID();\n\t          module.bind.events();\n\t          if(!module.exists() && settings.preserve) {\n\t            module.create();\n\t          }\n\t          if(settings.observeChanges) {\n\t            module.observeChanges();\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, instance)\n\t          ;\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            documentObserver = new MutationObserver(module.event.documentChanged);\n\t            documentObserver.observe(document, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            module.debug('Setting up mutation observer', documentObserver);\n\t          }\n\t        },\n\t\n\t        refresh: function() {\n\t          if(settings.popup) {\n\t            $popup = $(settings.popup).eq(0);\n\t          }\n\t          else {\n\t            if(settings.inline) {\n\t              $popup = $target.nextAll(selector.popup).eq(0);\n\t              settings.popup = $popup;\n\t            }\n\t          }\n\t          if(settings.popup) {\n\t            $popup.addClass(className.loading);\n\t            $offsetParent = module.get.offsetParent();\n\t            $popup.removeClass(className.loading);\n\t            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\n\t              module.debug('Moving popup to the same offset parent as activating element');\n\t              $popup\n\t                .detach()\n\t                .appendTo($offsetParent)\n\t              ;\n\t            }\n\t          }\n\t          else {\n\t            $offsetParent = (settings.inline)\n\t              ? module.get.offsetParent($target)\n\t              : module.has.popup()\n\t                ? module.get.offsetParent($popup)\n\t                : $body\n\t            ;\n\t          }\n\t          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\n\t            module.debug('Setting page as offset parent');\n\t            $offsetParent = $body;\n\t          }\n\t          if( module.get.variation() ) {\n\t            module.set.variation();\n\t          }\n\t        },\n\t\n\t        reposition: function() {\n\t          module.refresh();\n\t          module.set.position();\n\t        },\n\t\n\t        destroy: function() {\n\t          module.debug('Destroying previous module');\n\t          if(documentObserver) {\n\t            documentObserver.disconnect();\n\t          }\n\t          // remove element only if was created dynamically\n\t          if($popup && !settings.preserve) {\n\t            module.removePopup();\n\t          }\n\t          // clear all timeouts\n\t          clearTimeout(module.hideTimer);\n\t          clearTimeout(module.showTimer);\n\t          // remove events\n\t          module.unbind.close();\n\t          module.unbind.events();\n\t          $module\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        event: {\n\t          start:  function(event) {\n\t            var\n\t              delay = ($.isPlainObject(settings.delay))\n\t                ? settings.delay.show\n\t                : settings.delay\n\t            ;\n\t            clearTimeout(module.hideTimer);\n\t            if(!openedWithTouch) {\n\t              module.showTimer = setTimeout(module.show, delay);\n\t            }\n\t          },\n\t          end:  function() {\n\t            var\n\t              delay = ($.isPlainObject(settings.delay))\n\t                ? settings.delay.hide\n\t                : settings.delay\n\t            ;\n\t            clearTimeout(module.showTimer);\n\t            module.hideTimer = setTimeout(module.hide, delay);\n\t          },\n\t          touchstart: function(event) {\n\t            openedWithTouch = true;\n\t            module.show();\n\t          },\n\t          resize: function() {\n\t            if( module.is.visible() ) {\n\t              module.set.position();\n\t            }\n\t          },\n\t          documentChanged: function(mutations) {\n\t            [].forEach.call(mutations, function(mutation) {\n\t              if(mutation.removedNodes) {\n\t                [].forEach.call(mutation.removedNodes, function(node) {\n\t                  if(node == element || $(node).find(element).length > 0) {\n\t                    module.debug('Element removed from DOM, tearing down events');\n\t                    module.destroy();\n\t                  }\n\t                });\n\t              }\n\t            });\n\t          },\n\t          hideGracefully: function(event) {\n\t            var\n\t              $target = $(event.target),\n\t              isInDOM = $.contains(document.documentElement, event.target),\n\t              inPopup = ($target.closest(selector.popup).length > 0)\n\t            ;\n\t            // don't close on clicks inside popup\n\t            if(event && !inPopup && isInDOM) {\n\t              module.debug('Click occurred outside popup hiding popup');\n\t              module.hide();\n\t            }\n\t            else {\n\t              module.debug('Click was inside popup, keeping popup open');\n\t            }\n\t          }\n\t        },\n\t\n\t        // generates popup html from metadata\n\t        create: function() {\n\t          var\n\t            html      = module.get.html(),\n\t            title     = module.get.title(),\n\t            content   = module.get.content()\n\t          ;\n\t\n\t          if(html || content || title) {\n\t            module.debug('Creating pop-up html');\n\t            if(!html) {\n\t              html = settings.templates.popup({\n\t                title   : title,\n\t                content : content\n\t              });\n\t            }\n\t            $popup = $('<div/>')\n\t              .addClass(className.popup)\n\t              .data(metadata.activator, $module)\n\t              .html(html)\n\t            ;\n\t            if(settings.inline) {\n\t              module.verbose('Inserting popup element inline', $popup);\n\t              $popup\n\t                .insertAfter($module)\n\t              ;\n\t            }\n\t            else {\n\t              module.verbose('Appending popup element to body', $popup);\n\t              $popup\n\t                .appendTo( $context )\n\t              ;\n\t            }\n\t            module.refresh();\n\t            module.set.variation();\n\t\n\t            if(settings.hoverable) {\n\t              module.bind.popup();\n\t            }\n\t            settings.onCreate.call($popup, element);\n\t          }\n\t          else if($target.next(selector.popup).length !== 0) {\n\t            module.verbose('Pre-existing popup found');\n\t            settings.inline = true;\n\t            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\n\t            module.refresh();\n\t            if(settings.hoverable) {\n\t              module.bind.popup();\n\t            }\n\t          }\n\t          else if(settings.popup) {\n\t            $(settings.popup).data(metadata.activator, $module);\n\t            module.verbose('Used popup specified in settings');\n\t            module.refresh();\n\t            if(settings.hoverable) {\n\t              module.bind.popup();\n\t            }\n\t          }\n\t          else {\n\t            module.debug('No content specified skipping display', element);\n\t          }\n\t        },\n\t\n\t        createID: function() {\n\t          id = (Math.random().toString(16) + '000000000').substr(2, 8);\n\t          elementNamespace = '.' + id;\n\t          module.verbose('Creating unique id for element', id);\n\t        },\n\t\n\t        // determines popup state\n\t        toggle: function() {\n\t          module.debug('Toggling pop-up');\n\t          if( module.is.hidden() ) {\n\t            module.debug('Popup is hidden, showing pop-up');\n\t            module.unbind.close();\n\t            module.show();\n\t          }\n\t          else {\n\t            module.debug('Popup is visible, hiding pop-up');\n\t            module.hide();\n\t          }\n\t        },\n\t\n\t        show: function(callback) {\n\t          callback = callback || function(){};\n\t          module.debug('Showing pop-up', settings.transition);\n\t          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\n\t            if( !module.exists() ) {\n\t              module.create();\n\t            }\n\t            if(settings.onShow.call($popup, element) === false) {\n\t              module.debug('onShow callback returned false, cancelling popup animation');\n\t              return;\n\t            }\n\t            else if(!settings.preserve && !settings.popup) {\n\t              module.refresh();\n\t            }\n\t            if( $popup && module.set.position() ) {\n\t              module.save.conditions();\n\t              if(settings.exclusive) {\n\t                module.hideAll();\n\t              }\n\t              module.animate.show(callback);\n\t            }\n\t          }\n\t        },\n\t\n\t\n\t        hide: function(callback) {\n\t          callback = callback || function(){};\n\t          if( module.is.visible() || module.is.animating() ) {\n\t            if(settings.onHide.call($popup, element) === false) {\n\t              module.debug('onHide callback returned false, cancelling popup animation');\n\t              return;\n\t            }\n\t            module.remove.visible();\n\t            module.unbind.close();\n\t            module.restore.conditions();\n\t            module.animate.hide(callback);\n\t          }\n\t        },\n\t\n\t        hideAll: function() {\n\t          $(selector.popup)\n\t            .filter('.' + className.visible)\n\t            .each(function() {\n\t              $(this)\n\t                .data(metadata.activator)\n\t                  .popup('hide')\n\t              ;\n\t            })\n\t          ;\n\t        },\n\t        exists: function() {\n\t          if(!$popup) {\n\t            return false;\n\t          }\n\t          if(settings.inline || settings.popup) {\n\t            return ( module.has.popup() );\n\t          }\n\t          else {\n\t            return ( $popup.closest($context).length >= 1 )\n\t              ? true\n\t              : false\n\t            ;\n\t          }\n\t        },\n\t\n\t        removePopup: function() {\n\t          if( module.has.popup() && !settings.popup) {\n\t            module.debug('Removing popup', $popup);\n\t            $popup.remove();\n\t            $popup = undefined;\n\t            settings.onRemove.call($popup, element);\n\t          }\n\t        },\n\t\n\t        save: {\n\t          conditions: function() {\n\t            module.cache = {\n\t              title: $module.attr('title')\n\t            };\n\t            if (module.cache.title) {\n\t              $module.removeAttr('title');\n\t            }\n\t            module.verbose('Saving original attributes', module.cache.title);\n\t          }\n\t        },\n\t        restore: {\n\t          conditions: function() {\n\t            if(module.cache && module.cache.title) {\n\t              $module.attr('title', module.cache.title);\n\t              module.verbose('Restoring original attributes', module.cache.title);\n\t            }\n\t            return true;\n\t          }\n\t        },\n\t        supports: {\n\t          svg: function() {\n\t            return (typeof SVGGraphicsElement === undefined);\n\t          }\n\t        },\n\t        animate: {\n\t          show: function(callback) {\n\t            callback = $.isFunction(callback) ? callback : function(){};\n\t            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n\t              module.set.visible();\n\t              $popup\n\t                .transition({\n\t                  animation  : settings.transition + ' in',\n\t                  queue      : false,\n\t                  debug      : settings.debug,\n\t                  verbose    : settings.verbose,\n\t                  duration   : settings.duration,\n\t                  onComplete : function() {\n\t                    module.bind.close();\n\t                    callback.call($popup, element);\n\t                    settings.onVisible.call($popup, element);\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.error(error.noTransition);\n\t            }\n\t          },\n\t          hide: function(callback) {\n\t            callback = $.isFunction(callback) ? callback : function(){};\n\t            module.debug('Hiding pop-up');\n\t            if(settings.onHide.call($popup, element) === false) {\n\t              module.debug('onHide callback returned false, cancelling popup animation');\n\t              return;\n\t            }\n\t            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n\t              $popup\n\t                .transition({\n\t                  animation  : settings.transition + ' out',\n\t                  queue      : false,\n\t                  duration   : settings.duration,\n\t                  debug      : settings.debug,\n\t                  verbose    : settings.verbose,\n\t                  onComplete : function() {\n\t                    module.reset();\n\t                    callback.call($popup, element);\n\t                    settings.onHidden.call($popup, element);\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.error(error.noTransition);\n\t            }\n\t          }\n\t        },\n\t\n\t        change: {\n\t          content: function(html) {\n\t            $popup.html(html);\n\t          }\n\t        },\n\t\n\t        get: {\n\t          html: function() {\n\t            $module.removeData(metadata.html);\n\t            return $module.data(metadata.html) || settings.html;\n\t          },\n\t          title: function() {\n\t            $module.removeData(metadata.title);\n\t            return $module.data(metadata.title) || settings.title;\n\t          },\n\t          content: function() {\n\t            $module.removeData(metadata.content);\n\t            return $module.data(metadata.content) || $module.attr('title') || settings.content;\n\t          },\n\t          variation: function() {\n\t            $module.removeData(metadata.variation);\n\t            return $module.data(metadata.variation) || settings.variation;\n\t          },\n\t          popup: function() {\n\t            return $popup;\n\t          },\n\t          popupOffset: function() {\n\t            return $popup.offset();\n\t          },\n\t          calculations: function() {\n\t            var\n\t              targetElement    = $target[0],\n\t              isWindow         = ($boundary[0] == window),\n\t              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\n\t                ? $target.position()\n\t                : $target.offset(),\n\t              screenPosition = (isWindow)\n\t                ? { top: 0, left: 0 }\n\t                : $boundary.offset(),\n\t              calculations   = {},\n\t              scroll = (isWindow)\n\t                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\n\t                : { top: 0, left: 0},\n\t              screen\n\t            ;\n\t            calculations = {\n\t              // element which is launching popup\n\t              target : {\n\t                element : $target[0],\n\t                width   : $target.outerWidth(),\n\t                height  : $target.outerHeight(),\n\t                top     : targetPosition.top,\n\t                left    : targetPosition.left,\n\t                margin  : {}\n\t              },\n\t              // popup itself\n\t              popup : {\n\t                width  : $popup.outerWidth(),\n\t                height : $popup.outerHeight()\n\t              },\n\t              // offset container (or 3d context)\n\t              parent : {\n\t                width  : $offsetParent.outerWidth(),\n\t                height : $offsetParent.outerHeight()\n\t              },\n\t              // screen boundaries\n\t              screen : {\n\t                top  : screenPosition.top,\n\t                left : screenPosition.left,\n\t                scroll: {\n\t                  top  : scroll.top,\n\t                  left : scroll.left\n\t                },\n\t                width  : $boundary.width(),\n\t                height : $boundary.height()\n\t              }\n\t            };\n\t\n\t            // add in container calcs if fluid\n\t            if( settings.setFluidWidth && module.is.fluid() ) {\n\t              calculations.container = {\n\t                width: $popup.parent().outerWidth()\n\t              };\n\t              calculations.popup.width = calculations.container.width;\n\t            }\n\t\n\t            // add in margins if inline\n\t            calculations.target.margin.top = (settings.inline)\n\t              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\n\t              : 0\n\t            ;\n\t            calculations.target.margin.left = (settings.inline)\n\t              ? module.is.rtl()\n\t                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\n\t                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\n\t              : 0\n\t            ;\n\t            // calculate screen boundaries\n\t            screen = calculations.screen;\n\t            calculations.boundary = {\n\t              top    : screen.top + screen.scroll.top,\n\t              bottom : screen.top + screen.scroll.top + screen.height,\n\t              left   : screen.left + screen.scroll.left,\n\t              right  : screen.left + screen.scroll.left + screen.width\n\t            };\n\t            return calculations;\n\t          },\n\t          id: function() {\n\t            return id;\n\t          },\n\t          startEvent: function() {\n\t            if(settings.on == 'hover') {\n\t              return 'mouseenter';\n\t            }\n\t            else if(settings.on == 'focus') {\n\t              return 'focus';\n\t            }\n\t            return false;\n\t          },\n\t          scrollEvent: function() {\n\t            return 'scroll';\n\t          },\n\t          endEvent: function() {\n\t            if(settings.on == 'hover') {\n\t              return 'mouseleave';\n\t            }\n\t            else if(settings.on == 'focus') {\n\t              return 'blur';\n\t            }\n\t            return false;\n\t          },\n\t          distanceFromBoundary: function(offset, calculations) {\n\t            var\n\t              distanceFromBoundary = {},\n\t              popup,\n\t              boundary\n\t            ;\n\t            calculations = calculations || module.get.calculations();\n\t\n\t            // shorthand\n\t            popup        = calculations.popup;\n\t            boundary     = calculations.boundary;\n\t\n\t            if(offset) {\n\t              distanceFromBoundary = {\n\t                top    : (offset.top - boundary.top),\n\t                left   : (offset.left - boundary.left),\n\t                right  : (boundary.right - (offset.left + popup.width) ),\n\t                bottom : (boundary.bottom - (offset.top + popup.height) )\n\t              };\n\t              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\n\t            }\n\t            return distanceFromBoundary;\n\t          },\n\t          offsetParent: function($target) {\n\t            var\n\t              element = ($target !== undefined)\n\t                ? $target[0]\n\t                : $module[0],\n\t              parentNode = element.parentNode,\n\t              $node    = $(parentNode)\n\t            ;\n\t            if(parentNode) {\n\t              var\n\t                is2D     = ($node.css('transform') === 'none'),\n\t                isStatic = ($node.css('position') === 'static'),\n\t                isHTML   = $node.is('html')\n\t              ;\n\t              while(parentNode && !isHTML && isStatic && is2D) {\n\t                parentNode = parentNode.parentNode;\n\t                $node    = $(parentNode);\n\t                is2D     = ($node.css('transform') === 'none');\n\t                isStatic = ($node.css('position') === 'static');\n\t                isHTML   = $node.is('html');\n\t              }\n\t            }\n\t            return ($node && $node.length > 0)\n\t              ? $node\n\t              : $()\n\t            ;\n\t          },\n\t          positions: function() {\n\t            return {\n\t              'top left'      : false,\n\t              'top center'    : false,\n\t              'top right'     : false,\n\t              'bottom left'   : false,\n\t              'bottom center' : false,\n\t              'bottom right'  : false,\n\t              'left center'   : false,\n\t              'right center'  : false\n\t            };\n\t          },\n\t          nextPosition: function(position) {\n\t            var\n\t              positions          = position.split(' '),\n\t              verticalPosition   = positions[0],\n\t              horizontalPosition = positions[1],\n\t              opposite = {\n\t                top    : 'bottom',\n\t                bottom : 'top',\n\t                left   : 'right',\n\t                right  : 'left'\n\t              },\n\t              adjacent = {\n\t                left   : 'center',\n\t                center : 'right',\n\t                right  : 'left'\n\t              },\n\t              backup = {\n\t                'top left'      : 'top center',\n\t                'top center'    : 'top right',\n\t                'top right'     : 'right center',\n\t                'right center'  : 'bottom right',\n\t                'bottom right'  : 'bottom center',\n\t                'bottom center' : 'bottom left',\n\t                'bottom left'   : 'left center',\n\t                'left center'   : 'top left'\n\t              },\n\t              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\n\t              oppositeTried = false,\n\t              adjacentTried = false,\n\t              nextPosition  = false\n\t            ;\n\t            if(!triedPositions) {\n\t              module.verbose('All available positions available');\n\t              triedPositions = module.get.positions();\n\t            }\n\t\n\t            module.debug('Recording last position tried', position);\n\t            triedPositions[position] = true;\n\t\n\t            if(settings.prefer === 'opposite') {\n\t              nextPosition  = [opposite[verticalPosition], horizontalPosition];\n\t              nextPosition  = nextPosition.join(' ');\n\t              oppositeTried = (triedPositions[nextPosition] === true);\n\t              module.debug('Trying opposite strategy', nextPosition);\n\t            }\n\t            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\n\t              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\n\t              nextPosition  = nextPosition.join(' ');\n\t              adjacentTried = (triedPositions[nextPosition] === true);\n\t              module.debug('Trying adjacent strategy', nextPosition);\n\t            }\n\t            if(adjacentTried || oppositeTried) {\n\t              module.debug('Using backup position', nextPosition);\n\t              nextPosition = backup[position];\n\t            }\n\t            return nextPosition;\n\t          }\n\t        },\n\t\n\t        set: {\n\t          position: function(position, calculations) {\n\t\n\t            // exit conditions\n\t            if($target.length === 0 || $popup.length === 0) {\n\t              module.error(error.notFound);\n\t              return;\n\t            }\n\t            var\n\t              offset,\n\t              distanceAway,\n\t              target,\n\t              popup,\n\t              parent,\n\t              positioning,\n\t              popupOffset,\n\t              distanceFromBoundary\n\t            ;\n\t\n\t            calculations = calculations || module.get.calculations();\n\t            position     = position     || $module.data(metadata.position) || settings.position;\n\t\n\t            offset       = $module.data(metadata.offset) || settings.offset;\n\t            distanceAway = settings.distanceAway;\n\t\n\t            // shorthand\n\t            target = calculations.target;\n\t            popup  = calculations.popup;\n\t            parent = calculations.parent;\n\t\n\t            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\n\t              module.debug('Popup target is hidden, no action taken');\n\t              return false;\n\t            }\n\t\n\t            if(settings.inline) {\n\t              module.debug('Adding margin to calculation', target.margin);\n\t              if(position == 'left center' || position == 'right center') {\n\t                offset       +=  target.margin.top;\n\t                distanceAway += -target.margin.left;\n\t              }\n\t              else if (position == 'top left' || position == 'top center' || position == 'top right') {\n\t                offset       += target.margin.left;\n\t                distanceAway -= target.margin.top;\n\t              }\n\t              else {\n\t                offset       += target.margin.left;\n\t                distanceAway += target.margin.top;\n\t              }\n\t            }\n\t\n\t            module.debug('Determining popup position from calculations', position, calculations);\n\t\n\t            if (module.is.rtl()) {\n\t              position = position.replace(/left|right/g, function (match) {\n\t                return (match == 'left')\n\t                  ? 'right'\n\t                  : 'left'\n\t                ;\n\t              });\n\t              module.debug('RTL: Popup position updated', position);\n\t            }\n\t\n\t            // if last attempt use specified last resort position\n\t            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\n\t              position = settings.lastResort;\n\t            }\n\t\n\t            switch (position) {\n\t              case 'top left':\n\t                positioning = {\n\t                  top    : 'auto',\n\t                  bottom : parent.height - target.top + distanceAway,\n\t                  left   : target.left + offset,\n\t                  right  : 'auto'\n\t                };\n\t              break;\n\t              case 'top center':\n\t                positioning = {\n\t                  bottom : parent.height - target.top + distanceAway,\n\t                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n\t                  top    : 'auto',\n\t                  right  : 'auto'\n\t                };\n\t              break;\n\t              case 'top right':\n\t                positioning = {\n\t                  bottom :  parent.height - target.top + distanceAway,\n\t                  right  :  parent.width - target.left - target.width - offset,\n\t                  top    : 'auto',\n\t                  left   : 'auto'\n\t                };\n\t              break;\n\t              case 'left center':\n\t                positioning = {\n\t                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n\t                  right  : parent.width - target.left + distanceAway,\n\t                  left   : 'auto',\n\t                  bottom : 'auto'\n\t                };\n\t              break;\n\t              case 'right center':\n\t                positioning = {\n\t                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n\t                  left   : target.left + target.width + distanceAway,\n\t                  bottom : 'auto',\n\t                  right  : 'auto'\n\t                };\n\t              break;\n\t              case 'bottom left':\n\t                positioning = {\n\t                  top    : target.top + target.height + distanceAway,\n\t                  left   : target.left + offset,\n\t                  bottom : 'auto',\n\t                  right  : 'auto'\n\t                };\n\t              break;\n\t              case 'bottom center':\n\t                positioning = {\n\t                  top    : target.top + target.height + distanceAway,\n\t                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n\t                  bottom : 'auto',\n\t                  right  : 'auto'\n\t                };\n\t              break;\n\t              case 'bottom right':\n\t                positioning = {\n\t                  top    : target.top + target.height + distanceAway,\n\t                  right  : parent.width - target.left  - target.width - offset,\n\t                  left   : 'auto',\n\t                  bottom : 'auto'\n\t                };\n\t              break;\n\t            }\n\t            if(positioning === undefined) {\n\t              module.error(error.invalidPosition, position);\n\t            }\n\t\n\t            module.debug('Calculated popup positioning values', positioning);\n\t\n\t            // tentatively place on stage\n\t            $popup\n\t              .css(positioning)\n\t              .removeClass(className.position)\n\t              .addClass(position)\n\t              .addClass(className.loading)\n\t            ;\n\t\n\t            popupOffset = module.get.popupOffset();\n\t\n\t            // see if any boundaries are surpassed with this tentative position\n\t            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\n\t\n\t            if( module.is.offstage(distanceFromBoundary, position) ) {\n\t              module.debug('Position is outside viewport', position);\n\t              if(searchDepth < settings.maxSearchDepth) {\n\t                searchDepth++;\n\t                position = module.get.nextPosition(position);\n\t                module.debug('Trying new position', position);\n\t                return ($popup)\n\t                  ? module.set.position(position, calculations)\n\t                  : false\n\t                ;\n\t              }\n\t              else {\n\t                if(settings.lastResort) {\n\t                  module.debug('No position found, showing with last position');\n\t                }\n\t                else {\n\t                  module.debug('Popup could not find a position to display', $popup);\n\t                  module.error(error.cannotPlace, element);\n\t                  module.remove.attempts();\n\t                  module.remove.loading();\n\t                  module.reset();\n\t                  settings.onUnplaceable.call($popup, element);\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t            module.debug('Position is on stage', position);\n\t            module.remove.attempts();\n\t            module.remove.loading();\n\t            if( settings.setFluidWidth && module.is.fluid() ) {\n\t              module.set.fluidWidth(calculations);\n\t            }\n\t            return true;\n\t          },\n\t\n\t          fluidWidth: function(calculations) {\n\t            calculations = calculations || module.get.calculations();\n\t            module.debug('Automatically setting element width to parent width', calculations.parent.width);\n\t            $popup.css('width', calculations.container.width);\n\t          },\n\t\n\t          variation: function(variation) {\n\t            variation = variation || module.get.variation();\n\t            if(variation && module.has.popup() ) {\n\t              module.verbose('Adding variation to popup', variation);\n\t              $popup.addClass(variation);\n\t            }\n\t          },\n\t\n\t          visible: function() {\n\t            $module.addClass(className.visible);\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          loading: function() {\n\t            $popup.removeClass(className.loading);\n\t          },\n\t          variation: function(variation) {\n\t            variation = variation || module.get.variation();\n\t            if(variation) {\n\t              module.verbose('Removing variation', variation);\n\t              $popup.removeClass(variation);\n\t            }\n\t          },\n\t          visible: function() {\n\t            $module.removeClass(className.visible);\n\t          },\n\t          attempts: function() {\n\t            module.verbose('Resetting all searched positions');\n\t            searchDepth    = 0;\n\t            triedPositions = false;\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.debug('Binding popup events to module');\n\t            if(settings.on == 'click') {\n\t              $module\n\t                .on('click' + eventNamespace, module.toggle)\n\t              ;\n\t            }\n\t            if(settings.on == 'hover' && hasTouch) {\n\t              $module\n\t                .on('touchstart' + eventNamespace, module.event.touchstart)\n\t              ;\n\t            }\n\t            if( module.get.startEvent() ) {\n\t              $module\n\t                .on(module.get.startEvent() + eventNamespace, module.event.start)\n\t                .on(module.get.endEvent() + eventNamespace, module.event.end)\n\t              ;\n\t            }\n\t            if(settings.target) {\n\t              module.debug('Target set to element', $target);\n\t            }\n\t            $window.on('resize' + elementNamespace, module.event.resize);\n\t          },\n\t          popup: function() {\n\t            module.verbose('Allowing hover events on popup to prevent closing');\n\t            if( $popup && module.has.popup() ) {\n\t              $popup\n\t                .on('mouseenter' + eventNamespace, module.event.start)\n\t                .on('mouseleave' + eventNamespace, module.event.end)\n\t              ;\n\t            }\n\t          },\n\t          close: function() {\n\t            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\n\t              $scrollContext\n\t                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\n\t              ;\n\t            }\n\t            if(settings.on == 'hover' && openedWithTouch) {\n\t              module.verbose('Binding popup close event to document');\n\t              $document\n\t                .on('touchstart' + elementNamespace, function(event) {\n\t                  module.verbose('Touched away from popup');\n\t                  module.event.hideGracefully.call(element, event);\n\t                })\n\t              ;\n\t            }\n\t            if(settings.on == 'click' && settings.closable) {\n\t              module.verbose('Binding popup close event to document');\n\t              $document\n\t                .on('click' + elementNamespace, function(event) {\n\t                  module.verbose('Clicked away from popup');\n\t                  module.event.hideGracefully.call(element, event);\n\t                })\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        unbind: {\n\t          events: function() {\n\t            $window\n\t              .off(elementNamespace)\n\t            ;\n\t            $module\n\t              .off(eventNamespace)\n\t            ;\n\t          },\n\t          close: function() {\n\t            $document\n\t              .off(elementNamespace)\n\t            ;\n\t            $scrollContext\n\t              .off(elementNamespace)\n\t            ;\n\t          },\n\t        },\n\t\n\t        has: {\n\t          popup: function() {\n\t            return ($popup && $popup.length > 0);\n\t          }\n\t        },\n\t\n\t        is: {\n\t          offstage: function(distanceFromBoundary, position) {\n\t            var\n\t              offstage = []\n\t            ;\n\t            // return boundaries that have been surpassed\n\t            $.each(distanceFromBoundary, function(direction, distance) {\n\t              if(distance < -settings.jitter) {\n\t                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\n\t                offstage.push(direction);\n\t              }\n\t            });\n\t            if(offstage.length > 0) {\n\t              return true;\n\t            }\n\t            else {\n\t              return false;\n\t            }\n\t          },\n\t          svg: function(element) {\n\t            return module.supports.svg() && (element instanceof SVGGraphicsElement);\n\t          },\n\t          active: function() {\n\t            return $module.hasClass(className.active);\n\t          },\n\t          animating: function() {\n\t            return ($popup !== undefined && $popup.hasClass(className.animating) );\n\t          },\n\t          fluid: function() {\n\t            return ($popup !== undefined && $popup.hasClass(className.fluid));\n\t          },\n\t          visible: function() {\n\t            return ($popup !== undefined && $popup.hasClass(className.visible));\n\t          },\n\t          dropdown: function() {\n\t            return $module.hasClass(className.dropdown);\n\t          },\n\t          hidden: function() {\n\t            return !module.is.visible();\n\t          },\n\t          rtl: function () {\n\t            return $module.css('direction') == 'rtl';\n\t          }\n\t        },\n\t\n\t        reset: function() {\n\t          module.remove.visible();\n\t          if(settings.preserve) {\n\t            if($.fn.transition !== undefined) {\n\t              $popup\n\t                .transition('remove transition')\n\t              ;\n\t            }\n\t          }\n\t          else {\n\t            module.removePopup();\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            settings[name] = value;\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.popup.settings = {\n\t\n\t  name           : 'Popup',\n\t\n\t  // module settings\n\t  silent         : false,\n\t  debug          : false,\n\t  verbose        : false,\n\t  performance    : true,\n\t  namespace      : 'popup',\n\t\n\t  // whether it should use dom mutation observers\n\t  observeChanges : true,\n\t\n\t  // callback only when element added to dom\n\t  onCreate       : function(){},\n\t\n\t  // callback before element removed from dom\n\t  onRemove       : function(){},\n\t\n\t  // callback before show animation\n\t  onShow         : function(){},\n\t\n\t  // callback after show animation\n\t  onVisible      : function(){},\n\t\n\t  // callback before hide animation\n\t  onHide         : function(){},\n\t\n\t  // callback when popup cannot be positioned in visible screen\n\t  onUnplaceable  : function(){},\n\t\n\t  // callback after hide animation\n\t  onHidden       : function(){},\n\t\n\t  // when to show popup\n\t  on             : 'hover',\n\t\n\t  // element to use to determine if popup is out of boundary\n\t  boundary       : window,\n\t\n\t  // whether to add touchstart events when using hover\n\t  addTouchEvents : true,\n\t\n\t  // default position relative to element\n\t  position       : 'top left',\n\t\n\t  // name of variation to use\n\t  variation      : '',\n\t\n\t  // whether popup should be moved to context\n\t  movePopup      : true,\n\t\n\t  // element which popup should be relative to\n\t  target         : false,\n\t\n\t  // jq selector or element that should be used as popup\n\t  popup          : false,\n\t\n\t  // popup should remain inline next to activator\n\t  inline         : false,\n\t\n\t  // popup should be removed from page on hide\n\t  preserve       : false,\n\t\n\t  // popup should not close when being hovered on\n\t  hoverable      : false,\n\t\n\t  // explicitly set content\n\t  content        : false,\n\t\n\t  // explicitly set html\n\t  html           : false,\n\t\n\t  // explicitly set title\n\t  title          : false,\n\t\n\t  // whether automatically close on clickaway when on click\n\t  closable       : true,\n\t\n\t  // automatically hide on scroll\n\t  hideOnScroll   : 'auto',\n\t\n\t  // hide other popups on show\n\t  exclusive      : false,\n\t\n\t  // context to attach popups\n\t  context        : 'body',\n\t\n\t  // context for binding scroll events\n\t  scrollContext  : window,\n\t\n\t  // position to prefer when calculating new position\n\t  prefer         : 'opposite',\n\t\n\t  // specify position to appear even if it doesn't fit\n\t  lastResort     : false,\n\t\n\t  // delay used to prevent accidental refiring of animations due to user error\n\t  delay        : {\n\t    show : 50,\n\t    hide : 70\n\t  },\n\t\n\t  // whether fluid variation should assign width explicitly\n\t  setFluidWidth  : true,\n\t\n\t  // transition settings\n\t  duration       : 200,\n\t  transition     : 'scale',\n\t\n\t  // distance away from activating element in px\n\t  distanceAway   : 0,\n\t\n\t  // number of pixels an element is allowed to be \"offstage\" for a position to be chosen (allows for rounding)\n\t  jitter         : 2,\n\t\n\t  // offset on aligning axis from calculated position\n\t  offset         : 0,\n\t\n\t  // maximum times to look for a position before failing (9 positions total)\n\t  maxSearchDepth : 15,\n\t\n\t  error: {\n\t    invalidPosition : 'The position you specified is not a valid position',\n\t    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\n\t    method          : 'The method you called is not defined.',\n\t    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\n\t    notFound        : 'The target or popup you specified does not exist on the page'\n\t  },\n\t\n\t  metadata: {\n\t    activator : 'activator',\n\t    content   : 'content',\n\t    html      : 'html',\n\t    offset    : 'offset',\n\t    position  : 'position',\n\t    title     : 'title',\n\t    variation : 'variation'\n\t  },\n\t\n\t  className   : {\n\t    active    : 'active',\n\t    animating : 'animating',\n\t    dropdown  : 'dropdown',\n\t    fluid     : 'fluid',\n\t    loading   : 'loading',\n\t    popup     : 'ui popup',\n\t    position  : 'top left center bottom right',\n\t    visible   : 'visible'\n\t  },\n\t\n\t  selector    : {\n\t    popup    : '.ui.popup'\n\t  },\n\t\n\t  templates: {\n\t    escape: function(string) {\n\t      var\n\t        badChars     = /[&<>\"'`]/g,\n\t        shouldEscape = /[&<>\"'`]/,\n\t        escape       = {\n\t          \"&\": \"&amp;\",\n\t          \"<\": \"&lt;\",\n\t          \">\": \"&gt;\",\n\t          '\"': \"&quot;\",\n\t          \"'\": \"&#x27;\",\n\t          \"`\": \"&#x60;\"\n\t        },\n\t        escapedChar  = function(chr) {\n\t          return escape[chr];\n\t        }\n\t      ;\n\t      if(shouldEscape.test(string)) {\n\t        return string.replace(badChars, escapedChar);\n\t      }\n\t      return string;\n\t    },\n\t    popup: function(text) {\n\t      var\n\t        html   = '',\n\t        escape = $.fn.popup.settings.templates.escape\n\t      ;\n\t      if(typeof text !== undefined) {\n\t        if(typeof text.title !== undefined && text.title) {\n\t          text.title = escape(text.title);\n\t          html += '<div class=\"header\">' + text.title + '</div>';\n\t        }\n\t        if(typeof text.content !== undefined && text.content) {\n\t          text.content = escape(text.content);\n\t          html += '<div class=\"content\">' + text.content + '</div>';\n\t        }\n\t      }\n\t      return html;\n\t    }\n\t  }\n\t\n\t};\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Progress\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\tvar\n\t  global = (typeof window != 'undefined' && window.Math == Math)\n\t    ? window\n\t    : (typeof self != 'undefined' && self.Math == Math)\n\t      ? self\n\t      : Function('return this')()\n\t;\n\t\n\t$.fn.progress = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings          = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.progress.settings, parameters)\n\t          : $.extend({}, $.fn.progress.settings),\n\t\n\t        className       = settings.className,\n\t        metadata        = settings.metadata,\n\t        namespace       = settings.namespace,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $module         = $(this),\n\t        $bar            = $(this).find(selector.bar),\n\t        $progress       = $(this).find(selector.progress),\n\t        $label          = $(this).find(selector.label),\n\t\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        animating = false,\n\t        transitionEnd,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing progress bar', settings);\n\t\n\t          module.set.duration();\n\t          module.set.transitionEvent();\n\t\n\t          module.read.metadata();\n\t          module.read.settings();\n\t\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of progress', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t        destroy: function() {\n\t          module.verbose('Destroying previous progress for', $module);\n\t          clearInterval(instance.interval);\n\t          module.remove.state();\n\t          $module.removeData(moduleNamespace);\n\t          instance = undefined;\n\t        },\n\t\n\t        reset: function() {\n\t          module.remove.nextValue();\n\t          module.update.progress(0);\n\t        },\n\t\n\t        complete: function() {\n\t          if(module.percent === undefined || module.percent < 100) {\n\t            module.remove.progressPoll();\n\t            module.set.percent(100);\n\t          }\n\t        },\n\t\n\t        read: {\n\t          metadata: function() {\n\t            var\n\t              data = {\n\t                percent : $module.data(metadata.percent),\n\t                total   : $module.data(metadata.total),\n\t                value   : $module.data(metadata.value)\n\t              }\n\t            ;\n\t            if(data.percent) {\n\t              module.debug('Current percent value set from metadata', data.percent);\n\t              module.set.percent(data.percent);\n\t            }\n\t            if(data.total) {\n\t              module.debug('Total value set from metadata', data.total);\n\t              module.set.total(data.total);\n\t            }\n\t            if(data.value) {\n\t              module.debug('Current value set from metadata', data.value);\n\t              module.set.value(data.value);\n\t              module.set.progress(data.value);\n\t            }\n\t          },\n\t          settings: function() {\n\t            if(settings.total !== false) {\n\t              module.debug('Current total set in settings', settings.total);\n\t              module.set.total(settings.total);\n\t            }\n\t            if(settings.value !== false) {\n\t              module.debug('Current value set in settings', settings.value);\n\t              module.set.value(settings.value);\n\t              module.set.progress(module.value);\n\t            }\n\t            if(settings.percent !== false) {\n\t              module.debug('Current percent set in settings', settings.percent);\n\t              module.set.percent(settings.percent);\n\t            }\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          transitionEnd: function(callback) {\n\t            var\n\t              transitionEnd = module.get.transitionEnd()\n\t            ;\n\t            $bar\n\t              .one(transitionEnd + eventNamespace, function(event) {\n\t                clearTimeout(module.failSafeTimer);\n\t                callback.call(this, event);\n\t              })\n\t            ;\n\t            module.failSafeTimer = setTimeout(function() {\n\t              $bar.triggerHandler(transitionEnd);\n\t            }, settings.duration + settings.failSafeDelay);\n\t            module.verbose('Adding fail safe timer', module.timer);\n\t          }\n\t        },\n\t\n\t        increment: function(incrementValue) {\n\t          var\n\t            maxValue,\n\t            startValue,\n\t            newValue\n\t          ;\n\t          if( module.has.total() ) {\n\t            startValue     = module.get.value();\n\t            incrementValue = incrementValue || 1;\n\t            newValue       = startValue + incrementValue;\n\t          }\n\t          else {\n\t            startValue     = module.get.percent();\n\t            incrementValue = incrementValue || module.get.randomValue();\n\t\n\t            newValue       = startValue + incrementValue;\n\t            maxValue       = 100;\n\t            module.debug('Incrementing percentage by', startValue, newValue);\n\t          }\n\t          newValue = module.get.normalizedValue(newValue);\n\t          module.set.progress(newValue);\n\t        },\n\t        decrement: function(decrementValue) {\n\t          var\n\t            total     = module.get.total(),\n\t            startValue,\n\t            newValue\n\t          ;\n\t          if(total) {\n\t            startValue     =  module.get.value();\n\t            decrementValue =  decrementValue || 1;\n\t            newValue       =  startValue - decrementValue;\n\t            module.debug('Decrementing value by', decrementValue, startValue);\n\t          }\n\t          else {\n\t            startValue     =  module.get.percent();\n\t            decrementValue =  decrementValue || module.get.randomValue();\n\t            newValue       =  startValue - decrementValue;\n\t            module.debug('Decrementing percentage by', decrementValue, startValue);\n\t          }\n\t          newValue = module.get.normalizedValue(newValue);\n\t          module.set.progress(newValue);\n\t        },\n\t\n\t        has: {\n\t          progressPoll: function() {\n\t            return module.progressPoll;\n\t          },\n\t          total: function() {\n\t            return (module.get.total() !== false);\n\t          }\n\t        },\n\t\n\t        get: {\n\t          text: function(templateText) {\n\t            var\n\t              value   = module.value                || 0,\n\t              total   = module.total                || 0,\n\t              percent = (animating)\n\t                ? module.get.displayPercent()\n\t                : module.percent || 0,\n\t              left = (module.total > 0)\n\t                ? (total - value)\n\t                : (100 - percent)\n\t            ;\n\t            templateText = templateText || '';\n\t            templateText = templateText\n\t              .replace('{value}', value)\n\t              .replace('{total}', total)\n\t              .replace('{left}', left)\n\t              .replace('{percent}', percent)\n\t            ;\n\t            module.verbose('Adding variables to progress bar text', templateText);\n\t            return templateText;\n\t          },\n\t\n\t          normalizedValue: function(value) {\n\t            if(value < 0) {\n\t              module.debug('Value cannot decrement below 0');\n\t              return 0;\n\t            }\n\t            if(module.has.total()) {\n\t              if(value > module.total) {\n\t                module.debug('Value cannot increment above total', module.total);\n\t                return module.total;\n\t              }\n\t            }\n\t            else if(value > 100 ) {\n\t              module.debug('Value cannot increment above 100 percent');\n\t              return 100;\n\t            }\n\t            return value;\n\t          },\n\t\n\t          updateInterval: function() {\n\t            if(settings.updateInterval == 'auto') {\n\t              return settings.duration;\n\t            }\n\t            return settings.updateInterval;\n\t          },\n\t\n\t          randomValue: function() {\n\t            module.debug('Generating random increment percentage');\n\t            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\n\t          },\n\t\n\t          numericValue: function(value) {\n\t            return (typeof value === 'string')\n\t              ? (value.replace(/[^\\d.]/g, '') !== '')\n\t                ? +(value.replace(/[^\\d.]/g, ''))\n\t                : false\n\t              : value\n\t            ;\n\t          },\n\t\n\t          transitionEnd: function() {\n\t            var\n\t              element     = document.createElement('element'),\n\t              transitions = {\n\t                'transition'       :'transitionend',\n\t                'OTransition'      :'oTransitionEnd',\n\t                'MozTransition'    :'transitionend',\n\t                'WebkitTransition' :'webkitTransitionEnd'\n\t              },\n\t              transition\n\t            ;\n\t            for(transition in transitions){\n\t              if( element.style[transition] !== undefined ){\n\t                return transitions[transition];\n\t              }\n\t            }\n\t          },\n\t\n\t          // gets current displayed percentage (if animating values this is the intermediary value)\n\t          displayPercent: function() {\n\t            var\n\t              barWidth       = $bar.width(),\n\t              totalWidth     = $module.width(),\n\t              minDisplay     = parseInt($bar.css('min-width'), 10),\n\t              displayPercent = (barWidth > minDisplay)\n\t                ? (barWidth / totalWidth * 100)\n\t                : module.percent\n\t            ;\n\t            return (settings.precision > 0)\n\t              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\n\t              : Math.round(displayPercent)\n\t            ;\n\t          },\n\t\n\t          percent: function() {\n\t            return module.percent || 0;\n\t          },\n\t          value: function() {\n\t            return module.nextValue || module.value || 0;\n\t          },\n\t          total: function() {\n\t            return module.total || false;\n\t          }\n\t        },\n\t\n\t        create: {\n\t          progressPoll: function() {\n\t            module.progressPoll = setTimeout(function() {\n\t              module.update.toNextValue();\n\t              module.remove.progressPoll();\n\t            }, module.get.updateInterval());\n\t          },\n\t        },\n\t\n\t        is: {\n\t          complete: function() {\n\t            return module.is.success() || module.is.warning() || module.is.error();\n\t          },\n\t          success: function() {\n\t            return $module.hasClass(className.success);\n\t          },\n\t          warning: function() {\n\t            return $module.hasClass(className.warning);\n\t          },\n\t          error: function() {\n\t            return $module.hasClass(className.error);\n\t          },\n\t          active: function() {\n\t            return $module.hasClass(className.active);\n\t          },\n\t          visible: function() {\n\t            return $module.is(':visible');\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          progressPoll: function() {\n\t            module.verbose('Removing progress poll timer');\n\t            if(module.progressPoll) {\n\t              clearTimeout(module.progressPoll);\n\t              delete module.progressPoll;\n\t            }\n\t          },\n\t          nextValue: function() {\n\t            module.verbose('Removing progress value stored for next update');\n\t            delete module.nextValue;\n\t          },\n\t          state: function() {\n\t            module.verbose('Removing stored state');\n\t            delete module.total;\n\t            delete module.percent;\n\t            delete module.value;\n\t          },\n\t          active: function() {\n\t            module.verbose('Removing active state');\n\t            $module.removeClass(className.active);\n\t          },\n\t          success: function() {\n\t            module.verbose('Removing success state');\n\t            $module.removeClass(className.success);\n\t          },\n\t          warning: function() {\n\t            module.verbose('Removing warning state');\n\t            $module.removeClass(className.warning);\n\t          },\n\t          error: function() {\n\t            module.verbose('Removing error state');\n\t            $module.removeClass(className.error);\n\t          }\n\t        },\n\t\n\t        set: {\n\t          barWidth: function(value) {\n\t            if(value > 100) {\n\t              module.error(error.tooHigh, value);\n\t            }\n\t            else if (value < 0) {\n\t              module.error(error.tooLow, value);\n\t            }\n\t            else {\n\t              $bar\n\t                .css('width', value + '%')\n\t              ;\n\t              $module\n\t                .attr('data-percent', parseInt(value, 10))\n\t              ;\n\t            }\n\t          },\n\t          duration: function(duration) {\n\t            duration = duration || settings.duration;\n\t            duration = (typeof duration == 'number')\n\t              ? duration + 'ms'\n\t              : duration\n\t            ;\n\t            module.verbose('Setting progress bar transition duration', duration);\n\t            $bar\n\t              .css({\n\t                'transition-duration':  duration\n\t              })\n\t            ;\n\t          },\n\t          percent: function(percent) {\n\t            percent = (typeof percent == 'string')\n\t              ? +(percent.replace('%', ''))\n\t              : percent\n\t            ;\n\t            // round display percentage\n\t            percent = (settings.precision > 0)\n\t              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\n\t              : Math.round(percent)\n\t            ;\n\t            module.percent = percent;\n\t            if( !module.has.total() ) {\n\t              module.value = (settings.precision > 0)\n\t                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\n\t                : Math.round( (percent / 100) * module.total * 10) / 10\n\t              ;\n\t              if(settings.limitValues) {\n\t                module.value = (module.value > 100)\n\t                  ? 100\n\t                  : (module.value < 0)\n\t                    ? 0\n\t                    : module.value\n\t                ;\n\t              }\n\t            }\n\t            module.set.barWidth(percent);\n\t            module.set.labelInterval();\n\t            module.set.labels();\n\t            settings.onChange.call(element, percent, module.value, module.total);\n\t          },\n\t          labelInterval: function() {\n\t            var\n\t              animationCallback = function() {\n\t                module.verbose('Bar finished animating, removing continuous label updates');\n\t                clearInterval(module.interval);\n\t                animating = false;\n\t                module.set.labels();\n\t              }\n\t            ;\n\t            clearInterval(module.interval);\n\t            module.bind.transitionEnd(animationCallback);\n\t            animating = true;\n\t            module.interval = setInterval(function() {\n\t              var\n\t                isInDOM = $.contains(document.documentElement, element)\n\t              ;\n\t              if(!isInDOM) {\n\t                clearInterval(module.interval);\n\t                animating = false;\n\t              }\n\t              module.set.labels();\n\t            }, settings.framerate);\n\t          },\n\t          labels: function() {\n\t            module.verbose('Setting both bar progress and outer label text');\n\t            module.set.barLabel();\n\t            module.set.state();\n\t          },\n\t          label: function(text) {\n\t            text = text || '';\n\t            if(text) {\n\t              text = module.get.text(text);\n\t              module.verbose('Setting label to text', text);\n\t              $label.text(text);\n\t            }\n\t          },\n\t          state: function(percent) {\n\t            percent = (percent !== undefined)\n\t              ? percent\n\t              : module.percent\n\t            ;\n\t            if(percent === 100) {\n\t              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\n\t                module.set.success();\n\t                module.debug('Automatically triggering success at 100%');\n\t              }\n\t              else {\n\t                module.verbose('Reached 100% removing active state');\n\t                module.remove.active();\n\t                module.remove.progressPoll();\n\t              }\n\t            }\n\t            else if(percent > 0) {\n\t              module.verbose('Adjusting active progress bar label', percent);\n\t              module.set.active();\n\t            }\n\t            else {\n\t              module.remove.active();\n\t              module.set.label(settings.text.active);\n\t            }\n\t          },\n\t          barLabel: function(text) {\n\t            if(text !== undefined) {\n\t              $progress.text( module.get.text(text) );\n\t            }\n\t            else if(settings.label == 'ratio' && module.total) {\n\t              module.verbose('Adding ratio to bar label');\n\t              $progress.text( module.get.text(settings.text.ratio) );\n\t            }\n\t            else if(settings.label == 'percent') {\n\t              module.verbose('Adding percentage to bar label');\n\t              $progress.text( module.get.text(settings.text.percent) );\n\t            }\n\t          },\n\t          active: function(text) {\n\t            text = text || settings.text.active;\n\t            module.debug('Setting active state');\n\t            if(settings.showActivity && !module.is.active() ) {\n\t              $module.addClass(className.active);\n\t            }\n\t            module.remove.warning();\n\t            module.remove.error();\n\t            module.remove.success();\n\t            text = settings.onLabelUpdate('active', text, module.value, module.total);\n\t            if(text) {\n\t              module.set.label(text);\n\t            }\n\t            module.bind.transitionEnd(function() {\n\t              settings.onActive.call(element, module.value, module.total);\n\t            });\n\t          },\n\t          success : function(text) {\n\t            text = text || settings.text.success || settings.text.active;\n\t            module.debug('Setting success state');\n\t            $module.addClass(className.success);\n\t            module.remove.active();\n\t            module.remove.warning();\n\t            module.remove.error();\n\t            module.complete();\n\t            if(settings.text.success) {\n\t              text = settings.onLabelUpdate('success', text, module.value, module.total);\n\t              module.set.label(text);\n\t            }\n\t            else {\n\t              text = settings.onLabelUpdate('active', text, module.value, module.total);\n\t              module.set.label(text);\n\t            }\n\t            module.bind.transitionEnd(function() {\n\t              settings.onSuccess.call(element, module.total);\n\t            });\n\t          },\n\t          warning : function(text) {\n\t            text = text || settings.text.warning;\n\t            module.debug('Setting warning state');\n\t            $module.addClass(className.warning);\n\t            module.remove.active();\n\t            module.remove.success();\n\t            module.remove.error();\n\t            module.complete();\n\t            text = settings.onLabelUpdate('warning', text, module.value, module.total);\n\t            if(text) {\n\t              module.set.label(text);\n\t            }\n\t            module.bind.transitionEnd(function() {\n\t              settings.onWarning.call(element, module.value, module.total);\n\t            });\n\t          },\n\t          error : function(text) {\n\t            text = text || settings.text.error;\n\t            module.debug('Setting error state');\n\t            $module.addClass(className.error);\n\t            module.remove.active();\n\t            module.remove.success();\n\t            module.remove.warning();\n\t            module.complete();\n\t            text = settings.onLabelUpdate('error', text, module.value, module.total);\n\t            if(text) {\n\t              module.set.label(text);\n\t            }\n\t            module.bind.transitionEnd(function() {\n\t              settings.onError.call(element, module.value, module.total);\n\t            });\n\t          },\n\t          transitionEvent: function() {\n\t            transitionEnd = module.get.transitionEnd();\n\t          },\n\t          total: function(totalValue) {\n\t            module.total = totalValue;\n\t          },\n\t          value: function(value) {\n\t            module.value = value;\n\t          },\n\t          progress: function(value) {\n\t            if(!module.has.progressPoll()) {\n\t              module.debug('First update in progress update interval, immediately updating', value);\n\t              module.update.progress(value);\n\t              module.create.progressPoll();\n\t            }\n\t            else {\n\t              module.debug('Updated within interval, setting next update to use new value', value);\n\t              module.set.nextValue(value);\n\t            }\n\t          },\n\t          nextValue: function(value) {\n\t            module.nextValue = value;\n\t          }\n\t        },\n\t\n\t        update: {\n\t          toNextValue: function() {\n\t            var\n\t              nextValue = module.nextValue\n\t            ;\n\t            if(nextValue) {\n\t              module.debug('Update interval complete using last updated value', nextValue);\n\t              module.update.progress(nextValue);\n\t              module.remove.nextValue();\n\t            }\n\t          },\n\t          progress: function(value) {\n\t            var\n\t              percentComplete\n\t            ;\n\t            value = module.get.numericValue(value);\n\t            if(value === false) {\n\t              module.error(error.nonNumeric, value);\n\t            }\n\t            value = module.get.normalizedValue(value);\n\t            if( module.has.total() ) {\n\t              module.set.value(value);\n\t              percentComplete = (value / module.total) * 100;\n\t              module.debug('Calculating percent complete from total', percentComplete);\n\t              module.set.percent( percentComplete );\n\t            }\n\t            else {\n\t              percentComplete = value;\n\t              module.debug('Setting value to exact percentage value', percentComplete);\n\t              module.set.percent( percentComplete );\n\t            }\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.progress.settings = {\n\t\n\t  name         : 'Progress',\n\t  namespace    : 'progress',\n\t\n\t  silent       : false,\n\t  debug        : false,\n\t  verbose      : false,\n\t  performance  : true,\n\t\n\t  random       : {\n\t    min : 2,\n\t    max : 5\n\t  },\n\t\n\t  duration       : 300,\n\t\n\t  updateInterval : 'auto',\n\t\n\t  autoSuccess    : true,\n\t  showActivity   : true,\n\t  limitValues    : true,\n\t\n\t  label          : 'percent',\n\t  precision      : 0,\n\t  framerate      : (1000 / 30), /// 30 fps\n\t\n\t  percent        : false,\n\t  total          : false,\n\t  value          : false,\n\t\n\t  // delay in ms for fail safe animation callback\n\t  failSafeDelay : 100,\n\t\n\t  onLabelUpdate : function(state, text, value, total){\n\t    return text;\n\t  },\n\t  onChange      : function(percent, value, total){},\n\t  onSuccess     : function(total){},\n\t  onActive      : function(value, total){},\n\t  onError       : function(value, total){},\n\t  onWarning     : function(value, total){},\n\t\n\t  error    : {\n\t    method     : 'The method you called is not defined.',\n\t    nonNumeric : 'Progress value is non numeric',\n\t    tooHigh    : 'Value specified is above 100%',\n\t    tooLow     : 'Value specified is below 0%'\n\t  },\n\t\n\t  regExp: {\n\t    variable: /\\{\\$*[A-z0-9]+\\}/g\n\t  },\n\t\n\t  metadata: {\n\t    percent : 'percent',\n\t    total   : 'total',\n\t    value   : 'value'\n\t  },\n\t\n\t  selector : {\n\t    bar      : '> .bar',\n\t    label    : '> .label',\n\t    progress : '.bar > .progress'\n\t  },\n\t\n\t  text : {\n\t    active  : false,\n\t    error   : false,\n\t    success : false,\n\t    warning : false,\n\t    percent : '{percent}%',\n\t    ratio   : '{value} of {total}'\n\t  },\n\t\n\t  className : {\n\t    active  : 'active',\n\t    error   : 'error',\n\t    success : 'success',\n\t    warning : 'warning'\n\t  }\n\t\n\t};\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Rating\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.rating = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t    moduleSelector  = $allModules.selector || '',\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n\t          : $.extend({}, $.fn.rating.settings),\n\t\n\t        namespace       = settings.namespace,\n\t        className       = settings.className,\n\t        metadata        = settings.metadata,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        element         = this,\n\t        instance        = $(this).data(moduleNamespace),\n\t\n\t        $module         = $(this),\n\t        $icon           = $module.find(selector.icon),\n\t\n\t        initialLoad,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing rating module', settings);\n\t\n\t          if($icon.length === 0) {\n\t            module.setup.layout();\n\t          }\n\t\n\t          if(settings.interactive) {\n\t            module.enable();\n\t          }\n\t          else {\n\t            module.disable();\n\t          }\n\t          module.set.initialLoad();\n\t          module.set.rating( module.get.initialRating() );\n\t          module.remove.initialLoad();\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Instantiating module', settings);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous instance', instance);\n\t          module.remove.events();\n\t          $module\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          $icon   = $module.find(selector.icon);\n\t        },\n\t\n\t        setup: {\n\t          layout: function() {\n\t            var\n\t              maxRating = module.get.maxRating(),\n\t              html      = $.fn.rating.settings.templates.icon(maxRating)\n\t            ;\n\t            module.debug('Generating icon html dynamically');\n\t            $module\n\t              .html(html)\n\t            ;\n\t            module.refresh();\n\t          }\n\t        },\n\t\n\t        event: {\n\t          mouseenter: function() {\n\t            var\n\t              $activeIcon = $(this)\n\t            ;\n\t            $activeIcon\n\t              .nextAll()\n\t                .removeClass(className.selected)\n\t            ;\n\t            $module\n\t              .addClass(className.selected)\n\t            ;\n\t            $activeIcon\n\t              .addClass(className.selected)\n\t                .prevAll()\n\t                .addClass(className.selected)\n\t            ;\n\t          },\n\t          mouseleave: function() {\n\t            $module\n\t              .removeClass(className.selected)\n\t            ;\n\t            $icon\n\t              .removeClass(className.selected)\n\t            ;\n\t          },\n\t          click: function() {\n\t            var\n\t              $activeIcon   = $(this),\n\t              currentRating = module.get.rating(),\n\t              rating        = $icon.index($activeIcon) + 1,\n\t              canClear      = (settings.clearable == 'auto')\n\t               ? ($icon.length === 1)\n\t               : settings.clearable\n\t            ;\n\t            if(canClear && currentRating == rating) {\n\t              module.clearRating();\n\t            }\n\t            else {\n\t              module.set.rating( rating );\n\t            }\n\t          }\n\t        },\n\t\n\t        clearRating: function() {\n\t          module.debug('Clearing current rating');\n\t          module.set.rating(0);\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.verbose('Binding events');\n\t            $module\n\t              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n\t              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n\t              .on('click'      + eventNamespace, selector.icon, module.event.click)\n\t            ;\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          events: function() {\n\t            module.verbose('Removing events');\n\t            $module\n\t              .off(eventNamespace)\n\t            ;\n\t          },\n\t          initialLoad: function() {\n\t            initialLoad = false;\n\t          }\n\t        },\n\t\n\t        enable: function() {\n\t          module.debug('Setting rating to interactive mode');\n\t          module.bind.events();\n\t          $module\n\t            .removeClass(className.disabled)\n\t          ;\n\t        },\n\t\n\t        disable: function() {\n\t          module.debug('Setting rating to read-only mode');\n\t          module.remove.events();\n\t          $module\n\t            .addClass(className.disabled)\n\t          ;\n\t        },\n\t\n\t        is: {\n\t          initialLoad: function() {\n\t            return initialLoad;\n\t          }\n\t        },\n\t\n\t        get: {\n\t          initialRating: function() {\n\t            if($module.data(metadata.rating) !== undefined) {\n\t              $module.removeData(metadata.rating);\n\t              return $module.data(metadata.rating);\n\t            }\n\t            return settings.initialRating;\n\t          },\n\t          maxRating: function() {\n\t            if($module.data(metadata.maxRating) !== undefined) {\n\t              $module.removeData(metadata.maxRating);\n\t              return $module.data(metadata.maxRating);\n\t            }\n\t            return settings.maxRating;\n\t          },\n\t          rating: function() {\n\t            var\n\t              currentRating = $icon.filter('.' + className.active).length\n\t            ;\n\t            module.verbose('Current rating retrieved', currentRating);\n\t            return currentRating;\n\t          }\n\t        },\n\t\n\t        set: {\n\t          rating: function(rating) {\n\t            var\n\t              ratingIndex = (rating - 1 >= 0)\n\t                ? (rating - 1)\n\t                : 0,\n\t              $activeIcon = $icon.eq(ratingIndex)\n\t            ;\n\t            $module\n\t              .removeClass(className.selected)\n\t            ;\n\t            $icon\n\t              .removeClass(className.selected)\n\t              .removeClass(className.active)\n\t            ;\n\t            if(rating > 0) {\n\t              module.verbose('Setting current rating to', rating);\n\t              $activeIcon\n\t                .prevAll()\n\t                .addBack()\n\t                  .addClass(className.active)\n\t              ;\n\t            }\n\t            if(!module.is.initialLoad()) {\n\t              settings.onRate.call(element, rating);\n\t            }\n\t          },\n\t          initialLoad: function() {\n\t            initialLoad = true;\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.rating.settings = {\n\t\n\t  name          : 'Rating',\n\t  namespace     : 'rating',\n\t\n\t  slent         : false,\n\t  debug         : false,\n\t  verbose       : false,\n\t  performance   : true,\n\t\n\t  initialRating : 0,\n\t  interactive   : true,\n\t  maxRating     : 4,\n\t  clearable     : 'auto',\n\t\n\t  fireOnInit    : false,\n\t\n\t  onRate        : function(rating){},\n\t\n\t  error         : {\n\t    method    : 'The method you called is not defined',\n\t    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n\t  },\n\t\n\t\n\t  metadata: {\n\t    rating    : 'rating',\n\t    maxRating : 'maxRating'\n\t  },\n\t\n\t  className : {\n\t    active   : 'active',\n\t    disabled : 'disabled',\n\t    selected : 'selected',\n\t    loading  : 'loading'\n\t  },\n\t\n\t  selector  : {\n\t    icon : '.icon'\n\t  },\n\t\n\t  templates: {\n\t    icon: function(maxRating) {\n\t      var\n\t        icon = 1,\n\t        html = ''\n\t      ;\n\t      while(icon <= maxRating) {\n\t        html += '<i class=\"icon\"></i>';\n\t        icon++;\n\t      }\n\t      return html;\n\t    }\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Search\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.search = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t    moduleSelector  = $allModules.selector || '',\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t  $(this)\n\t    .each(function() {\n\t      var\n\t        settings          = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.search.settings, parameters)\n\t          : $.extend({}, $.fn.search.settings),\n\t\n\t        className        = settings.className,\n\t        metadata         = settings.metadata,\n\t        regExp           = settings.regExp,\n\t        fields           = settings.fields,\n\t        selector         = settings.selector,\n\t        error            = settings.error,\n\t        namespace        = settings.namespace,\n\t\n\t        eventNamespace   = '.' + namespace,\n\t        moduleNamespace  = namespace + '-module',\n\t\n\t        $module          = $(this),\n\t        $prompt          = $module.find(selector.prompt),\n\t        $searchButton    = $module.find(selector.searchButton),\n\t        $results         = $module.find(selector.results),\n\t        $result          = $module.find(selector.result),\n\t        $category        = $module.find(selector.category),\n\t\n\t        element          = this,\n\t        instance         = $module.data(moduleNamespace),\n\t\n\t        disabledBubbled  = false,\n\t        resultsDismissed = false,\n\t\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing module');\n\t          module.determine.searchFields();\n\t          module.bind.events();\n\t          module.set.type();\n\t          module.create.results();\n\t          module.instantiate();\n\t        },\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t        destroy: function() {\n\t          module.verbose('Destroying instance');\n\t          $module\n\t            .off(eventNamespace)\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          module.debug('Refreshing selector cache');\n\t          $prompt         = $module.find(selector.prompt);\n\t          $searchButton   = $module.find(selector.searchButton);\n\t          $category       = $module.find(selector.category);\n\t          $results        = $module.find(selector.results);\n\t          $result         = $module.find(selector.result);\n\t        },\n\t\n\t        refreshResults: function() {\n\t          $results = $module.find(selector.results);\n\t          $result  = $module.find(selector.result);\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.verbose('Binding events to search');\n\t            if(settings.automatic) {\n\t              $module\n\t                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\n\t              ;\n\t              $prompt\n\t                .attr('autocomplete', 'off')\n\t              ;\n\t            }\n\t            $module\n\t              // prompt\n\t              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\n\t              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\n\t              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\n\t              // search button\n\t              .on('click'     + eventNamespace, selector.searchButton, module.query)\n\t              // results\n\t              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\n\t              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\n\t              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\n\t            ;\n\t          }\n\t        },\n\t\n\t        determine: {\n\t          searchFields: function() {\n\t            // this makes sure $.extend does not add specified search fields to default fields\n\t            // this is the only setting which should not extend defaults\n\t            if(parameters && parameters.searchFields !== undefined) {\n\t              settings.searchFields = parameters.searchFields;\n\t            }\n\t          }\n\t        },\n\t\n\t        event: {\n\t          input: function() {\n\t            clearTimeout(module.timer);\n\t            module.timer = setTimeout(module.query, settings.searchDelay);\n\t          },\n\t          focus: function() {\n\t            module.set.focus();\n\t            if(settings.searchOnFocus && module.has.minimumCharacters() ) {\n\t              module.query(function() {\n\t                if(module.can.show() ) {\n\t                  module.showResults();\n\t                }\n\t              });\n\t            }\n\t          },\n\t          blur: function(event) {\n\t            var\n\t              pageLostFocus = (document.activeElement === this),\n\t              callback      = function() {\n\t                module.cancel.query();\n\t                module.remove.focus();\n\t                module.timer = setTimeout(module.hideResults, settings.hideDelay);\n\t              }\n\t            ;\n\t            if(pageLostFocus) {\n\t              return;\n\t            }\n\t            resultsDismissed = false;\n\t            if(module.resultsClicked) {\n\t              module.debug('Determining if user action caused search to close');\n\t              $module\n\t                .one('click.close' + eventNamespace, selector.results, function(event) {\n\t                  if(module.is.inMessage(event) || disabledBubbled) {\n\t                    $prompt.focus();\n\t                    return;\n\t                  }\n\t                  disabledBubbled = false;\n\t                  if( !module.is.animating() && !module.is.hidden()) {\n\t                    callback();\n\t                  }\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.debug('Input blurred without user action, closing results');\n\t              callback();\n\t            }\n\t          },\n\t          result: {\n\t            mousedown: function() {\n\t              module.resultsClicked = true;\n\t            },\n\t            mouseup: function() {\n\t              module.resultsClicked = false;\n\t            },\n\t            click: function(event) {\n\t              module.debug('Search result selected');\n\t              var\n\t                $result = $(this),\n\t                $title  = $result.find(selector.title).eq(0),\n\t                $link   = $result.is('a[href]')\n\t                  ? $result\n\t                  : $result.find('a[href]').eq(0),\n\t                href    = $link.attr('href')   || false,\n\t                target  = $link.attr('target') || false,\n\t                title   = $title.html(),\n\t                // title is used for result lookup\n\t                value   = ($title.length > 0)\n\t                  ? $title.text()\n\t                  : false,\n\t                results = module.get.results(),\n\t                result  = $result.data(metadata.result) || module.get.result(value, results),\n\t                returnedValue\n\t              ;\n\t              if( $.isFunction(settings.onSelect) ) {\n\t                if(settings.onSelect.call(element, result, results) === false) {\n\t                  module.debug('Custom onSelect callback cancelled default select action');\n\t                  disabledBubbled = true;\n\t                  return;\n\t                }\n\t              }\n\t              module.hideResults();\n\t              if(value) {\n\t                module.set.value(value);\n\t              }\n\t              if(href) {\n\t                module.verbose('Opening search link found in result', $link);\n\t                if(target == '_blank' || event.ctrlKey) {\n\t                  window.open(href);\n\t                }\n\t                else {\n\t                  window.location.href = (href);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        },\n\t        handleKeyboard: function(event) {\n\t          var\n\t            // force selector refresh\n\t            $result         = $module.find(selector.result),\n\t            $category       = $module.find(selector.category),\n\t            $activeResult   = $result.filter('.' + className.active),\n\t            currentIndex    = $result.index( $activeResult ),\n\t            resultSize      = $result.length,\n\t            hasActiveResult = $activeResult.length > 0,\n\t\n\t            keyCode         = event.which,\n\t            keys            = {\n\t              backspace : 8,\n\t              enter     : 13,\n\t              escape    : 27,\n\t              upArrow   : 38,\n\t              downArrow : 40\n\t            },\n\t            newIndex\n\t          ;\n\t          // search shortcuts\n\t          if(keyCode == keys.escape) {\n\t            module.verbose('Escape key pressed, blurring search field');\n\t            module.hideResults();\n\t            resultsDismissed = true;\n\t          }\n\t          if( module.is.visible() ) {\n\t            if(keyCode == keys.enter) {\n\t              module.verbose('Enter key pressed, selecting active result');\n\t              if( $result.filter('.' + className.active).length > 0 ) {\n\t                module.event.result.click.call($result.filter('.' + className.active), event);\n\t                event.preventDefault();\n\t                return false;\n\t              }\n\t            }\n\t            else if(keyCode == keys.upArrow && hasActiveResult) {\n\t              module.verbose('Up key pressed, changing active result');\n\t              newIndex = (currentIndex - 1 < 0)\n\t                ? currentIndex\n\t                : currentIndex - 1\n\t              ;\n\t              $category\n\t                .removeClass(className.active)\n\t              ;\n\t              $result\n\t                .removeClass(className.active)\n\t                .eq(newIndex)\n\t                  .addClass(className.active)\n\t                  .closest($category)\n\t                    .addClass(className.active)\n\t              ;\n\t              event.preventDefault();\n\t            }\n\t            else if(keyCode == keys.downArrow) {\n\t              module.verbose('Down key pressed, changing active result');\n\t              newIndex = (currentIndex + 1 >= resultSize)\n\t                ? currentIndex\n\t                : currentIndex + 1\n\t              ;\n\t              $category\n\t                .removeClass(className.active)\n\t              ;\n\t              $result\n\t                .removeClass(className.active)\n\t                .eq(newIndex)\n\t                  .addClass(className.active)\n\t                  .closest($category)\n\t                    .addClass(className.active)\n\t              ;\n\t              event.preventDefault();\n\t            }\n\t          }\n\t          else {\n\t            // query shortcuts\n\t            if(keyCode == keys.enter) {\n\t              module.verbose('Enter key pressed, executing query');\n\t              module.query();\n\t              module.set.buttonPressed();\n\t              $prompt.one('keyup', module.remove.buttonFocus);\n\t            }\n\t          }\n\t        },\n\t\n\t        setup: {\n\t          api: function(searchTerm, callback) {\n\t            var\n\t              apiSettings = {\n\t                debug             : settings.debug,\n\t                on                : false,\n\t                cache             : true,\n\t                action            : 'search',\n\t                urlData           : {\n\t                  query : searchTerm\n\t                },\n\t                onSuccess         : function(response) {\n\t                  module.parse.response.call(element, response, searchTerm);\n\t                  callback();\n\t                },\n\t                onFailure         : function() {\n\t                  module.displayMessage(error.serverError);\n\t                  callback();\n\t                },\n\t                onAbort : function(response) {\n\t                },\n\t                onError           : module.error\n\t              },\n\t              searchHTML\n\t            ;\n\t            $.extend(true, apiSettings, settings.apiSettings);\n\t            module.verbose('Setting up API request', apiSettings);\n\t            $module.api(apiSettings);\n\t          }\n\t        },\n\t\n\t        can: {\n\t          useAPI: function() {\n\t            return $.fn.api !== undefined;\n\t          },\n\t          show: function() {\n\t            return module.is.focused() && !module.is.visible() && !module.is.empty();\n\t          },\n\t          transition: function() {\n\t            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\n\t          }\n\t        },\n\t\n\t        is: {\n\t          animating: function() {\n\t            return $results.hasClass(className.animating);\n\t          },\n\t          hidden: function() {\n\t            return $results.hasClass(className.hidden);\n\t          },\n\t          inMessage: function(event) {\n\t            if(!event.target) {\n\t              return;\n\t            }\n\t            var\n\t              $target = $(event.target),\n\t              isInDOM = $.contains(document.documentElement, event.target)\n\t            ;\n\t            return (isInDOM && $target.closest(selector.message).length > 0);\n\t          },\n\t          empty: function() {\n\t            return ($results.html() === '');\n\t          },\n\t          visible: function() {\n\t            return ($results.filter(':visible').length > 0);\n\t          },\n\t          focused: function() {\n\t            return ($prompt.filter(':focus').length > 0);\n\t          }\n\t        },\n\t\n\t        get: {\n\t          inputEvent: function() {\n\t            var\n\t              prompt = $prompt[0],\n\t              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\n\t                ? 'input'\n\t                : (prompt !== undefined && prompt.onpropertychange !== undefined)\n\t                  ? 'propertychange'\n\t                  : 'keyup'\n\t            ;\n\t            return inputEvent;\n\t          },\n\t          value: function() {\n\t            return $prompt.val();\n\t          },\n\t          results: function() {\n\t            var\n\t              results = $module.data(metadata.results)\n\t            ;\n\t            return results;\n\t          },\n\t          result: function(value, results) {\n\t            var\n\t              lookupFields = ['title', 'id'],\n\t              result       = false\n\t            ;\n\t            value = (value !== undefined)\n\t              ? value\n\t              : module.get.value()\n\t            ;\n\t            results = (results !== undefined)\n\t              ? results\n\t              : module.get.results()\n\t            ;\n\t            if(settings.type === 'category') {\n\t              module.debug('Finding result that matches', value);\n\t              $.each(results, function(index, category) {\n\t                if($.isArray(category.results)) {\n\t                  result = module.search.object(value, category.results, lookupFields)[0];\n\t                  // don't continue searching if a result is found\n\t                  if(result) {\n\t                    return false;\n\t                  }\n\t                }\n\t              });\n\t            }\n\t            else {\n\t              module.debug('Finding result in results object', value);\n\t              result = module.search.object(value, results, lookupFields)[0];\n\t            }\n\t            return result || false;\n\t          },\n\t        },\n\t\n\t        select: {\n\t          firstResult: function() {\n\t            module.verbose('Selecting first result');\n\t            $result.first().addClass(className.active);\n\t          }\n\t        },\n\t\n\t        set: {\n\t          focus: function() {\n\t            $module.addClass(className.focus);\n\t          },\n\t          loading: function() {\n\t            $module.addClass(className.loading);\n\t          },\n\t          value: function(value) {\n\t            module.verbose('Setting search input value', value);\n\t            $prompt\n\t              .val(value)\n\t            ;\n\t          },\n\t          type: function(type) {\n\t            type = type || settings.type;\n\t            if(settings.type == 'category') {\n\t              $module.addClass(settings.type);\n\t            }\n\t          },\n\t          buttonPressed: function() {\n\t            $searchButton.addClass(className.pressed);\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          loading: function() {\n\t            $module.removeClass(className.loading);\n\t          },\n\t          focus: function() {\n\t            $module.removeClass(className.focus);\n\t          },\n\t          buttonPressed: function() {\n\t            $searchButton.removeClass(className.pressed);\n\t          }\n\t        },\n\t\n\t        query: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          var\n\t            searchTerm = module.get.value(),\n\t            cache = module.read.cache(searchTerm)\n\t          ;\n\t          callback = callback || function() {};\n\t          if( module.has.minimumCharacters() )  {\n\t            if(cache) {\n\t              module.debug('Reading result from cache', searchTerm);\n\t              module.save.results(cache.results);\n\t              module.addResults(cache.html);\n\t              module.inject.id(cache.results);\n\t              callback();\n\t            }\n\t            else {\n\t              module.debug('Querying for', searchTerm);\n\t              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\n\t                module.search.local(searchTerm);\n\t                callback();\n\t              }\n\t              else if( module.can.useAPI() ) {\n\t                module.search.remote(searchTerm, callback);\n\t              }\n\t              else {\n\t                module.error(error.source);\n\t                callback();\n\t              }\n\t            }\n\t            settings.onSearchQuery.call(element, searchTerm);\n\t          }\n\t          else {\n\t            module.hideResults();\n\t          }\n\t        },\n\t\n\t        search: {\n\t          local: function(searchTerm) {\n\t            var\n\t              results = module.search.object(searchTerm, settings.content),\n\t              searchHTML\n\t            ;\n\t            module.set.loading();\n\t            module.save.results(results);\n\t            module.debug('Returned local search results', results);\n\t\n\t            searchHTML = module.generateResults({\n\t              results: results\n\t            });\n\t            module.remove.loading();\n\t            module.addResults(searchHTML);\n\t            module.inject.id(results);\n\t            module.write.cache(searchTerm, {\n\t              html    : searchHTML,\n\t              results : results\n\t            });\n\t          },\n\t          remote: function(searchTerm, callback) {\n\t            callback = $.isFunction(callback)\n\t              ? callback\n\t              : function(){}\n\t            ;\n\t            if($module.api('is loading')) {\n\t              $module.api('abort');\n\t            }\n\t            module.setup.api(searchTerm, callback);\n\t            $module\n\t              .api('query')\n\t            ;\n\t          },\n\t          object: function(searchTerm, source, searchFields) {\n\t            var\n\t              results      = [],\n\t              fuzzyResults = [],\n\t              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\$&'),\n\t              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\n\t\n\t              // avoid duplicates when pushing results\n\t              addResult = function(array, result) {\n\t                var\n\t                  notResult      = ($.inArray(result, results) == -1),\n\t                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\n\t                ;\n\t                if(notResult && notFuzzyResult) {\n\t                  array.push(result);\n\t                }\n\t              }\n\t            ;\n\t            source = source || settings.source;\n\t            searchFields = (searchFields !== undefined)\n\t              ? searchFields\n\t              : settings.searchFields\n\t            ;\n\t\n\t            // search fields should be array to loop correctly\n\t            if(!$.isArray(searchFields)) {\n\t              searchFields = [searchFields];\n\t            }\n\t\n\t            // exit conditions if no source\n\t            if(source === undefined || source === false) {\n\t              module.error(error.source);\n\t              return [];\n\t            }\n\t\n\t            // iterate through search fields looking for matches\n\t            $.each(searchFields, function(index, field) {\n\t              $.each(source, function(label, content) {\n\t                var\n\t                  fieldExists = (typeof content[field] == 'string')\n\t                ;\n\t                if(fieldExists) {\n\t                  if( content[field].search(matchRegExp) !== -1) {\n\t                    // content starts with value (first in results)\n\t                    addResult(results, content);\n\t                  }\n\t                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\n\t                    // content fuzzy matches (last in results)\n\t                    addResult(fuzzyResults, content);\n\t                  }\n\t                }\n\t              });\n\t            });\n\t            return $.merge(results, fuzzyResults);\n\t          }\n\t        },\n\t\n\t        fuzzySearch: function(query, term) {\n\t          var\n\t            termLength  = term.length,\n\t            queryLength = query.length\n\t          ;\n\t          if(typeof query !== 'string') {\n\t            return false;\n\t          }\n\t          query = query.toLowerCase();\n\t          term  = term.toLowerCase();\n\t          if(queryLength > termLength) {\n\t            return false;\n\t          }\n\t          if(queryLength === termLength) {\n\t            return (query === term);\n\t          }\n\t          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n\t            var\n\t              queryCharacter = query.charCodeAt(characterIndex)\n\t            ;\n\t            while(nextCharacterIndex < termLength) {\n\t              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n\t                continue search;\n\t              }\n\t            }\n\t            return false;\n\t          }\n\t          return true;\n\t        },\n\t\n\t        parse: {\n\t          response: function(response, searchTerm) {\n\t            var\n\t              searchHTML = module.generateResults(response)\n\t            ;\n\t            module.verbose('Parsing server response', response);\n\t            if(response !== undefined) {\n\t              if(searchTerm !== undefined && response[fields.results] !== undefined) {\n\t                module.addResults(searchHTML);\n\t                module.inject.id(response[fields.results]);\n\t                module.write.cache(searchTerm, {\n\t                  html    : searchHTML,\n\t                  results : response[fields.results]\n\t                });\n\t                module.save.results(response[fields.results]);\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        cancel: {\n\t          query: function() {\n\t            if( module.can.useAPI() ) {\n\t              $module.api('abort');\n\t            }\n\t          }\n\t        },\n\t\n\t        has: {\n\t          minimumCharacters: function() {\n\t            var\n\t              searchTerm    = module.get.value(),\n\t              numCharacters = searchTerm.length\n\t            ;\n\t            return (numCharacters >= settings.minCharacters);\n\t          },\n\t          results: function() {\n\t            if($results.length === 0) {\n\t              return false;\n\t            }\n\t            var\n\t              html = $results.html()\n\t            ;\n\t            return html != '';\n\t          }\n\t        },\n\t\n\t        clear: {\n\t          cache: function(value) {\n\t            var\n\t              cache = $module.data(metadata.cache)\n\t            ;\n\t            if(!value) {\n\t              module.debug('Clearing cache', value);\n\t              $module.removeData(metadata.cache);\n\t            }\n\t            else if(value && cache && cache[value]) {\n\t              module.debug('Removing value from cache', value);\n\t              delete cache[value];\n\t              $module.data(metadata.cache, cache);\n\t            }\n\t          }\n\t        },\n\t\n\t        read: {\n\t          cache: function(name) {\n\t            var\n\t              cache = $module.data(metadata.cache)\n\t            ;\n\t            if(settings.cache) {\n\t              module.verbose('Checking cache for generated html for query', name);\n\t              return (typeof cache == 'object') && (cache[name] !== undefined)\n\t                ? cache[name]\n\t                : false\n\t              ;\n\t            }\n\t            return false;\n\t          }\n\t        },\n\t\n\t        create: {\n\t          id: function(resultIndex, categoryIndex) {\n\t            var\n\t              resultID      = (resultIndex + 1), // not zero indexed\n\t              categoryID    = (categoryIndex + 1),\n\t              firstCharCode,\n\t              letterID,\n\t              id\n\t            ;\n\t            if(categoryIndex !== undefined) {\n\t              // start char code for \"A\"\n\t              letterID = String.fromCharCode(97 + categoryIndex);\n\t              id          = letterID + resultID;\n\t              module.verbose('Creating category result id', id);\n\t            }\n\t            else {\n\t              id = resultID;\n\t              module.verbose('Creating result id', id);\n\t            }\n\t            return id;\n\t          },\n\t          results: function() {\n\t            if($results.length === 0) {\n\t              $results = $('<div />')\n\t                .addClass(className.results)\n\t                .appendTo($module)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        inject: {\n\t          result: function(result, resultIndex, categoryIndex) {\n\t            module.verbose('Injecting result into results');\n\t            var\n\t              $selectedResult = (categoryIndex !== undefined)\n\t                ? $results\n\t                    .children().eq(categoryIndex)\n\t                      .children(selector.result).eq(resultIndex)\n\t                : $results\n\t                    .children(selector.result).eq(resultIndex)\n\t            ;\n\t            module.verbose('Injecting results metadata', $selectedResult);\n\t            $selectedResult\n\t              .data(metadata.result, result)\n\t            ;\n\t          },\n\t          id: function(results) {\n\t            module.debug('Injecting unique ids into results');\n\t            var\n\t              // since results may be object, we must use counters\n\t              categoryIndex = 0,\n\t              resultIndex   = 0\n\t            ;\n\t            if(settings.type === 'category') {\n\t              // iterate through each category result\n\t              $.each(results, function(index, category) {\n\t                resultIndex = 0;\n\t                $.each(category.results, function(index, value) {\n\t                  var\n\t                    result = category.results[index]\n\t                  ;\n\t                  if(result.id === undefined) {\n\t                    result.id = module.create.id(resultIndex, categoryIndex);\n\t                  }\n\t                  module.inject.result(result, resultIndex, categoryIndex);\n\t                  resultIndex++;\n\t                });\n\t                categoryIndex++;\n\t              });\n\t            }\n\t            else {\n\t              // top level\n\t              $.each(results, function(index, value) {\n\t                var\n\t                  result = results[index]\n\t                ;\n\t                if(result.id === undefined) {\n\t                  result.id = module.create.id(resultIndex);\n\t                }\n\t                module.inject.result(result, resultIndex);\n\t                resultIndex++;\n\t              });\n\t            }\n\t            return results;\n\t          }\n\t        },\n\t\n\t        save: {\n\t          results: function(results) {\n\t            module.verbose('Saving current search results to metadata', results);\n\t            $module.data(metadata.results, results);\n\t          }\n\t        },\n\t\n\t        write: {\n\t          cache: function(name, value) {\n\t            var\n\t              cache = ($module.data(metadata.cache) !== undefined)\n\t                ? $module.data(metadata.cache)\n\t                : {}\n\t            ;\n\t            if(settings.cache) {\n\t              module.verbose('Writing generated html to cache', name, value);\n\t              cache[name] = value;\n\t              $module\n\t                .data(metadata.cache, cache)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        addResults: function(html) {\n\t          if( $.isFunction(settings.onResultsAdd) ) {\n\t            if( settings.onResultsAdd.call($results, html) === false ) {\n\t              module.debug('onResultsAdd callback cancelled default action');\n\t              return false;\n\t            }\n\t          }\n\t          if(html) {\n\t            $results\n\t              .html(html)\n\t            ;\n\t            module.refreshResults();\n\t            if(settings.selectFirstResult) {\n\t              module.select.firstResult();\n\t            }\n\t            module.showResults();\n\t          }\n\t          else {\n\t            module.hideResults(function() {\n\t              $results.empty();\n\t            });\n\t          }\n\t        },\n\t\n\t        showResults: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if(resultsDismissed) {\n\t            return;\n\t          }\n\t          if(!module.is.visible() && module.has.results()) {\n\t            if( module.can.transition() ) {\n\t              module.debug('Showing results with css animations');\n\t              $results\n\t                .transition({\n\t                  animation  : settings.transition + ' in',\n\t                  debug      : settings.debug,\n\t                  verbose    : settings.verbose,\n\t                  duration   : settings.duration,\n\t                  onComplete : function() {\n\t                    callback();\n\t                  },\n\t                  queue      : true\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.debug('Showing results with javascript');\n\t              $results\n\t                .stop()\n\t                .fadeIn(settings.duration, settings.easing)\n\t              ;\n\t            }\n\t            settings.onResultsOpen.call($results);\n\t          }\n\t        },\n\t        hideResults: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if( module.is.visible() ) {\n\t            if( module.can.transition() ) {\n\t              module.debug('Hiding results with css animations');\n\t              $results\n\t                .transition({\n\t                  animation  : settings.transition + ' out',\n\t                  debug      : settings.debug,\n\t                  verbose    : settings.verbose,\n\t                  duration   : settings.duration,\n\t                  onComplete : function() {\n\t                    callback();\n\t                  },\n\t                  queue      : true\n\t                })\n\t              ;\n\t            }\n\t            else {\n\t              module.debug('Hiding results with javascript');\n\t              $results\n\t                .stop()\n\t                .fadeOut(settings.duration, settings.easing)\n\t              ;\n\t            }\n\t            settings.onResultsClose.call($results);\n\t          }\n\t        },\n\t\n\t        generateResults: function(response) {\n\t          module.debug('Generating html from response', response);\n\t          var\n\t            template       = settings.templates[settings.type],\n\t            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\n\t            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\n\t            html           = ''\n\t          ;\n\t          if(isProperObject || isProperArray ) {\n\t            if(settings.maxResults > 0) {\n\t              if(isProperObject) {\n\t                if(settings.type == 'standard') {\n\t                  module.error(error.maxResults);\n\t                }\n\t              }\n\t              else {\n\t                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\n\t              }\n\t            }\n\t            if($.isFunction(template)) {\n\t              html = template(response, fields);\n\t            }\n\t            else {\n\t              module.error(error.noTemplate, false);\n\t            }\n\t          }\n\t          else if(settings.showNoResults) {\n\t            html = module.displayMessage(error.noResults, 'empty');\n\t          }\n\t          settings.onResults.call(element, response);\n\t          return html;\n\t        },\n\t\n\t        displayMessage: function(text, type) {\n\t          type = type || 'standard';\n\t          module.debug('Displaying message', text, type);\n\t          module.addResults( settings.templates.message(text, type) );\n\t          return settings.templates.message(text, type);\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            settings[name] = value;\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.search.settings = {\n\t\n\t  name              : 'Search',\n\t  namespace         : 'search',\n\t\n\t  silent            : false,\n\t  debug             : false,\n\t  verbose           : false,\n\t  performance       : true,\n\t\n\t  // template to use (specified in settings.templates)\n\t  type              : 'standard',\n\t\n\t  // minimum characters required to search\n\t  minCharacters     : 1,\n\t\n\t  // whether to select first result after searching automatically\n\t  selectFirstResult : false,\n\t\n\t  // API config\n\t  apiSettings       : false,\n\t\n\t  // object to search\n\t  source            : false,\n\t\n\t  // Whether search should query current term on focus\n\t  searchOnFocus     : true,\n\t\n\t  // fields to search\n\t  searchFields   : [\n\t    'title',\n\t    'description'\n\t  ],\n\t\n\t  // field to display in standard results template\n\t  displayField   : '',\n\t\n\t  // whether to include fuzzy results in local search\n\t  searchFullText : true,\n\t\n\t  // whether to add events to prompt automatically\n\t  automatic      : true,\n\t\n\t  // delay before hiding menu after blur\n\t  hideDelay      : 0,\n\t\n\t  // delay before searching\n\t  searchDelay    : 200,\n\t\n\t  // maximum results returned from local\n\t  maxResults     : 7,\n\t\n\t  // whether to store lookups in local cache\n\t  cache          : true,\n\t\n\t  // whether no results errors should be shown\n\t  showNoResults  : true,\n\t\n\t  // transition settings\n\t  transition     : 'scale',\n\t  duration       : 200,\n\t  easing         : 'easeOutExpo',\n\t\n\t  // callbacks\n\t  onSelect       : false,\n\t  onResultsAdd   : false,\n\t\n\t  onSearchQuery  : function(query){},\n\t  onResults      : function(response){},\n\t\n\t  onResultsOpen  : function(){},\n\t  onResultsClose : function(){},\n\t\n\t  className: {\n\t    animating : 'animating',\n\t    active    : 'active',\n\t    empty     : 'empty',\n\t    focus     : 'focus',\n\t    hidden    : 'hidden',\n\t    loading   : 'loading',\n\t    results   : 'results',\n\t    pressed   : 'down'\n\t  },\n\t\n\t  error : {\n\t    source      : 'Cannot search. No source used, and Semantic API module was not included',\n\t    noResults   : 'Your search returned no results',\n\t    logging     : 'Error in debug logging, exiting.',\n\t    noEndpoint  : 'No search endpoint was specified',\n\t    noTemplate  : 'A valid template name was not specified.',\n\t    serverError : 'There was an issue querying the server.',\n\t    maxResults  : 'Results must be an array to use maxResults setting',\n\t    method      : 'The method you called is not defined.'\n\t  },\n\t\n\t  metadata: {\n\t    cache   : 'cache',\n\t    results : 'results',\n\t    result  : 'result'\n\t  },\n\t\n\t  regExp: {\n\t    escape     : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n\t    beginsWith : '(?:\\s|^)'\n\t  },\n\t\n\t  // maps api response attributes to internal representation\n\t  fields: {\n\t    categories      : 'results',     // array of categories (category view)\n\t    categoryName    : 'name',        // name of category (category view)\n\t    categoryResults : 'results',     // array of results (category view)\n\t    description     : 'description', // result description\n\t    image           : 'image',       // result image\n\t    price           : 'price',       // result price\n\t    results         : 'results',     // array of results (standard)\n\t    title           : 'title',       // result title\n\t    url             : 'url',         // result url\n\t    action          : 'action',      // \"view more\" object name\n\t    actionText      : 'text',        // \"view more\" text\n\t    actionURL       : 'url'          // \"view more\" url\n\t  },\n\t\n\t  selector : {\n\t    prompt       : '.prompt',\n\t    searchButton : '.search.button',\n\t    results      : '.results',\n\t    message      : '.results > .message',\n\t    category     : '.category',\n\t    result       : '.result',\n\t    title        : '.title, .name'\n\t  },\n\t\n\t  templates: {\n\t    escape: function(string) {\n\t      var\n\t        badChars     = /[&<>\"'`]/g,\n\t        shouldEscape = /[&<>\"'`]/,\n\t        escape       = {\n\t          \"&\": \"&amp;\",\n\t          \"<\": \"&lt;\",\n\t          \">\": \"&gt;\",\n\t          '\"': \"&quot;\",\n\t          \"'\": \"&#x27;\",\n\t          \"`\": \"&#x60;\"\n\t        },\n\t        escapedChar  = function(chr) {\n\t          return escape[chr];\n\t        }\n\t      ;\n\t      if(shouldEscape.test(string)) {\n\t        return string.replace(badChars, escapedChar);\n\t      }\n\t      return string;\n\t    },\n\t    message: function(message, type) {\n\t      var\n\t        html = ''\n\t      ;\n\t      if(message !== undefined && type !== undefined) {\n\t        html +=  ''\n\t          + '<div class=\"message ' + type + '\">'\n\t        ;\n\t        // message type\n\t        if(type == 'empty') {\n\t          html += ''\n\t            + '<div class=\"header\">No Results</div class=\"header\">'\n\t            + '<div class=\"description\">' + message + '</div class=\"description\">'\n\t          ;\n\t        }\n\t        else {\n\t          html += ' <div class=\"description\">' + message + '</div>';\n\t        }\n\t        html += '</div>';\n\t      }\n\t      return html;\n\t    },\n\t    category: function(response, fields) {\n\t      var\n\t        html = '',\n\t        escape = $.fn.search.settings.templates.escape\n\t      ;\n\t      if(response[fields.categoryResults] !== undefined) {\n\t\n\t        // each category\n\t        $.each(response[fields.categoryResults], function(index, category) {\n\t          if(category[fields.results] !== undefined && category.results.length > 0) {\n\t\n\t            html  += '<div class=\"category\">';\n\t\n\t            if(category[fields.categoryName] !== undefined) {\n\t              html += '<div class=\"name\">' + category[fields.categoryName] + '</div>';\n\t            }\n\t\n\t            // each item inside category\n\t            $.each(category.results, function(index, result) {\n\t              if(result[fields.url]) {\n\t                html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n\t              }\n\t              else {\n\t                html  += '<a class=\"result\">';\n\t              }\n\t              if(result[fields.image] !== undefined) {\n\t                html += ''\n\t                  + '<div class=\"image\">'\n\t                  + ' <img src=\"' + result[fields.image] + '\">'\n\t                  + '</div>'\n\t                ;\n\t              }\n\t              html += '<div class=\"content\">';\n\t              if(result[fields.price] !== undefined) {\n\t                html += '<div class=\"price\">' + result[fields.price] + '</div>';\n\t              }\n\t              if(result[fields.title] !== undefined) {\n\t                html += '<div class=\"title\">' + result[fields.title] + '</div>';\n\t              }\n\t              if(result[fields.description] !== undefined) {\n\t                html += '<div class=\"description\">' + result[fields.description] + '</div>';\n\t              }\n\t              html  += ''\n\t                + '</div>'\n\t              ;\n\t              html += '</a>';\n\t            });\n\t            html  += ''\n\t              + '</div>'\n\t            ;\n\t          }\n\t        });\n\t        if(response[fields.action]) {\n\t          html += ''\n\t          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n\t          +   response[fields.action][fields.actionText]\n\t          + '</a>';\n\t        }\n\t        return html;\n\t      }\n\t      return false;\n\t    },\n\t    standard: function(response, fields) {\n\t      var\n\t        html = ''\n\t      ;\n\t      if(response[fields.results] !== undefined) {\n\t\n\t        // each result\n\t        $.each(response[fields.results], function(index, result) {\n\t          if(result[fields.url]) {\n\t            html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n\t          }\n\t          else {\n\t            html  += '<a class=\"result\">';\n\t          }\n\t          if(result[fields.image] !== undefined) {\n\t            html += ''\n\t              + '<div class=\"image\">'\n\t              + ' <img src=\"' + result[fields.image] + '\">'\n\t              + '</div>'\n\t            ;\n\t          }\n\t          html += '<div class=\"content\">';\n\t          if(result[fields.price] !== undefined) {\n\t            html += '<div class=\"price\">' + result[fields.price] + '</div>';\n\t          }\n\t          if(result[fields.title] !== undefined) {\n\t            html += '<div class=\"title\">' + result[fields.title] + '</div>';\n\t          }\n\t          if(result[fields.description] !== undefined) {\n\t            html += '<div class=\"description\">' + result[fields.description] + '</div>';\n\t          }\n\t          html  += ''\n\t            + '</div>'\n\t          ;\n\t          html += '</a>';\n\t        });\n\t\n\t        if(response[fields.action]) {\n\t          html += ''\n\t          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n\t          +   response[fields.action][fields.actionText]\n\t          + '</a>';\n\t        }\n\t        return html;\n\t      }\n\t      return false;\n\t    }\n\t  }\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Shape\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.shape = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t    $body           = $('body'),\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    requestAnimationFrame = window.requestAnimationFrame\n\t      || window.mozRequestAnimationFrame\n\t      || window.webkitRequestAnimationFrame\n\t      || window.msRequestAnimationFrame\n\t      || function(callback) { setTimeout(callback, 0); },\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        moduleSelector = $allModules.selector || '',\n\t        settings       = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.shape.settings, parameters)\n\t          : $.extend({}, $.fn.shape.settings),\n\t\n\t        // internal aliases\n\t        namespace     = settings.namespace,\n\t        selector      = settings.selector,\n\t        error         = settings.error,\n\t        className     = settings.className,\n\t\n\t        // define namespaces for modules\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        // selector cache\n\t        $module       = $(this),\n\t        $sides        = $module.find(selector.sides),\n\t        $side         = $module.find(selector.side),\n\t\n\t        // private variables\n\t        nextIndex = false,\n\t        $activeSide,\n\t        $nextSide,\n\t\n\t        // standard module\n\t        element       = this,\n\t        instance      = $module.data(moduleNamespace),\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing module for', element);\n\t          module.set.defaultSide();\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, instance)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module for', element);\n\t          $module\n\t            .removeData(moduleNamespace)\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          module.verbose('Refreshing selector cache for', element);\n\t          $module = $(element);\n\t          $sides  = $(this).find(selector.shape);\n\t          $side   = $(this).find(selector.side);\n\t        },\n\t\n\t        repaint: function() {\n\t          module.verbose('Forcing repaint event');\n\t          var\n\t            shape          = $sides[0] || document.createElement('div'),\n\t            fakeAssignment = shape.offsetWidth\n\t          ;\n\t        },\n\t\n\t        animate: function(propertyObject, callback) {\n\t          module.verbose('Animating box with properties', propertyObject);\n\t          callback = callback || function(event) {\n\t            module.verbose('Executing animation callback');\n\t            if(event !== undefined) {\n\t              event.stopPropagation();\n\t            }\n\t            module.reset();\n\t            module.set.active();\n\t          };\n\t          settings.beforeChange.call($nextSide[0]);\n\t          if(module.get.transitionEvent()) {\n\t            module.verbose('Starting CSS animation');\n\t            $module\n\t              .addClass(className.animating)\n\t            ;\n\t            $sides\n\t              .css(propertyObject)\n\t              .one(module.get.transitionEvent(), callback)\n\t            ;\n\t            module.set.duration(settings.duration);\n\t            requestAnimationFrame(function() {\n\t              $module\n\t                .addClass(className.animating)\n\t              ;\n\t              $activeSide\n\t                .addClass(className.hidden)\n\t              ;\n\t            });\n\t          }\n\t          else {\n\t            callback();\n\t          }\n\t        },\n\t\n\t        queue: function(method) {\n\t          module.debug('Queueing animation of', method);\n\t          $sides\n\t            .one(module.get.transitionEvent(), function() {\n\t              module.debug('Executing queued animation');\n\t              setTimeout(function(){\n\t                $module.shape(method);\n\t              }, 0);\n\t            })\n\t          ;\n\t        },\n\t\n\t        reset: function() {\n\t          module.verbose('Animating states reset');\n\t          $module\n\t            .removeClass(className.animating)\n\t            .attr('style', '')\n\t            .removeAttr('style')\n\t          ;\n\t          // removeAttr style does not consistently work in safari\n\t          $sides\n\t            .attr('style', '')\n\t            .removeAttr('style')\n\t          ;\n\t          $side\n\t            .attr('style', '')\n\t            .removeAttr('style')\n\t            .removeClass(className.hidden)\n\t          ;\n\t          $nextSide\n\t            .removeClass(className.animating)\n\t            .attr('style', '')\n\t            .removeAttr('style')\n\t          ;\n\t        },\n\t\n\t        is: {\n\t          complete: function() {\n\t            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\n\t          },\n\t          animating: function() {\n\t            return $module.hasClass(className.animating);\n\t          }\n\t        },\n\t\n\t        set: {\n\t\n\t          defaultSide: function() {\n\t            $activeSide = $module.find('.' + settings.className.active);\n\t            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\n\t              ? $activeSide.next(selector.side)\n\t              : $module.find(selector.side).first()\n\t            ;\n\t            nextIndex = false;\n\t            module.verbose('Active side set to', $activeSide);\n\t            module.verbose('Next side set to', $nextSide);\n\t          },\n\t\n\t          duration: function(duration) {\n\t            duration = duration || settings.duration;\n\t            duration = (typeof duration == 'number')\n\t              ? duration + 'ms'\n\t              : duration\n\t            ;\n\t            module.verbose('Setting animation duration', duration);\n\t            if(settings.duration || settings.duration === 0) {\n\t              $sides.add($side)\n\t                .css({\n\t                  '-webkit-transition-duration': duration,\n\t                  '-moz-transition-duration': duration,\n\t                  '-ms-transition-duration': duration,\n\t                  '-o-transition-duration': duration,\n\t                  'transition-duration': duration\n\t                })\n\t              ;\n\t            }\n\t          },\n\t\n\t          currentStageSize: function() {\n\t            var\n\t              $activeSide = $module.find('.' + settings.className.active),\n\t              width       = $activeSide.outerWidth(true),\n\t              height      = $activeSide.outerHeight(true)\n\t            ;\n\t            $module\n\t              .css({\n\t                width: width,\n\t                height: height\n\t              })\n\t            ;\n\t          },\n\t\n\t          stageSize: function() {\n\t            var\n\t              $clone      = $module.clone().addClass(className.loading),\n\t              $activeSide = $clone.find('.' + settings.className.active),\n\t              $nextSide   = (nextIndex)\n\t                ? $clone.find(selector.side).eq(nextIndex)\n\t                : ( $activeSide.next(selector.side).length > 0 )\n\t                  ? $activeSide.next(selector.side)\n\t                  : $clone.find(selector.side).first(),\n\t              newWidth    = (settings.width == 'next')\n\t                ? $nextSide.outerWidth(true)\n\t                : (settings.width == 'initial')\n\t                  ? $module.width()\n\t                  : settings.width,\n\t              newHeight    = (settings.height == 'next')\n\t                ? $nextSide.outerHeight(true)\n\t                : (settings.height == 'initial')\n\t                  ? $module.height()\n\t                  : settings.height\n\t            ;\n\t            $activeSide.removeClass(className.active);\n\t            $nextSide.addClass(className.active);\n\t            $clone.insertAfter($module);\n\t            $clone.remove();\n\t            if(settings.width != 'auto') {\n\t              $module.css('width', newWidth + settings.jitter);\n\t              module.verbose('Specifying width during animation', newWidth);\n\t            }\n\t            if(settings.height != 'auto') {\n\t              $module.css('height', newHeight + settings.jitter);\n\t              module.verbose('Specifying height during animation', newHeight);\n\t            }\n\t          },\n\t\n\t          nextSide: function(selector) {\n\t            nextIndex = selector;\n\t            $nextSide = $side.filter(selector);\n\t            nextIndex = $side.index($nextSide);\n\t            if($nextSide.length === 0) {\n\t              module.set.defaultSide();\n\t              module.error(error.side);\n\t            }\n\t            module.verbose('Next side manually set to', $nextSide);\n\t          },\n\t\n\t          active: function() {\n\t            module.verbose('Setting new side to active', $nextSide);\n\t            $side\n\t              .removeClass(className.active)\n\t            ;\n\t            $nextSide\n\t              .addClass(className.active)\n\t            ;\n\t            settings.onChange.call($nextSide[0]);\n\t            module.set.defaultSide();\n\t          }\n\t        },\n\t\n\t        flip: {\n\t\n\t          up: function() {\n\t            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n\t              module.debug('Side already visible', $nextSide);\n\t              return;\n\t            }\n\t            if( !module.is.animating()) {\n\t              module.debug('Flipping up', $nextSide);\n\t              var\n\t                transform = module.get.transform.up()\n\t              ;\n\t              module.set.stageSize();\n\t              module.stage.above();\n\t              module.animate(transform);\n\t            }\n\t            else {\n\t              module.queue('flip up');\n\t            }\n\t          },\n\t\n\t          down: function() {\n\t            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n\t              module.debug('Side already visible', $nextSide);\n\t              return;\n\t            }\n\t            if( !module.is.animating()) {\n\t              module.debug('Flipping down', $nextSide);\n\t              var\n\t                transform = module.get.transform.down()\n\t              ;\n\t              module.set.stageSize();\n\t              module.stage.below();\n\t              module.animate(transform);\n\t            }\n\t            else {\n\t              module.queue('flip down');\n\t            }\n\t          },\n\t\n\t          left: function() {\n\t            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n\t              module.debug('Side already visible', $nextSide);\n\t              return;\n\t            }\n\t            if( !module.is.animating()) {\n\t              module.debug('Flipping left', $nextSide);\n\t              var\n\t                transform = module.get.transform.left()\n\t              ;\n\t              module.set.stageSize();\n\t              module.stage.left();\n\t              module.animate(transform);\n\t            }\n\t            else {\n\t              module.queue('flip left');\n\t            }\n\t          },\n\t\n\t          right: function() {\n\t            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n\t              module.debug('Side already visible', $nextSide);\n\t              return;\n\t            }\n\t            if( !module.is.animating()) {\n\t              module.debug('Flipping right', $nextSide);\n\t              var\n\t                transform = module.get.transform.right()\n\t              ;\n\t              module.set.stageSize();\n\t              module.stage.right();\n\t              module.animate(transform);\n\t            }\n\t            else {\n\t              module.queue('flip right');\n\t            }\n\t          },\n\t\n\t          over: function() {\n\t            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n\t              module.debug('Side already visible', $nextSide);\n\t              return;\n\t            }\n\t            if( !module.is.animating()) {\n\t              module.debug('Flipping over', $nextSide);\n\t              module.set.stageSize();\n\t              module.stage.behind();\n\t              module.animate(module.get.transform.over() );\n\t            }\n\t            else {\n\t              module.queue('flip over');\n\t            }\n\t          },\n\t\n\t          back: function() {\n\t            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n\t              module.debug('Side already visible', $nextSide);\n\t              return;\n\t            }\n\t            if( !module.is.animating()) {\n\t              module.debug('Flipping back', $nextSide);\n\t              module.set.stageSize();\n\t              module.stage.behind();\n\t              module.animate(module.get.transform.back() );\n\t            }\n\t            else {\n\t              module.queue('flip back');\n\t            }\n\t          }\n\t\n\t        },\n\t\n\t        get: {\n\t\n\t          transform: {\n\t            up: function() {\n\t              var\n\t                translate = {\n\t                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n\t                  z: -($activeSide.outerHeight(true) / 2)\n\t                }\n\t              ;\n\t              return {\n\t                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\n\t              };\n\t            },\n\t\n\t            down: function() {\n\t              var\n\t                translate = {\n\t                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n\t                  z: -($activeSide.outerHeight(true) / 2)\n\t                }\n\t              ;\n\t              return {\n\t                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\n\t              };\n\t            },\n\t\n\t            left: function() {\n\t              var\n\t                translate = {\n\t                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n\t                  z : -($activeSide.outerWidth(true) / 2)\n\t                }\n\t              ;\n\t              return {\n\t                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\n\t              };\n\t            },\n\t\n\t            right: function() {\n\t              var\n\t                translate = {\n\t                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n\t                  z : -($activeSide.outerWidth(true) / 2)\n\t                }\n\t              ;\n\t              return {\n\t                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\n\t              };\n\t            },\n\t\n\t            over: function() {\n\t              var\n\t                translate = {\n\t                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n\t                }\n\t              ;\n\t              return {\n\t                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\n\t              };\n\t            },\n\t\n\t            back: function() {\n\t              var\n\t                translate = {\n\t                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n\t                }\n\t              ;\n\t              return {\n\t                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\n\t              };\n\t            }\n\t          },\n\t\n\t          transitionEvent: function() {\n\t            var\n\t              element     = document.createElement('element'),\n\t              transitions = {\n\t                'transition'       :'transitionend',\n\t                'OTransition'      :'oTransitionEnd',\n\t                'MozTransition'    :'transitionend',\n\t                'WebkitTransition' :'webkitTransitionEnd'\n\t              },\n\t              transition\n\t            ;\n\t            for(transition in transitions){\n\t              if( element.style[transition] !== undefined ){\n\t                return transitions[transition];\n\t              }\n\t            }\n\t          },\n\t\n\t          nextSide: function() {\n\t            return ( $activeSide.next(selector.side).length > 0 )\n\t              ? $activeSide.next(selector.side)\n\t              : $module.find(selector.side).first()\n\t            ;\n\t          }\n\t\n\t        },\n\t\n\t        stage: {\n\t\n\t          above: function() {\n\t            var\n\t              box = {\n\t                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n\t                depth  : {\n\t                  active : ($nextSide.outerHeight(true) / 2),\n\t                  next   : ($activeSide.outerHeight(true) / 2)\n\t                }\n\t              }\n\t            ;\n\t            module.verbose('Setting the initial animation position as above', $nextSide, box);\n\t            $sides\n\t              .css({\n\t                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $activeSide\n\t              .css({\n\t                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $nextSide\n\t              .addClass(className.animating)\n\t              .css({\n\t                'top'       : box.origin + 'px',\n\t                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\n\t              })\n\t            ;\n\t          },\n\t\n\t          below: function() {\n\t            var\n\t              box = {\n\t                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n\t                depth  : {\n\t                  active : ($nextSide.outerHeight(true) / 2),\n\t                  next   : ($activeSide.outerHeight(true) / 2)\n\t                }\n\t              }\n\t            ;\n\t            module.verbose('Setting the initial animation position as below', $nextSide, box);\n\t            $sides\n\t              .css({\n\t                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $activeSide\n\t              .css({\n\t                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $nextSide\n\t              .addClass(className.animating)\n\t              .css({\n\t                'top'       : box.origin + 'px',\n\t                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\n\t              })\n\t            ;\n\t          },\n\t\n\t          left: function() {\n\t            var\n\t              height = {\n\t                active : $activeSide.outerWidth(true),\n\t                next   : $nextSide.outerWidth(true)\n\t              },\n\t              box = {\n\t                origin : ( ( height.active - height.next ) / 2),\n\t                depth  : {\n\t                  active : (height.next / 2),\n\t                  next   : (height.active / 2)\n\t                }\n\t              }\n\t            ;\n\t            module.verbose('Setting the initial animation position as left', $nextSide, box);\n\t            $sides\n\t              .css({\n\t                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $activeSide\n\t              .css({\n\t                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $nextSide\n\t              .addClass(className.animating)\n\t              .css({\n\t                'left'      : box.origin + 'px',\n\t                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\n\t              })\n\t            ;\n\t          },\n\t\n\t          right: function() {\n\t            var\n\t              height = {\n\t                active : $activeSide.outerWidth(true),\n\t                next   : $nextSide.outerWidth(true)\n\t              },\n\t              box = {\n\t                origin : ( ( height.active - height.next ) / 2),\n\t                depth  : {\n\t                  active : (height.next / 2),\n\t                  next   : (height.active / 2)\n\t                }\n\t              }\n\t            ;\n\t            module.verbose('Setting the initial animation position as left', $nextSide, box);\n\t            $sides\n\t              .css({\n\t                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $activeSide\n\t              .css({\n\t                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n\t              })\n\t            ;\n\t            $nextSide\n\t              .addClass(className.animating)\n\t              .css({\n\t                'left'      : box.origin + 'px',\n\t                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\n\t              })\n\t            ;\n\t          },\n\t\n\t          behind: function() {\n\t            var\n\t              height = {\n\t                active : $activeSide.outerWidth(true),\n\t                next   : $nextSide.outerWidth(true)\n\t              },\n\t              box = {\n\t                origin : ( ( height.active - height.next ) / 2),\n\t                depth  : {\n\t                  active : (height.next / 2),\n\t                  next   : (height.active / 2)\n\t                }\n\t              }\n\t            ;\n\t            module.verbose('Setting the initial animation position as behind', $nextSide, box);\n\t            $activeSide\n\t              .css({\n\t                'transform' : 'rotateY(0deg)'\n\t              })\n\t            ;\n\t            $nextSide\n\t              .addClass(className.animating)\n\t              .css({\n\t                'left'      : box.origin + 'px',\n\t                'transform' : 'rotateY(-180deg)'\n\t              })\n\t            ;\n\t          }\n\t        },\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.shape.settings = {\n\t\n\t  // module info\n\t  name : 'Shape',\n\t\n\t  // hide all debug content\n\t  silent     : false,\n\t\n\t  // debug content outputted to console\n\t  debug      : false,\n\t\n\t  // verbose debug output\n\t  verbose    : false,\n\t\n\t  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\n\t  jitter     : 0,\n\t\n\t  // performance data output\n\t  performance: true,\n\t\n\t  // event namespace\n\t  namespace  : 'shape',\n\t\n\t  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\n\t  width: 'initial',\n\t\n\t  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\n\t  height: 'initial',\n\t\n\t  // callback occurs on side change\n\t  beforeChange : function() {},\n\t  onChange     : function() {},\n\t\n\t  // allow animation to same side\n\t  allowRepeats: false,\n\t\n\t  // animation duration\n\t  duration   : false,\n\t\n\t  // possible errors\n\t  error: {\n\t    side   : 'You tried to switch to a side that does not exist.',\n\t    method : 'The method you called is not defined'\n\t  },\n\t\n\t  // classnames used\n\t  className   : {\n\t    animating : 'animating',\n\t    hidden    : 'hidden',\n\t    loading   : 'loading',\n\t    active    : 'active'\n\t  },\n\t\n\t  // selectors used\n\t  selector    : {\n\t    sides : '.sides',\n\t    side  : '.side'\n\t  }\n\t\n\t};\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Sidebar\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.sidebar = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t    $window         = $(window),\n\t    $document       = $(document),\n\t    $html           = $('html'),\n\t    $head           = $('head'),\n\t\n\t    moduleSelector  = $allModules.selector || '',\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    requestAnimationFrame = window.requestAnimationFrame\n\t      || window.mozRequestAnimationFrame\n\t      || window.webkitRequestAnimationFrame\n\t      || window.msRequestAnimationFrame\n\t      || function(callback) { setTimeout(callback, 0); },\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\n\t          : $.extend({}, $.fn.sidebar.settings),\n\t\n\t        selector        = settings.selector,\n\t        className       = settings.className,\n\t        namespace       = settings.namespace,\n\t        regExp          = settings.regExp,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $module         = $(this),\n\t        $context        = $(settings.context),\n\t\n\t        $sidebars       = $module.children(selector.sidebar),\n\t        $fixed          = $context.children(selector.fixed),\n\t        $pusher         = $context.children(selector.pusher),\n\t        $style,\n\t\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        elementNamespace,\n\t        id,\n\t        currentScroll,\n\t        transitionEvent,\n\t\n\t        module\n\t      ;\n\t\n\t      module      = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing sidebar', parameters);\n\t\n\t          module.create.id();\n\t\n\t          transitionEvent = module.get.transitionEvent();\n\t\n\t          if(module.is.ios()) {\n\t            module.set.ios();\n\t          }\n\t\n\t          // avoids locking rendering if initialized in onReady\n\t          if(settings.delaySetup) {\n\t            requestAnimationFrame(module.setup.layout);\n\t          }\n\t          else {\n\t            module.setup.layout();\n\t          }\n\t\n\t          requestAnimationFrame(function() {\n\t            module.setup.cache();\n\t          });\n\t\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        create: {\n\t          id: function() {\n\t            id = (Math.random().toString(16) + '000000000').substr(2,8);\n\t            elementNamespace = '.' + id;\n\t            module.verbose('Creating unique id for element', id);\n\t          }\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module for', $module);\n\t          $module\n\t            .off(eventNamespace)\n\t            .removeData(moduleNamespace)\n\t          ;\n\t          if(module.is.ios()) {\n\t            module.remove.ios();\n\t          }\n\t          // bound by uuid\n\t          $context.off(elementNamespace);\n\t          $window.off(elementNamespace);\n\t          $document.off(elementNamespace);\n\t        },\n\t\n\t        event: {\n\t          clickaway: function(event) {\n\t            var\n\t              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\n\t              clickedContext  = ($context.is(event.target))\n\t            ;\n\t            if(clickedInPusher) {\n\t              module.verbose('User clicked on dimmed page');\n\t              module.hide();\n\t            }\n\t            if(clickedContext) {\n\t              module.verbose('User clicked on dimmable context (scaled out page)');\n\t              module.hide();\n\t            }\n\t          },\n\t          touch: function(event) {\n\t            //event.stopPropagation();\n\t          },\n\t          containScroll: function(event) {\n\t            if(element.scrollTop <= 0)  {\n\t              element.scrollTop = 1;\n\t            }\n\t            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\n\t              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\n\t            }\n\t          },\n\t          scroll: function(event) {\n\t            if( $(event.target).closest(selector.sidebar).length === 0 ) {\n\t              event.preventDefault();\n\t            }\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          clickaway: function() {\n\t            module.verbose('Adding clickaway events to context', $context);\n\t            if(settings.closable) {\n\t              $context\n\t                .on('click'    + elementNamespace, module.event.clickaway)\n\t                .on('touchend' + elementNamespace, module.event.clickaway)\n\t              ;\n\t            }\n\t          },\n\t          scrollLock: function() {\n\t            if(settings.scrollLock) {\n\t              module.debug('Disabling page scroll');\n\t              $window\n\t                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\n\t              ;\n\t            }\n\t            module.verbose('Adding events to contain sidebar scroll');\n\t            $document\n\t              .on('touchmove' + elementNamespace, module.event.touch)\n\t            ;\n\t            $module\n\t              .on('scroll' + eventNamespace, module.event.containScroll)\n\t            ;\n\t          }\n\t        },\n\t        unbind: {\n\t          clickaway: function() {\n\t            module.verbose('Removing clickaway events from context', $context);\n\t            $context.off(elementNamespace);\n\t          },\n\t          scrollLock: function() {\n\t            module.verbose('Removing scroll lock from page');\n\t            $document.off(elementNamespace);\n\t            $window.off(elementNamespace);\n\t            $module.off('scroll' + eventNamespace);\n\t          }\n\t        },\n\t\n\t        add: {\n\t          inlineCSS: function() {\n\t            var\n\t              width     = module.cache.width  || $module.outerWidth(),\n\t              height    = module.cache.height || $module.outerHeight(),\n\t              isRTL     = module.is.rtl(),\n\t              direction = module.get.direction(),\n\t              distance  = {\n\t                left   : width,\n\t                right  : -width,\n\t                top    : height,\n\t                bottom : -height\n\t              },\n\t              style\n\t            ;\n\t\n\t            if(isRTL){\n\t              module.verbose('RTL detected, flipping widths');\n\t              distance.left = -width;\n\t              distance.right = width;\n\t            }\n\t\n\t            style  = '<style>';\n\t\n\t            if(direction === 'left' || direction === 'right') {\n\t              module.debug('Adding CSS rules for animation distance', width);\n\t              style  += ''\n\t                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n\t                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n\t                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n\t                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n\t                + ' }'\n\t              ;\n\t            }\n\t            else if(direction === 'top' || direction == 'bottom') {\n\t              style  += ''\n\t                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n\t                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n\t                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n\t                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n\t                + ' }'\n\t              ;\n\t            }\n\t\n\t            /* IE is only browser not to create context with transforms */\n\t            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\n\t            if( module.is.ie() ) {\n\t              if(direction === 'left' || direction === 'right') {\n\t                module.debug('Adding CSS rules for animation distance', width);\n\t                style  += ''\n\t                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n\t                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n\t                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n\t                  + ' }'\n\t                ;\n\t              }\n\t              else if(direction === 'top' || direction == 'bottom') {\n\t                style  += ''\n\t                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n\t                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n\t                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n\t                  + ' }'\n\t                ;\n\t              }\n\t              /* opposite sides visible forces content overlay */\n\t              style += ''\n\t                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\n\t                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\n\t                + '   -webkit-transform: translate3d(0px, 0, 0);'\n\t                + '           transform: translate3d(0px, 0, 0);'\n\t                + ' }'\n\t              ;\n\t            }\n\t            style += '</style>';\n\t            $style = $(style)\n\t              .appendTo($head)\n\t            ;\n\t            module.debug('Adding sizing css to head', $style);\n\t          }\n\t        },\n\t\n\t        refresh: function() {\n\t          module.verbose('Refreshing selector cache');\n\t          $context  = $(settings.context);\n\t          $sidebars = $context.children(selector.sidebar);\n\t          $pusher   = $context.children(selector.pusher);\n\t          $fixed    = $context.children(selector.fixed);\n\t          module.clear.cache();\n\t        },\n\t\n\t        refreshSidebars: function() {\n\t          module.verbose('Refreshing other sidebars');\n\t          $sidebars = $context.children(selector.sidebar);\n\t        },\n\t\n\t        repaint: function() {\n\t          module.verbose('Forcing repaint event');\n\t          element.style.display = 'none';\n\t          var ignored = element.offsetHeight;\n\t          element.scrollTop = element.scrollTop;\n\t          element.style.display = '';\n\t        },\n\t\n\t        setup: {\n\t          cache: function() {\n\t            module.cache = {\n\t              width  : $module.outerWidth(),\n\t              height : $module.outerHeight(),\n\t              rtl    : ($module.css('direction') == 'rtl')\n\t            };\n\t          },\n\t          layout: function() {\n\t            if( $context.children(selector.pusher).length === 0 ) {\n\t              module.debug('Adding wrapper element for sidebar');\n\t              module.error(error.pusher);\n\t              $pusher = $('<div class=\"pusher\" />');\n\t              $context\n\t                .children()\n\t                  .not(selector.omitted)\n\t                  .not($sidebars)\n\t                  .wrapAll($pusher)\n\t              ;\n\t              module.refresh();\n\t            }\n\t            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\n\t              module.debug('Moved sidebar to correct parent element');\n\t              module.error(error.movedSidebar, element);\n\t              $module.detach().prependTo($context);\n\t              module.refresh();\n\t            }\n\t            module.clear.cache();\n\t            module.set.pushable();\n\t            module.set.direction();\n\t          }\n\t        },\n\t\n\t        attachEvents: function(selector, event) {\n\t          var\n\t            $toggle = $(selector)\n\t          ;\n\t          event = $.isFunction(module[event])\n\t            ? module[event]\n\t            : module.toggle\n\t          ;\n\t          if($toggle.length > 0) {\n\t            module.debug('Attaching sidebar events to element', selector, event);\n\t            $toggle\n\t              .on('click' + eventNamespace, event)\n\t            ;\n\t          }\n\t          else {\n\t            module.error(error.notFound, selector);\n\t          }\n\t        },\n\t\n\t        show: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if(module.is.hidden()) {\n\t            module.refreshSidebars();\n\t            if(settings.overlay)  {\n\t              module.error(error.overlay);\n\t              settings.transition = 'overlay';\n\t            }\n\t            module.refresh();\n\t            if(module.othersActive()) {\n\t              module.debug('Other sidebars currently visible');\n\t              if(settings.exclusive) {\n\t                // if not overlay queue animation after hide\n\t                if(settings.transition != 'overlay') {\n\t                  module.hideOthers(module.show);\n\t                  return;\n\t                }\n\t                else {\n\t                  module.hideOthers();\n\t                }\n\t              }\n\t              else {\n\t                settings.transition = 'overlay';\n\t              }\n\t            }\n\t            module.pushPage(function() {\n\t              callback.call(element);\n\t              settings.onShow.call(element);\n\t            });\n\t            settings.onChange.call(element);\n\t            settings.onVisible.call(element);\n\t          }\n\t          else {\n\t            module.debug('Sidebar is already visible');\n\t          }\n\t        },\n\t\n\t        hide: function(callback) {\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if(module.is.visible() || module.is.animating()) {\n\t            module.debug('Hiding sidebar', callback);\n\t            module.refreshSidebars();\n\t            module.pullPage(function() {\n\t              callback.call(element);\n\t              settings.onHidden.call(element);\n\t            });\n\t            settings.onChange.call(element);\n\t            settings.onHide.call(element);\n\t          }\n\t        },\n\t\n\t        othersAnimating: function() {\n\t          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\n\t        },\n\t        othersVisible: function() {\n\t          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\n\t        },\n\t        othersActive: function() {\n\t          return(module.othersVisible() || module.othersAnimating());\n\t        },\n\t\n\t        hideOthers: function(callback) {\n\t          var\n\t            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\n\t            sidebarCount   = $otherSidebars.length,\n\t            callbackCount  = 0\n\t          ;\n\t          callback = callback || function(){};\n\t          $otherSidebars\n\t            .sidebar('hide', function() {\n\t              callbackCount++;\n\t              if(callbackCount == sidebarCount) {\n\t                callback();\n\t              }\n\t            })\n\t          ;\n\t        },\n\t\n\t        toggle: function() {\n\t          module.verbose('Determining toggled direction');\n\t          if(module.is.hidden()) {\n\t            module.show();\n\t          }\n\t          else {\n\t            module.hide();\n\t          }\n\t        },\n\t\n\t        pushPage: function(callback) {\n\t          var\n\t            transition = module.get.transition(),\n\t            $transition = (transition === 'overlay' || module.othersActive())\n\t              ? $module\n\t              : $pusher,\n\t            animate,\n\t            dim,\n\t            transitionEnd\n\t          ;\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          if(settings.transition == 'scale down') {\n\t            module.scrollToTop();\n\t          }\n\t          module.set.transition(transition);\n\t          module.repaint();\n\t          animate = function() {\n\t            module.bind.clickaway();\n\t            module.add.inlineCSS();\n\t            module.set.animating();\n\t            module.set.visible();\n\t          };\n\t          dim = function() {\n\t            module.set.dimmed();\n\t          };\n\t          transitionEnd = function(event) {\n\t            if( event.target == $transition[0] ) {\n\t              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n\t              module.remove.animating();\n\t              module.bind.scrollLock();\n\t              callback.call(element);\n\t            }\n\t          };\n\t          $transition.off(transitionEvent + elementNamespace);\n\t          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n\t          requestAnimationFrame(animate);\n\t          if(settings.dimPage && !module.othersVisible()) {\n\t            requestAnimationFrame(dim);\n\t          }\n\t        },\n\t\n\t        pullPage: function(callback) {\n\t          var\n\t            transition = module.get.transition(),\n\t            $transition = (transition == 'overlay' || module.othersActive())\n\t              ? $module\n\t              : $pusher,\n\t            animate,\n\t            transitionEnd\n\t          ;\n\t          callback = $.isFunction(callback)\n\t            ? callback\n\t            : function(){}\n\t          ;\n\t          module.verbose('Removing context push state', module.get.direction());\n\t\n\t          module.unbind.clickaway();\n\t          module.unbind.scrollLock();\n\t\n\t          animate = function() {\n\t            module.set.transition(transition);\n\t            module.set.animating();\n\t            module.remove.visible();\n\t            if(settings.dimPage && !module.othersVisible()) {\n\t              $pusher.removeClass(className.dimmed);\n\t            }\n\t          };\n\t          transitionEnd = function(event) {\n\t            if( event.target == $transition[0] ) {\n\t              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n\t              module.remove.animating();\n\t              module.remove.transition();\n\t              module.remove.inlineCSS();\n\t              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\n\t                module.scrollBack();\n\t              }\n\t              callback.call(element);\n\t            }\n\t          };\n\t          $transition.off(transitionEvent + elementNamespace);\n\t          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n\t          requestAnimationFrame(animate);\n\t        },\n\t\n\t        scrollToTop: function() {\n\t          module.verbose('Scrolling to top of page to avoid animation issues');\n\t          currentScroll = $(window).scrollTop();\n\t          $module.scrollTop(0);\n\t          window.scrollTo(0, 0);\n\t        },\n\t\n\t        scrollBack: function() {\n\t          module.verbose('Scrolling back to original page position');\n\t          window.scrollTo(0, currentScroll);\n\t        },\n\t\n\t        clear: {\n\t          cache: function() {\n\t            module.verbose('Clearing cached dimensions');\n\t            module.cache = {};\n\t          }\n\t        },\n\t\n\t        set: {\n\t\n\t          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\n\t          ios: function() {\n\t            $html.addClass(className.ios);\n\t          },\n\t\n\t          // container\n\t          pushed: function() {\n\t            $context.addClass(className.pushed);\n\t          },\n\t          pushable: function() {\n\t            $context.addClass(className.pushable);\n\t          },\n\t\n\t          // pusher\n\t          dimmed: function() {\n\t            $pusher.addClass(className.dimmed);\n\t          },\n\t\n\t          // sidebar\n\t          active: function() {\n\t            $module.addClass(className.active);\n\t          },\n\t          animating: function() {\n\t            $module.addClass(className.animating);\n\t          },\n\t          transition: function(transition) {\n\t            transition = transition || module.get.transition();\n\t            $module.addClass(transition);\n\t          },\n\t          direction: function(direction) {\n\t            direction = direction || module.get.direction();\n\t            $module.addClass(className[direction]);\n\t          },\n\t          visible: function() {\n\t            $module.addClass(className.visible);\n\t          },\n\t          overlay: function() {\n\t            $module.addClass(className.overlay);\n\t          }\n\t        },\n\t        remove: {\n\t\n\t          inlineCSS: function() {\n\t            module.debug('Removing inline css styles', $style);\n\t            if($style && $style.length > 0) {\n\t              $style.remove();\n\t            }\n\t          },\n\t\n\t          // ios scroll on html not document\n\t          ios: function() {\n\t            $html.removeClass(className.ios);\n\t          },\n\t\n\t          // context\n\t          pushed: function() {\n\t            $context.removeClass(className.pushed);\n\t          },\n\t          pushable: function() {\n\t            $context.removeClass(className.pushable);\n\t          },\n\t\n\t          // sidebar\n\t          active: function() {\n\t            $module.removeClass(className.active);\n\t          },\n\t          animating: function() {\n\t            $module.removeClass(className.animating);\n\t          },\n\t          transition: function(transition) {\n\t            transition = transition || module.get.transition();\n\t            $module.removeClass(transition);\n\t          },\n\t          direction: function(direction) {\n\t            direction = direction || module.get.direction();\n\t            $module.removeClass(className[direction]);\n\t          },\n\t          visible: function() {\n\t            $module.removeClass(className.visible);\n\t          },\n\t          overlay: function() {\n\t            $module.removeClass(className.overlay);\n\t          }\n\t        },\n\t\n\t        get: {\n\t          direction: function() {\n\t            if($module.hasClass(className.top)) {\n\t              return className.top;\n\t            }\n\t            else if($module.hasClass(className.right)) {\n\t              return className.right;\n\t            }\n\t            else if($module.hasClass(className.bottom)) {\n\t              return className.bottom;\n\t            }\n\t            return className.left;\n\t          },\n\t          transition: function() {\n\t            var\n\t              direction = module.get.direction(),\n\t              transition\n\t            ;\n\t            transition = ( module.is.mobile() )\n\t              ? (settings.mobileTransition == 'auto')\n\t                ? settings.defaultTransition.mobile[direction]\n\t                : settings.mobileTransition\n\t              : (settings.transition == 'auto')\n\t                ? settings.defaultTransition.computer[direction]\n\t                : settings.transition\n\t            ;\n\t            module.verbose('Determined transition', transition);\n\t            return transition;\n\t          },\n\t          transitionEvent: function() {\n\t            var\n\t              element     = document.createElement('element'),\n\t              transitions = {\n\t                'transition'       :'transitionend',\n\t                'OTransition'      :'oTransitionEnd',\n\t                'MozTransition'    :'transitionend',\n\t                'WebkitTransition' :'webkitTransitionEnd'\n\t              },\n\t              transition\n\t            ;\n\t            for(transition in transitions){\n\t              if( element.style[transition] !== undefined ){\n\t                return transitions[transition];\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        is: {\n\t\n\t          ie: function() {\n\t            var\n\t              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\n\t              isIE   = ('ActiveXObject' in window)\n\t            ;\n\t            return (isIE11 || isIE);\n\t          },\n\t\n\t          ios: function() {\n\t            var\n\t              userAgent      = navigator.userAgent,\n\t              isIOS          = userAgent.match(regExp.ios),\n\t              isMobileChrome = userAgent.match(regExp.mobileChrome)\n\t            ;\n\t            if(isIOS && !isMobileChrome) {\n\t              module.verbose('Browser was found to be iOS', userAgent);\n\t              return true;\n\t            }\n\t            else {\n\t              return false;\n\t            }\n\t          },\n\t          mobile: function() {\n\t            var\n\t              userAgent    = navigator.userAgent,\n\t              isMobile     = userAgent.match(regExp.mobile)\n\t            ;\n\t            if(isMobile) {\n\t              module.verbose('Browser was found to be mobile', userAgent);\n\t              return true;\n\t            }\n\t            else {\n\t              module.verbose('Browser is not mobile, using regular transition', userAgent);\n\t              return false;\n\t            }\n\t          },\n\t          hidden: function() {\n\t            return !module.is.visible();\n\t          },\n\t          visible: function() {\n\t            return $module.hasClass(className.visible);\n\t          },\n\t          // alias\n\t          open: function() {\n\t            return module.is.visible();\n\t          },\n\t          closed: function() {\n\t            return module.is.hidden();\n\t          },\n\t          vertical: function() {\n\t            return $module.hasClass(className.top);\n\t          },\n\t          animating: function() {\n\t            return $context.hasClass(className.animating);\n\t          },\n\t          rtl: function () {\n\t            if(module.cache.rtl === undefined) {\n\t              module.cache.rtl = ($module.css('direction') == 'rtl');\n\t            }\n\t            return module.cache.rtl;\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      }\n\t    ;\n\t\n\t    if(methodInvoked) {\n\t      if(instance === undefined) {\n\t        module.initialize();\n\t      }\n\t      module.invoke(query);\n\t    }\n\t    else {\n\t      if(instance !== undefined) {\n\t        module.invoke('destroy');\n\t      }\n\t      module.initialize();\n\t    }\n\t  });\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.sidebar.settings = {\n\t\n\t  name              : 'Sidebar',\n\t  namespace         : 'sidebar',\n\t\n\t  silent            : false,\n\t  debug             : false,\n\t  verbose           : false,\n\t  performance       : true,\n\t\n\t  transition        : 'auto',\n\t  mobileTransition  : 'auto',\n\t\n\t  defaultTransition : {\n\t    computer: {\n\t      left   : 'uncover',\n\t      right  : 'uncover',\n\t      top    : 'overlay',\n\t      bottom : 'overlay'\n\t    },\n\t    mobile: {\n\t      left   : 'uncover',\n\t      right  : 'uncover',\n\t      top    : 'overlay',\n\t      bottom : 'overlay'\n\t    }\n\t  },\n\t\n\t  context           : 'body',\n\t  exclusive         : false,\n\t  closable          : true,\n\t  dimPage           : true,\n\t  scrollLock        : false,\n\t  returnScroll      : false,\n\t  delaySetup        : false,\n\t\n\t  duration          : 500,\n\t\n\t  onChange          : function(){},\n\t  onShow            : function(){},\n\t  onHide            : function(){},\n\t\n\t  onHidden          : function(){},\n\t  onVisible         : function(){},\n\t\n\t  className         : {\n\t    active    : 'active',\n\t    animating : 'animating',\n\t    dimmed    : 'dimmed',\n\t    ios       : 'ios',\n\t    pushable  : 'pushable',\n\t    pushed    : 'pushed',\n\t    right     : 'right',\n\t    top       : 'top',\n\t    left      : 'left',\n\t    bottom    : 'bottom',\n\t    visible   : 'visible'\n\t  },\n\t\n\t  selector: {\n\t    fixed   : '.fixed',\n\t    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\n\t    pusher  : '.pusher',\n\t    sidebar : '.ui.sidebar'\n\t  },\n\t\n\t  regExp: {\n\t    ios          : /(iPad|iPhone|iPod)/g,\n\t    mobileChrome : /(CriOS)/g,\n\t    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\n\t  },\n\t\n\t  error   : {\n\t    method       : 'The method you called is not defined.',\n\t    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\n\t    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\n\t    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\n\t    notFound     : 'There were no elements that matched the specified selector'\n\t  }\n\t\n\t};\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Sticky\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.sticky = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings              = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\n\t          : $.extend({}, $.fn.sticky.settings),\n\t\n\t        className             = settings.className,\n\t        namespace             = settings.namespace,\n\t        error                 = settings.error,\n\t\n\t        eventNamespace        = '.' + namespace,\n\t        moduleNamespace       = 'module-' + namespace,\n\t\n\t        $module               = $(this),\n\t        $window               = $(window),\n\t        $scroll               = $(settings.scrollContext),\n\t        $container,\n\t        $context,\n\t\n\t        selector              = $module.selector || '',\n\t        instance              = $module.data(moduleNamespace),\n\t\n\t        requestAnimationFrame = window.requestAnimationFrame\n\t          || window.mozRequestAnimationFrame\n\t          || window.webkitRequestAnimationFrame\n\t          || window.msRequestAnimationFrame\n\t          || function(callback) { setTimeout(callback, 0); },\n\t\n\t        element         = this,\n\t\n\t        documentObserver,\n\t        observer,\n\t        module\n\t      ;\n\t\n\t      module      = {\n\t\n\t        initialize: function() {\n\t\n\t          module.determineContainer();\n\t          module.determineContext();\n\t          module.verbose('Initializing sticky', settings, $container);\n\t\n\t          module.save.positions();\n\t          module.checkErrors();\n\t          module.bind.events();\n\t\n\t          if(settings.observeChanges) {\n\t            module.observeChanges();\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous instance');\n\t          module.reset();\n\t          if(documentObserver) {\n\t            documentObserver.disconnect();\n\t          }\n\t          if(observer) {\n\t            observer.disconnect();\n\t          }\n\t          $window\n\t            .off('load' + eventNamespace, module.event.load)\n\t            .off('resize' + eventNamespace, module.event.resize)\n\t          ;\n\t          $scroll\n\t            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n\t          ;\n\t          $module.removeData(moduleNamespace);\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            documentObserver = new MutationObserver(module.event.documentChanged);\n\t            observer         = new MutationObserver(module.event.changed);\n\t            documentObserver.observe(document, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            observer.observe(element, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            observer.observe($context[0], {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            module.debug('Setting up mutation observer', observer);\n\t          }\n\t        },\n\t\n\t        determineContainer: function() {\n\t          if(settings.container) {\n\t            $container = $(settings.container);\n\t          }\n\t          else {\n\t            $container = $module.offsetParent();\n\t          }\n\t        },\n\t\n\t        determineContext: function() {\n\t          if(settings.context) {\n\t            $context = $(settings.context);\n\t          }\n\t          else {\n\t            $context = $container;\n\t          }\n\t          if($context.length === 0) {\n\t            module.error(error.invalidContext, settings.context, $module);\n\t            return;\n\t          }\n\t        },\n\t\n\t        checkErrors: function() {\n\t          if( module.is.hidden() ) {\n\t            module.error(error.visible, $module);\n\t          }\n\t          if(module.cache.element.height > module.cache.context.height) {\n\t            module.reset();\n\t            module.error(error.elementSize, $module);\n\t            return;\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            $window\n\t              .on('load' + eventNamespace, module.event.load)\n\t              .on('resize' + eventNamespace, module.event.resize)\n\t            ;\n\t            // pub/sub pattern\n\t            $scroll\n\t              .off('scroll' + eventNamespace)\n\t              .on('scroll' + eventNamespace, module.event.scroll)\n\t              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n\t            ;\n\t          }\n\t        },\n\t\n\t        event: {\n\t          changed: function(mutations) {\n\t            clearTimeout(module.timer);\n\t            module.timer = setTimeout(function() {\n\t              module.verbose('DOM tree modified, updating sticky menu', mutations);\n\t              module.refresh();\n\t            }, 100);\n\t          },\n\t          documentChanged: function(mutations) {\n\t            [].forEach.call(mutations, function(mutation) {\n\t              if(mutation.removedNodes) {\n\t                [].forEach.call(mutation.removedNodes, function(node) {\n\t                  if(node == element || $(node).find(element).length > 0) {\n\t                    module.debug('Element removed from DOM, tearing down events');\n\t                    module.destroy();\n\t                  }\n\t                });\n\t              }\n\t            });\n\t          },\n\t          load: function() {\n\t            module.verbose('Page contents finished loading');\n\t            requestAnimationFrame(module.refresh);\n\t          },\n\t          resize: function() {\n\t            module.verbose('Window resized');\n\t            requestAnimationFrame(module.refresh);\n\t          },\n\t          scroll: function() {\n\t            requestAnimationFrame(function() {\n\t              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\n\t            });\n\t          },\n\t          scrollchange: function(event, scrollPosition) {\n\t            module.stick(scrollPosition);\n\t            settings.onScroll.call(element);\n\t          }\n\t        },\n\t\n\t        refresh: function(hardRefresh) {\n\t          module.reset();\n\t          if(!settings.context) {\n\t            module.determineContext();\n\t          }\n\t          if(hardRefresh) {\n\t            module.determineContainer();\n\t          }\n\t          module.save.positions();\n\t          module.stick();\n\t          settings.onReposition.call(element);\n\t        },\n\t\n\t        supports: {\n\t          sticky: function() {\n\t            var\n\t              $element = $('<div/>'),\n\t              element = $element[0]\n\t            ;\n\t            $element.addClass(className.supported);\n\t            return($element.css('position').match('sticky'));\n\t          }\n\t        },\n\t\n\t        save: {\n\t          lastScroll: function(scroll) {\n\t            module.lastScroll = scroll;\n\t          },\n\t          elementScroll: function(scroll) {\n\t            module.elementScroll = scroll;\n\t          },\n\t          positions: function() {\n\t            var\n\t              scrollContext = {\n\t                height : $scroll.height()\n\t              },\n\t              element = {\n\t                margin: {\n\t                  top    : parseInt($module.css('margin-top'), 10),\n\t                  bottom : parseInt($module.css('margin-bottom'), 10),\n\t                },\n\t                offset : $module.offset(),\n\t                width  : $module.outerWidth(),\n\t                height : $module.outerHeight()\n\t              },\n\t              context = {\n\t                offset : $context.offset(),\n\t                height : $context.outerHeight()\n\t              },\n\t              container = {\n\t                height: $container.outerHeight()\n\t              }\n\t            ;\n\t            if( !module.is.standardScroll() ) {\n\t              module.debug('Non-standard scroll. Removing scroll offset from element offset');\n\t\n\t              scrollContext.top  = $scroll.scrollTop();\n\t              scrollContext.left = $scroll.scrollLeft();\n\t\n\t              element.offset.top  += scrollContext.top;\n\t              context.offset.top  += scrollContext.top;\n\t              element.offset.left += scrollContext.left;\n\t              context.offset.left += scrollContext.left;\n\t            }\n\t            module.cache = {\n\t              fits : ( element.height < scrollContext.height ),\n\t              scrollContext : {\n\t                height : scrollContext.height\n\t              },\n\t              element: {\n\t                margin : element.margin,\n\t                top    : element.offset.top - element.margin.top,\n\t                left   : element.offset.left,\n\t                width  : element.width,\n\t                height : element.height,\n\t                bottom : element.offset.top + element.height\n\t              },\n\t              context: {\n\t                top           : context.offset.top,\n\t                height        : context.height,\n\t                bottom        : context.offset.top + context.height\n\t              }\n\t            };\n\t            module.set.containerSize();\n\t            module.set.size();\n\t            module.stick();\n\t            module.debug('Caching element positions', module.cache);\n\t          }\n\t        },\n\t\n\t        get: {\n\t          direction: function(scroll) {\n\t            var\n\t              direction = 'down'\n\t            ;\n\t            scroll = scroll || $scroll.scrollTop();\n\t            if(module.lastScroll !== undefined) {\n\t              if(module.lastScroll < scroll) {\n\t                direction = 'down';\n\t              }\n\t              else if(module.lastScroll > scroll) {\n\t                direction = 'up';\n\t              }\n\t            }\n\t            return direction;\n\t          },\n\t          scrollChange: function(scroll) {\n\t            scroll = scroll || $scroll.scrollTop();\n\t            return (module.lastScroll)\n\t              ? (scroll - module.lastScroll)\n\t              : 0\n\t            ;\n\t          },\n\t          currentElementScroll: function() {\n\t            if(module.elementScroll) {\n\t              return module.elementScroll;\n\t            }\n\t            return ( module.is.top() )\n\t              ? Math.abs(parseInt($module.css('top'), 10))    || 0\n\t              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\n\t            ;\n\t          },\n\t\n\t          elementScroll: function(scroll) {\n\t            scroll = scroll || $scroll.scrollTop();\n\t            var\n\t              element        = module.cache.element,\n\t              scrollContext  = module.cache.scrollContext,\n\t              delta          = module.get.scrollChange(scroll),\n\t              maxScroll      = (element.height - scrollContext.height + settings.offset),\n\t              elementScroll  = module.get.currentElementScroll(),\n\t              possibleScroll = (elementScroll + delta)\n\t            ;\n\t            if(module.cache.fits || possibleScroll < 0) {\n\t              elementScroll = 0;\n\t            }\n\t            else if(possibleScroll > maxScroll ) {\n\t              elementScroll = maxScroll;\n\t            }\n\t            else {\n\t              elementScroll = possibleScroll;\n\t            }\n\t            return elementScroll;\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          lastScroll: function() {\n\t            delete module.lastScroll;\n\t          },\n\t          elementScroll: function(scroll) {\n\t            delete module.elementScroll;\n\t          },\n\t          offset: function() {\n\t            $module.css('margin-top', '');\n\t          }\n\t        },\n\t\n\t        set: {\n\t          offset: function() {\n\t            module.verbose('Setting offset on element', settings.offset);\n\t            $module\n\t              .css('margin-top', settings.offset)\n\t            ;\n\t          },\n\t          containerSize: function() {\n\t            var\n\t              tagName = $container.get(0).tagName\n\t            ;\n\t            if(tagName === 'HTML' || tagName == 'body') {\n\t              // this can trigger for too many reasons\n\t              //module.error(error.container, tagName, $module);\n\t              module.determineContainer();\n\t            }\n\t            else {\n\t              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\n\t                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\n\t                $container.css({\n\t                  height: module.cache.context.height\n\t                });\n\t              }\n\t            }\n\t          },\n\t          minimumSize: function() {\n\t            var\n\t              element   = module.cache.element\n\t            ;\n\t            $container\n\t              .css('min-height', element.height)\n\t            ;\n\t          },\n\t          scroll: function(scroll) {\n\t            module.debug('Setting scroll on element', scroll);\n\t            if(module.elementScroll == scroll) {\n\t              return;\n\t            }\n\t            if( module.is.top() ) {\n\t              $module\n\t                .css('bottom', '')\n\t                .css('top', -scroll)\n\t              ;\n\t            }\n\t            if( module.is.bottom() ) {\n\t              $module\n\t                .css('top', '')\n\t                .css('bottom', scroll)\n\t              ;\n\t            }\n\t          },\n\t          size: function() {\n\t            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\n\t              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\n\t              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\n\t            }\n\t          }\n\t        },\n\t\n\t        is: {\n\t          standardScroll: function() {\n\t            return ($scroll[0] == window);\n\t          },\n\t          top: function() {\n\t            return $module.hasClass(className.top);\n\t          },\n\t          bottom: function() {\n\t            return $module.hasClass(className.bottom);\n\t          },\n\t          initialPosition: function() {\n\t            return (!module.is.fixed() && !module.is.bound());\n\t          },\n\t          hidden: function() {\n\t            return (!$module.is(':visible'));\n\t          },\n\t          bound: function() {\n\t            return $module.hasClass(className.bound);\n\t          },\n\t          fixed: function() {\n\t            return $module.hasClass(className.fixed);\n\t          }\n\t        },\n\t\n\t        stick: function(scroll) {\n\t          var\n\t            cachedPosition = scroll || $scroll.scrollTop(),\n\t            cache          = module.cache,\n\t            fits           = cache.fits,\n\t            element        = cache.element,\n\t            scrollContext  = cache.scrollContext,\n\t            context        = cache.context,\n\t            offset         = (module.is.bottom() && settings.pushing)\n\t              ? settings.bottomOffset\n\t              : settings.offset,\n\t            scroll         = {\n\t              top    : cachedPosition + offset,\n\t              bottom : cachedPosition + offset + scrollContext.height\n\t            },\n\t            direction      = module.get.direction(scroll.top),\n\t            elementScroll  = (fits)\n\t              ? 0\n\t              : module.get.elementScroll(scroll.top),\n\t\n\t            // shorthand\n\t            doesntFit      = !fits,\n\t            elementVisible = (element.height !== 0)\n\t          ;\n\t\n\t          if(elementVisible) {\n\t\n\t            if( module.is.initialPosition() ) {\n\t              if(scroll.top >= context.bottom) {\n\t                module.debug('Initial element position is bottom of container');\n\t                module.bindBottom();\n\t              }\n\t              else if(scroll.top > element.top) {\n\t                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n\t                  module.debug('Initial element position is bottom of container');\n\t                  module.bindBottom();\n\t                }\n\t                else {\n\t                  module.debug('Initial element position is fixed');\n\t                  module.fixTop();\n\t                }\n\t              }\n\t\n\t            }\n\t            else if( module.is.fixed() ) {\n\t\n\t              // currently fixed top\n\t              if( module.is.top() ) {\n\t                if( scroll.top <= element.top ) {\n\t                  module.debug('Fixed element reached top of container');\n\t                  module.setInitialPosition();\n\t                }\n\t                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n\t                  module.debug('Fixed element reached bottom of container');\n\t                  module.bindBottom();\n\t                }\n\t                // scroll element if larger than screen\n\t                else if(doesntFit) {\n\t                  module.set.scroll(elementScroll);\n\t                  module.save.lastScroll(scroll.top);\n\t                  module.save.elementScroll(elementScroll);\n\t                }\n\t              }\n\t\n\t              // currently fixed bottom\n\t              else if(module.is.bottom() ) {\n\t\n\t                // top edge\n\t                if( (scroll.bottom - element.height) <= element.top) {\n\t                  module.debug('Bottom fixed rail has reached top of container');\n\t                  module.setInitialPosition();\n\t                }\n\t                // bottom edge\n\t                else if(scroll.bottom >= context.bottom) {\n\t                  module.debug('Bottom fixed rail has reached bottom of container');\n\t                  module.bindBottom();\n\t                }\n\t                // scroll element if larger than screen\n\t                else if(doesntFit) {\n\t                  module.set.scroll(elementScroll);\n\t                  module.save.lastScroll(scroll.top);\n\t                  module.save.elementScroll(elementScroll);\n\t                }\n\t\n\t              }\n\t            }\n\t            else if( module.is.bottom() ) {\n\t              if( scroll.top <= element.top ) {\n\t                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\n\t                module.setInitialPosition();\n\t              }\n\t              else {\n\t                if(settings.pushing) {\n\t                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\n\t                    module.debug('Fixing bottom attached element to bottom of browser.');\n\t                    module.fixBottom();\n\t                  }\n\t                }\n\t                else {\n\t                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\n\t                    module.debug('Fixing bottom attached element to top of browser.');\n\t                    module.fixTop();\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        bindTop: function() {\n\t          module.debug('Binding element to top of parent container');\n\t          module.remove.offset();\n\t          $module\n\t            .css({\n\t              left         : '',\n\t              top          : '',\n\t              marginBottom : ''\n\t            })\n\t            .removeClass(className.fixed)\n\t            .removeClass(className.bottom)\n\t            .addClass(className.bound)\n\t            .addClass(className.top)\n\t          ;\n\t          settings.onTop.call(element);\n\t          settings.onUnstick.call(element);\n\t        },\n\t        bindBottom: function() {\n\t          module.debug('Binding element to bottom of parent container');\n\t          module.remove.offset();\n\t          $module\n\t            .css({\n\t              left         : '',\n\t              top          : ''\n\t            })\n\t            .removeClass(className.fixed)\n\t            .removeClass(className.top)\n\t            .addClass(className.bound)\n\t            .addClass(className.bottom)\n\t          ;\n\t          settings.onBottom.call(element);\n\t          settings.onUnstick.call(element);\n\t        },\n\t\n\t        setInitialPosition: function() {\n\t          module.debug('Returning to initial position');\n\t          module.unfix();\n\t          module.unbind();\n\t        },\n\t\n\t\n\t        fixTop: function() {\n\t          module.debug('Fixing element to top of page');\n\t          module.set.minimumSize();\n\t          module.set.offset();\n\t          $module\n\t            .css({\n\t              left         : module.cache.element.left,\n\t              bottom       : '',\n\t              marginBottom : ''\n\t            })\n\t            .removeClass(className.bound)\n\t            .removeClass(className.bottom)\n\t            .addClass(className.fixed)\n\t            .addClass(className.top)\n\t          ;\n\t          settings.onStick.call(element);\n\t        },\n\t\n\t        fixBottom: function() {\n\t          module.debug('Sticking element to bottom of page');\n\t          module.set.minimumSize();\n\t          module.set.offset();\n\t          $module\n\t            .css({\n\t              left         : module.cache.element.left,\n\t              bottom       : '',\n\t              marginBottom : ''\n\t            })\n\t            .removeClass(className.bound)\n\t            .removeClass(className.top)\n\t            .addClass(className.fixed)\n\t            .addClass(className.bottom)\n\t          ;\n\t          settings.onStick.call(element);\n\t        },\n\t\n\t        unbind: function() {\n\t          if( module.is.bound() ) {\n\t            module.debug('Removing container bound position on element');\n\t            module.remove.offset();\n\t            $module\n\t              .removeClass(className.bound)\n\t              .removeClass(className.top)\n\t              .removeClass(className.bottom)\n\t            ;\n\t          }\n\t        },\n\t\n\t        unfix: function() {\n\t          if( module.is.fixed() ) {\n\t            module.debug('Removing fixed position on element');\n\t            module.remove.offset();\n\t            $module\n\t              .removeClass(className.fixed)\n\t              .removeClass(className.top)\n\t              .removeClass(className.bottom)\n\t            ;\n\t            settings.onUnstick.call(element);\n\t          }\n\t        },\n\t\n\t        reset: function() {\n\t          module.debug('Resetting elements position');\n\t          module.unbind();\n\t          module.unfix();\n\t          module.resetCSS();\n\t          module.remove.offset();\n\t          module.remove.lastScroll();\n\t        },\n\t\n\t        resetCSS: function() {\n\t          $module\n\t            .css({\n\t              width  : '',\n\t              height : ''\n\t            })\n\t          ;\n\t          $container\n\t            .css({\n\t              height: ''\n\t            })\n\t          ;\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            settings[name] = value;\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 0);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.sticky.settings = {\n\t\n\t  name           : 'Sticky',\n\t  namespace      : 'sticky',\n\t\n\t  silent         : false,\n\t  debug          : false,\n\t  verbose        : true,\n\t  performance    : true,\n\t\n\t  // whether to stick in the opposite direction on scroll up\n\t  pushing        : false,\n\t\n\t  context        : false,\n\t  container      : false,\n\t\n\t  // Context to watch scroll events\n\t  scrollContext  : window,\n\t\n\t  // Offset to adjust scroll\n\t  offset         : 0,\n\t\n\t  // Offset to adjust scroll when attached to bottom of screen\n\t  bottomOffset   : 0,\n\t\n\t  jitter         : 5, // will only set container height if difference between context and container is larger than this number\n\t\n\t  // Whether to automatically observe changes with Mutation Observers\n\t  observeChanges : false,\n\t\n\t  // Called when position is recalculated\n\t  onReposition   : function(){},\n\t\n\t  // Called on each scroll\n\t  onScroll       : function(){},\n\t\n\t  // Called when element is stuck to viewport\n\t  onStick        : function(){},\n\t\n\t  // Called when element is unstuck from viewport\n\t  onUnstick      : function(){},\n\t\n\t  // Called when element reaches top of context\n\t  onTop          : function(){},\n\t\n\t  // Called when element reaches bottom of context\n\t  onBottom       : function(){},\n\t\n\t  error         : {\n\t    container      : 'Sticky element must be inside a relative container',\n\t    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\n\t    method         : 'The method you called is not defined.',\n\t    invalidContext : 'Context specified does not exist',\n\t    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\n\t  },\n\t\n\t  className : {\n\t    bound     : 'bound',\n\t    fixed     : 'fixed',\n\t    supported : 'native',\n\t    top       : 'top',\n\t    bottom    : 'bottom'\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Tab\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.tab = function(parameters) {\n\t\n\t  var\n\t    // use window context if none specified\n\t    $allModules     = $.isFunction(this)\n\t        ? $(window)\n\t        : $(this),\n\t\n\t    moduleSelector  = $allModules.selector || '',\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    initializedHistory = false,\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.tab.settings, parameters)\n\t          : $.extend({}, $.fn.tab.settings),\n\t\n\t        className       = settings.className,\n\t        metadata        = settings.metadata,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t\n\t        eventNamespace  = '.' + settings.namespace,\n\t        moduleNamespace = 'module-' + settings.namespace,\n\t\n\t        $module         = $(this),\n\t        $context,\n\t        $tabs,\n\t\n\t        cache           = {},\n\t        firstLoad       = true,\n\t        recursionDepth  = 0,\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        activeTabPath,\n\t        parameterArray,\n\t        module,\n\t\n\t        historyEvent\n\t\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing tab menu item', $module);\n\t          module.fix.callbacks();\n\t          module.determineTabs();\n\t\n\t          module.debug('Determining tabs', settings.context, $tabs);\n\t          // set up automatic routing\n\t          if(settings.auto) {\n\t            module.set.auto();\n\t          }\n\t          module.bind.events();\n\t\n\t          if(settings.history && !initializedHistory) {\n\t            module.initializeHistory();\n\t            initializedHistory = true;\n\t          }\n\t\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function () {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.debug('Destroying tabs', $module);\n\t          $module\n\t            .removeData(moduleNamespace)\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            // if using $.tab don't add events\n\t            if( !$.isWindow( element ) ) {\n\t              module.debug('Attaching tab activation events to element', $module);\n\t              $module\n\t                .on('click' + eventNamespace, module.event.click)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        determineTabs: function() {\n\t          var\n\t            $reference\n\t          ;\n\t\n\t          // determine tab context\n\t          if(settings.context === 'parent') {\n\t            if($module.closest(selector.ui).length > 0) {\n\t              $reference = $module.closest(selector.ui);\n\t              module.verbose('Using closest UI element as parent', $reference);\n\t            }\n\t            else {\n\t              $reference = $module;\n\t            }\n\t            $context = $reference.parent();\n\t            module.verbose('Determined parent element for creating context', $context);\n\t          }\n\t          else if(settings.context) {\n\t            $context = $(settings.context);\n\t            module.verbose('Using selector for tab context', settings.context, $context);\n\t          }\n\t          else {\n\t            $context = $('body');\n\t          }\n\t          // find tabs\n\t          if(settings.childrenOnly) {\n\t            $tabs = $context.children(selector.tabs);\n\t            module.debug('Searching tab context children for tabs', $context, $tabs);\n\t          }\n\t          else {\n\t            $tabs = $context.find(selector.tabs);\n\t            module.debug('Searching tab context for tabs', $context, $tabs);\n\t          }\n\t        },\n\t\n\t        fix: {\n\t          callbacks: function() {\n\t            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\n\t              if(parameters.onTabLoad) {\n\t                parameters.onLoad = parameters.onTabLoad;\n\t                delete parameters.onTabLoad;\n\t                module.error(error.legacyLoad, parameters.onLoad);\n\t              }\n\t              if(parameters.onTabInit) {\n\t                parameters.onFirstLoad = parameters.onTabInit;\n\t                delete parameters.onTabInit;\n\t                module.error(error.legacyInit, parameters.onFirstLoad);\n\t              }\n\t              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\n\t            }\n\t          }\n\t        },\n\t\n\t        initializeHistory: function() {\n\t          module.debug('Initializing page state');\n\t          if( $.address === undefined ) {\n\t            module.error(error.state);\n\t            return false;\n\t          }\n\t          else {\n\t            if(settings.historyType == 'state') {\n\t              module.debug('Using HTML5 to manage state');\n\t              if(settings.path !== false) {\n\t                $.address\n\t                  .history(true)\n\t                  .state(settings.path)\n\t                ;\n\t              }\n\t              else {\n\t                module.error(error.path);\n\t                return false;\n\t              }\n\t            }\n\t            $.address\n\t              .bind('change', module.event.history.change)\n\t            ;\n\t          }\n\t        },\n\t\n\t        event: {\n\t          click: function(event) {\n\t            var\n\t              tabPath = $(this).data(metadata.tab)\n\t            ;\n\t            if(tabPath !== undefined) {\n\t              if(settings.history) {\n\t                module.verbose('Updating page state', event);\n\t                $.address.value(tabPath);\n\t              }\n\t              else {\n\t                module.verbose('Changing tab', event);\n\t                module.changeTab(tabPath);\n\t              }\n\t              event.preventDefault();\n\t            }\n\t            else {\n\t              module.debug('No tab specified');\n\t            }\n\t          },\n\t          history: {\n\t            change: function(event) {\n\t              var\n\t                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\n\t                pageTitle = settings.templates.determineTitle(tabPath) || false\n\t              ;\n\t              module.performance.display();\n\t              module.debug('History change event', tabPath, event);\n\t              historyEvent = event;\n\t              if(tabPath !== undefined) {\n\t                module.changeTab(tabPath);\n\t              }\n\t              if(pageTitle) {\n\t                $.address.title(pageTitle);\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        refresh: function() {\n\t          if(activeTabPath) {\n\t            module.debug('Refreshing tab', activeTabPath);\n\t            module.changeTab(activeTabPath);\n\t          }\n\t        },\n\t\n\t        cache: {\n\t\n\t          read: function(cacheKey) {\n\t            return (cacheKey !== undefined)\n\t              ? cache[cacheKey]\n\t              : false\n\t            ;\n\t          },\n\t          add: function(cacheKey, content) {\n\t            cacheKey = cacheKey || activeTabPath;\n\t            module.debug('Adding cached content for', cacheKey);\n\t            cache[cacheKey] = content;\n\t          },\n\t          remove: function(cacheKey) {\n\t            cacheKey = cacheKey || activeTabPath;\n\t            module.debug('Removing cached content for', cacheKey);\n\t            delete cache[cacheKey];\n\t          }\n\t        },\n\t\n\t        set: {\n\t          auto: function() {\n\t            var\n\t              url = (typeof settings.path == 'string')\n\t                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\n\t                : '/{$tab}'\n\t            ;\n\t            module.verbose('Setting up automatic tab retrieval from server', url);\n\t            if($.isPlainObject(settings.apiSettings)) {\n\t              settings.apiSettings.url = url;\n\t            }\n\t            else {\n\t              settings.apiSettings = {\n\t                url: url\n\t              };\n\t            }\n\t          },\n\t          loading: function(tabPath) {\n\t            var\n\t              $tab      = module.get.tabElement(tabPath),\n\t              isLoading = $tab.hasClass(className.loading)\n\t            ;\n\t            if(!isLoading) {\n\t              module.verbose('Setting loading state for', $tab);\n\t              $tab\n\t                .addClass(className.loading)\n\t                .siblings($tabs)\n\t                  .removeClass(className.active + ' ' + className.loading)\n\t              ;\n\t              if($tab.length > 0) {\n\t                settings.onRequest.call($tab[0], tabPath);\n\t              }\n\t            }\n\t          },\n\t          state: function(state) {\n\t            $.address.value(state);\n\t          }\n\t        },\n\t\n\t        changeTab: function(tabPath) {\n\t          var\n\t            pushStateAvailable = (window.history && window.history.pushState),\n\t            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\n\t            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\n\t            // only add default path if not remote content\n\t            pathArray = (remoteContent && !shouldIgnoreLoad)\n\t              ? module.utilities.pathToArray(tabPath)\n\t              : module.get.defaultPathArray(tabPath)\n\t          ;\n\t          tabPath = module.utilities.arrayToPath(pathArray);\n\t          $.each(pathArray, function(index, tab) {\n\t            var\n\t              currentPathArray   = pathArray.slice(0, index + 1),\n\t              currentPath        = module.utilities.arrayToPath(currentPathArray),\n\t\n\t              isTab              = module.is.tab(currentPath),\n\t              isLastIndex        = (index + 1 == pathArray.length),\n\t\n\t              $tab               = module.get.tabElement(currentPath),\n\t              $anchor,\n\t              nextPathArray,\n\t              nextPath,\n\t              isLastTab\n\t            ;\n\t            module.verbose('Looking for tab', tab);\n\t            if(isTab) {\n\t              module.verbose('Tab was found', tab);\n\t              // scope up\n\t              activeTabPath  = currentPath;\n\t              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\n\t\n\t              if(isLastIndex) {\n\t                isLastTab = true;\n\t              }\n\t              else {\n\t                nextPathArray = pathArray.slice(0, index + 2);\n\t                nextPath      = module.utilities.arrayToPath(nextPathArray);\n\t                isLastTab     = ( !module.is.tab(nextPath) );\n\t                if(isLastTab) {\n\t                  module.verbose('Tab parameters found', nextPathArray);\n\t                }\n\t              }\n\t              if(isLastTab && remoteContent) {\n\t                if(!shouldIgnoreLoad) {\n\t                  module.activate.navigation(currentPath);\n\t                  module.fetch.content(currentPath, tabPath);\n\t                }\n\t                else {\n\t                  module.debug('Ignoring remote content on first tab load', currentPath);\n\t                  firstLoad = false;\n\t                  module.cache.add(tabPath, $tab.html());\n\t                  module.activate.all(currentPath);\n\t                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n\t                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n\t                }\n\t                return false;\n\t              }\n\t              else {\n\t                module.debug('Opened local tab', currentPath);\n\t                module.activate.all(currentPath);\n\t                if( !module.cache.read(currentPath) ) {\n\t                  module.cache.add(currentPath, true);\n\t                  module.debug('First time tab loaded calling tab init');\n\t                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n\t                }\n\t                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n\t              }\n\t\n\t            }\n\t            else if(tabPath.search('/') == -1 && tabPath !== '') {\n\t              // look for in page anchor\n\t              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\n\t              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\n\t              $tab        = module.get.tabElement(currentPath);\n\t              // if anchor exists use parent tab\n\t              if($anchor && $anchor.length > 0 && currentPath) {\n\t                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\n\t                if( !$tab.hasClass(className.active) ) {\n\t                  setTimeout(function() {\n\t                    module.scrollTo($anchor);\n\t                  }, 0);\n\t                }\n\t                module.activate.all(currentPath);\n\t                if( !module.cache.read(currentPath) ) {\n\t                  module.cache.add(currentPath, true);\n\t                  module.debug('First time tab loaded calling tab init');\n\t                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n\t                }\n\t                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n\t                return false;\n\t              }\n\t            }\n\t            else {\n\t              module.error(error.missingTab, $module, $context, currentPath);\n\t              return false;\n\t            }\n\t          });\n\t        },\n\t\n\t        scrollTo: function($element) {\n\t          var\n\t            scrollOffset = ($element && $element.length > 0)\n\t              ? $element.offset().top\n\t              : false\n\t          ;\n\t          if(scrollOffset !== false) {\n\t            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\n\t            $(document).scrollTop(scrollOffset);\n\t          }\n\t        },\n\t\n\t        update: {\n\t          content: function(tabPath, html, evaluateScripts) {\n\t            var\n\t              $tab = module.get.tabElement(tabPath),\n\t              tab  = $tab[0]\n\t            ;\n\t            evaluateScripts = (evaluateScripts !== undefined)\n\t              ? evaluateScripts\n\t              : settings.evaluateScripts\n\t            ;\n\t            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\n\t              $tab\n\t                .empty()\n\t                .append($(html).clone(true))\n\t              ;\n\t            }\n\t            else {\n\t              if(evaluateScripts) {\n\t                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\n\t                $tab.html(html);\n\t              }\n\t              else {\n\t                module.debug('Updating HTML', tabPath, html);\n\t                tab.innerHTML = html;\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        fetch: {\n\t\n\t          content: function(tabPath, fullTabPath) {\n\t            var\n\t              $tab        = module.get.tabElement(tabPath),\n\t              apiSettings = {\n\t                dataType         : 'html',\n\t                encodeParameters : false,\n\t                on               : 'now',\n\t                cache            : settings.alwaysRefresh,\n\t                headers          : {\n\t                  'X-Remote': true\n\t                },\n\t                onSuccess : function(response) {\n\t                  if(settings.cacheType == 'response') {\n\t                    module.cache.add(fullTabPath, response);\n\t                  }\n\t                  module.update.content(tabPath, response);\n\t                  if(tabPath == activeTabPath) {\n\t                    module.debug('Content loaded', tabPath);\n\t                    module.activate.tab(tabPath);\n\t                  }\n\t                  else {\n\t                    module.debug('Content loaded in background', tabPath);\n\t                  }\n\t                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\t                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\t\n\t                  if(settings.loadOnce) {\n\t                    module.cache.add(fullTabPath, true);\n\t                  }\n\t                  else if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\n\t                    setTimeout(function() {\n\t                      var\n\t                        $clone = $tab.children().clone(true)\n\t                      ;\n\t                      $clone = $clone.not('script');\n\t                      module.cache.add(fullTabPath, $clone);\n\t                    }, 0);\n\t                  }\n\t                  else {\n\t                    module.cache.add(fullTabPath, $tab.html());\n\t                  }\n\t                },\n\t                urlData: {\n\t                  tab: fullTabPath\n\t                }\n\t              },\n\t              request         = $tab.api('get request') || false,\n\t              existingRequest = ( request && request.state() === 'pending' ),\n\t              requestSettings,\n\t              cachedContent\n\t            ;\n\t\n\t            fullTabPath   = fullTabPath || tabPath;\n\t            cachedContent = module.cache.read(fullTabPath);\n\t\n\t\n\t            if(settings.cache && cachedContent) {\n\t              module.activate.tab(tabPath);\n\t              module.debug('Adding cached content', fullTabPath);\n\t              if(!settings.loadOnce) {\n\t                if(settings.evaluateScripts == 'once') {\n\t                  module.update.content(tabPath, cachedContent, false);\n\t                }\n\t                else {\n\t                  module.update.content(tabPath, cachedContent);\n\t                }\n\t              }\n\t              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\t            }\n\t            else if(existingRequest) {\n\t              module.set.loading(tabPath);\n\t              module.debug('Content is already loading', fullTabPath);\n\t            }\n\t            else if($.api !== undefined) {\n\t              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\n\t              module.debug('Retrieving remote content', fullTabPath, requestSettings);\n\t              module.set.loading(tabPath);\n\t              $tab.api(requestSettings);\n\t            }\n\t            else {\n\t              module.error(error.api);\n\t            }\n\t          }\n\t        },\n\t\n\t        activate: {\n\t          all: function(tabPath) {\n\t            module.activate.tab(tabPath);\n\t            module.activate.navigation(tabPath);\n\t          },\n\t          tab: function(tabPath) {\n\t            var\n\t              $tab          = module.get.tabElement(tabPath),\n\t              $deactiveTabs = (settings.deactivate == 'siblings')\n\t                ? $tab.siblings($tabs)\n\t                : $tabs.not($tab),\n\t              isActive      = $tab.hasClass(className.active)\n\t            ;\n\t            module.verbose('Showing tab content for', $tab);\n\t            if(!isActive) {\n\t              $tab\n\t                .addClass(className.active)\n\t              ;\n\t              $deactiveTabs\n\t                .removeClass(className.active + ' ' + className.loading)\n\t              ;\n\t              if($tab.length > 0) {\n\t                settings.onVisible.call($tab[0], tabPath);\n\t              }\n\t            }\n\t          },\n\t          navigation: function(tabPath) {\n\t            var\n\t              $navigation         = module.get.navElement(tabPath),\n\t              $deactiveNavigation = (settings.deactivate == 'siblings')\n\t                ? $navigation.siblings($allModules)\n\t                : $allModules.not($navigation),\n\t              isActive    = $navigation.hasClass(className.active)\n\t            ;\n\t            module.verbose('Activating tab navigation for', $navigation, tabPath);\n\t            if(!isActive) {\n\t              $navigation\n\t                .addClass(className.active)\n\t              ;\n\t              $deactiveNavigation\n\t                .removeClass(className.active + ' ' + className.loading)\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        deactivate: {\n\t          all: function() {\n\t            module.deactivate.navigation();\n\t            module.deactivate.tabs();\n\t          },\n\t          navigation: function() {\n\t            $allModules\n\t              .removeClass(className.active)\n\t            ;\n\t          },\n\t          tabs: function() {\n\t            $tabs\n\t              .removeClass(className.active + ' ' + className.loading)\n\t            ;\n\t          }\n\t        },\n\t\n\t        is: {\n\t          tab: function(tabName) {\n\t            return (tabName !== undefined)\n\t              ? ( module.get.tabElement(tabName).length > 0 )\n\t              : false\n\t            ;\n\t          }\n\t        },\n\t\n\t        get: {\n\t          initialPath: function() {\n\t            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\n\t          },\n\t          path: function() {\n\t            return $.address.value();\n\t          },\n\t          // adds default tabs to tab path\n\t          defaultPathArray: function(tabPath) {\n\t            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\n\t          },\n\t          defaultPath: function(tabPath) {\n\t            var\n\t              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\n\t              defaultTab  = $defaultNav.data(metadata.tab) || false\n\t            ;\n\t            if( defaultTab ) {\n\t              module.debug('Found default tab', defaultTab);\n\t              if(recursionDepth < settings.maxDepth) {\n\t                recursionDepth++;\n\t                return module.get.defaultPath(defaultTab);\n\t              }\n\t              module.error(error.recursion);\n\t            }\n\t            else {\n\t              module.debug('No default tabs found for', tabPath, $tabs);\n\t            }\n\t            recursionDepth = 0;\n\t            return tabPath;\n\t          },\n\t          navElement: function(tabPath) {\n\t            tabPath = tabPath || activeTabPath;\n\t            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n\t          },\n\t          tabElement: function(tabPath) {\n\t            var\n\t              $fullPathTab,\n\t              $simplePathTab,\n\t              tabPathArray,\n\t              lastTab\n\t            ;\n\t            tabPath        = tabPath || activeTabPath;\n\t            tabPathArray   = module.utilities.pathToArray(tabPath);\n\t            lastTab        = module.utilities.last(tabPathArray);\n\t            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n\t            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\n\t            return ($fullPathTab.length > 0)\n\t              ? $fullPathTab\n\t              : $simplePathTab\n\t            ;\n\t          },\n\t          tab: function() {\n\t            return activeTabPath;\n\t          }\n\t        },\n\t\n\t        utilities: {\n\t          filterArray: function(keepArray, removeArray) {\n\t            return $.grep(keepArray, function(keepValue) {\n\t              return ( $.inArray(keepValue, removeArray) == -1);\n\t            });\n\t          },\n\t          last: function(array) {\n\t            return $.isArray(array)\n\t              ? array[ array.length - 1]\n\t              : false\n\t            ;\n\t          },\n\t          pathToArray: function(pathName) {\n\t            if(pathName === undefined) {\n\t              pathName = activeTabPath;\n\t            }\n\t            return typeof pathName == 'string'\n\t              ? pathName.split('/')\n\t              : [pathName]\n\t            ;\n\t          },\n\t          arrayToPath: function(pathArray) {\n\t            return $.isArray(pathArray)\n\t              ? pathArray.join('/')\n\t              : false\n\t            ;\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t\n\t};\n\t\n\t// shortcut for tabbed content with no defined navigation\n\t$.tab = function() {\n\t  $(window).tab.apply(this, arguments);\n\t};\n\t\n\t$.fn.tab.settings = {\n\t\n\t  name            : 'Tab',\n\t  namespace       : 'tab',\n\t\n\t  silent          : false,\n\t  debug           : false,\n\t  verbose         : false,\n\t  performance     : true,\n\t\n\t  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\n\t  history         : false,      // use browser history\n\t  historyType     : 'hash',     // #/ or html5 state\n\t  path            : false,      // base path of url\n\t\n\t  context         : false,      // specify a context that tabs must appear inside\n\t  childrenOnly    : false,      // use only tabs that are children of context\n\t  maxDepth        : 25,         // max depth a tab can be nested\n\t\n\t  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\n\t\n\t  alwaysRefresh   : false,      // load tab content new every tab click\n\t  cache           : true,       // cache the content requests to pull locally\n\t  loadOnce        : false,      // Whether tab data should only be loaded once when using remote content\n\t  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\n\t  ignoreFirstLoad : false,      // don't load remote content on first load\n\t\n\t  apiSettings     : false,      // settings for api call\n\t  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\n\t\n\t  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\n\t  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\n\t  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\n\t  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\n\t\n\t  templates : {\n\t    determineTitle: function(tabArray) {} // returns page title for path\n\t  },\n\t\n\t  error: {\n\t    api        : 'You attempted to load content without API module',\n\t    method     : 'The method you called is not defined',\n\t    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\n\t    noContent  : 'The tab you specified is missing a content url.',\n\t    path       : 'History enabled, but no path was specified',\n\t    recursion  : 'Max recursive depth reached',\n\t    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\n\t    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\n\t    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\n\t  },\n\t\n\t  metadata : {\n\t    tab    : 'tab',\n\t    loaded : 'loaded',\n\t    promise: 'promise'\n\t  },\n\t\n\t  className   : {\n\t    loading : 'loading',\n\t    active  : 'active'\n\t  },\n\t\n\t  selector    : {\n\t    tabs : '.ui.tab',\n\t    ui   : '.ui'\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Transition\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.transition = function() {\n\t  var\n\t    $allModules     = $(this),\n\t    moduleSelector  = $allModules.selector || '',\n\t\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    moduleArguments = arguments,\n\t    query           = moduleArguments[0],\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t    methodInvoked   = (typeof query === 'string'),\n\t\n\t    requestAnimationFrame = window.requestAnimationFrame\n\t      || window.mozRequestAnimationFrame\n\t      || window.webkitRequestAnimationFrame\n\t      || window.msRequestAnimationFrame\n\t      || function(callback) { setTimeout(callback, 0); },\n\t\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function(index) {\n\t      var\n\t        $module  = $(this),\n\t        element  = this,\n\t\n\t        // set at run time\n\t        settings,\n\t        instance,\n\t\n\t        error,\n\t        className,\n\t        metadata,\n\t        animationEnd,\n\t        animationName,\n\t\n\t        namespace,\n\t        moduleNamespace,\n\t        eventNamespace,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t\n\t          // get full settings\n\t          settings        = module.get.settings.apply(element, moduleArguments);\n\t\n\t          // shorthand\n\t          className       = settings.className;\n\t          error           = settings.error;\n\t          metadata        = settings.metadata;\n\t\n\t          // define namespace\n\t          eventNamespace  = '.' + settings.namespace;\n\t          moduleNamespace = 'module-' + settings.namespace;\n\t          instance        = $module.data(moduleNamespace) || module;\n\t\n\t          // get vendor specific events\n\t          animationEnd    = module.get.animationEndEvent();\n\t\n\t          if(methodInvoked) {\n\t            methodInvoked = module.invoke(query);\n\t          }\n\t\n\t          // method not invoked, lets run an animation\n\t          if(methodInvoked === false) {\n\t            module.verbose('Converted arguments into settings object', settings);\n\t            if(settings.interval) {\n\t              module.delay(settings.animate);\n\t            }\n\t            else  {\n\t              module.animate();\n\t            }\n\t            module.instantiate();\n\t          }\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, instance)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module for', element);\n\t          $module\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          module.verbose('Refreshing display type on next animation');\n\t          delete module.displayType;\n\t        },\n\t\n\t        forceRepaint: function() {\n\t          module.verbose('Forcing element repaint');\n\t          var\n\t            $parentElement = $module.parent(),\n\t            $nextElement = $module.next()\n\t          ;\n\t          if($nextElement.length === 0) {\n\t            $module.detach().appendTo($parentElement);\n\t          }\n\t          else {\n\t            $module.detach().insertBefore($nextElement);\n\t          }\n\t        },\n\t\n\t        repaint: function() {\n\t          module.verbose('Repainting element');\n\t          var\n\t            fakeAssignment = element.offsetWidth\n\t          ;\n\t        },\n\t\n\t        delay: function(interval) {\n\t          var\n\t            direction = module.get.animationDirection(),\n\t            shouldReverse,\n\t            delay\n\t          ;\n\t          if(!direction) {\n\t            direction = module.can.transition()\n\t              ? module.get.direction()\n\t              : 'static'\n\t            ;\n\t          }\n\t          interval = (interval !== undefined)\n\t            ? interval\n\t            : settings.interval\n\t          ;\n\t          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\n\t          delay = (shouldReverse || settings.reverse == true)\n\t            ? ($allModules.length - index) * settings.interval\n\t            : index * settings.interval\n\t          ;\n\t          module.debug('Delaying animation by', delay);\n\t          setTimeout(module.animate, delay);\n\t        },\n\t\n\t        animate: function(overrideSettings) {\n\t          settings = overrideSettings || settings;\n\t          if(!module.is.supported()) {\n\t            module.error(error.support);\n\t            return false;\n\t          }\n\t          module.debug('Preparing animation', settings.animation);\n\t          if(module.is.animating()) {\n\t            if(settings.queue) {\n\t              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\n\t                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\n\t              }\n\t              else {\n\t                module.queue(settings.animation);\n\t              }\n\t              return false;\n\t            }\n\t            else if(!settings.allowRepeats && module.is.occurring()) {\n\t              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\n\t              return false;\n\t            }\n\t            else {\n\t              module.debug('New animation started, completing previous early', settings.animation);\n\t              instance.complete();\n\t            }\n\t          }\n\t          if( module.can.animate() ) {\n\t            module.set.animating(settings.animation);\n\t          }\n\t          else {\n\t            module.error(error.noAnimation, settings.animation, element);\n\t          }\n\t        },\n\t\n\t        reset: function() {\n\t          module.debug('Resetting animation to beginning conditions');\n\t          module.remove.animationCallbacks();\n\t          module.restore.conditions();\n\t          module.remove.animating();\n\t        },\n\t\n\t        queue: function(animation) {\n\t          module.debug('Queueing animation of', animation);\n\t          module.queuing = true;\n\t          $module\n\t            .one(animationEnd + '.queue' + eventNamespace, function() {\n\t              module.queuing = false;\n\t              module.repaint();\n\t              module.animate.apply(this, settings);\n\t            })\n\t          ;\n\t        },\n\t\n\t        complete: function (event) {\n\t          module.debug('Animation complete', settings.animation);\n\t          module.remove.completeCallback();\n\t          module.remove.failSafe();\n\t          if(!module.is.looping()) {\n\t            if( module.is.outward() ) {\n\t              module.verbose('Animation is outward, hiding element');\n\t              module.restore.conditions();\n\t              module.hide();\n\t            }\n\t            else if( module.is.inward() ) {\n\t              module.verbose('Animation is outward, showing element');\n\t              module.restore.conditions();\n\t              module.show();\n\t            }\n\t            else {\n\t              module.verbose('Static animation completed');\n\t              module.restore.conditions();\n\t              settings.onComplete.call(element);\n\t            }\n\t          }\n\t        },\n\t\n\t        force: {\n\t          visible: function() {\n\t            var\n\t              style          = $module.attr('style'),\n\t              userStyle      = module.get.userStyle(),\n\t              displayType    = module.get.displayType(),\n\t              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\n\t              currentDisplay = $module.css('display'),\n\t              emptyStyle     = (style === undefined || style === '')\n\t            ;\n\t            if(currentDisplay !== displayType) {\n\t              module.verbose('Overriding default display to show element', displayType);\n\t              $module\n\t                .attr('style', overrideStyle)\n\t              ;\n\t            }\n\t            else if(emptyStyle) {\n\t              $module.removeAttr('style');\n\t            }\n\t          },\n\t          hidden: function() {\n\t            var\n\t              style          = $module.attr('style'),\n\t              currentDisplay = $module.css('display'),\n\t              emptyStyle     = (style === undefined || style === '')\n\t            ;\n\t            if(currentDisplay !== 'none' && !module.is.hidden()) {\n\t              module.verbose('Overriding default display to hide element');\n\t              $module\n\t                .css('display', 'none')\n\t              ;\n\t            }\n\t            else if(emptyStyle) {\n\t              $module\n\t                .removeAttr('style')\n\t              ;\n\t            }\n\t          }\n\t        },\n\t\n\t        has: {\n\t          direction: function(animation) {\n\t            var\n\t              hasDirection = false\n\t            ;\n\t            animation = animation || settings.animation;\n\t            if(typeof animation === 'string') {\n\t              animation = animation.split(' ');\n\t              $.each(animation, function(index, word){\n\t                if(word === className.inward || word === className.outward) {\n\t                  hasDirection = true;\n\t                }\n\t              });\n\t            }\n\t            return hasDirection;\n\t          },\n\t          inlineDisplay: function() {\n\t            var\n\t              style = $module.attr('style') || ''\n\t            ;\n\t            return $.isArray(style.match(/display.*?;/, ''));\n\t          }\n\t        },\n\t\n\t        set: {\n\t          animating: function(animation) {\n\t            var\n\t              animationClass,\n\t              direction\n\t            ;\n\t            // remove previous callbacks\n\t            module.remove.completeCallback();\n\t\n\t            // determine exact animation\n\t            animation      = animation || settings.animation;\n\t            animationClass = module.get.animationClass(animation);\n\t\n\t            // save animation class in cache to restore class names\n\t            module.save.animation(animationClass);\n\t\n\t            // override display if necessary so animation appears visibly\n\t            module.force.visible();\n\t\n\t            module.remove.hidden();\n\t            module.remove.direction();\n\t\n\t            module.start.animation(animationClass);\n\t\n\t          },\n\t          duration: function(animationName, duration) {\n\t            duration = duration || settings.duration;\n\t            duration = (typeof duration == 'number')\n\t              ? duration + 'ms'\n\t              : duration\n\t            ;\n\t            if(duration || duration === 0) {\n\t              module.verbose('Setting animation duration', duration);\n\t              $module\n\t                .css({\n\t                  'animation-duration':  duration\n\t                })\n\t              ;\n\t            }\n\t          },\n\t          direction: function(direction) {\n\t            direction = direction || module.get.direction();\n\t            if(direction == className.inward) {\n\t              module.set.inward();\n\t            }\n\t            else {\n\t              module.set.outward();\n\t            }\n\t          },\n\t          looping: function() {\n\t            module.debug('Transition set to loop');\n\t            $module\n\t              .addClass(className.looping)\n\t            ;\n\t          },\n\t          hidden: function() {\n\t            $module\n\t              .addClass(className.transition)\n\t              .addClass(className.hidden)\n\t            ;\n\t          },\n\t          inward: function() {\n\t            module.debug('Setting direction to inward');\n\t            $module\n\t              .removeClass(className.outward)\n\t              .addClass(className.inward)\n\t            ;\n\t          },\n\t          outward: function() {\n\t            module.debug('Setting direction to outward');\n\t            $module\n\t              .removeClass(className.inward)\n\t              .addClass(className.outward)\n\t            ;\n\t          },\n\t          visible: function() {\n\t            $module\n\t              .addClass(className.transition)\n\t              .addClass(className.visible)\n\t            ;\n\t          }\n\t        },\n\t\n\t        start: {\n\t          animation: function(animationClass) {\n\t            animationClass = animationClass || module.get.animationClass();\n\t            module.debug('Starting tween', animationClass);\n\t            $module\n\t              .addClass(animationClass)\n\t              .one(animationEnd + '.complete' + eventNamespace, module.complete)\n\t            ;\n\t            if(settings.useFailSafe) {\n\t              module.add.failSafe();\n\t            }\n\t            module.set.duration(settings.duration);\n\t            settings.onStart.call(element);\n\t          }\n\t        },\n\t\n\t        save: {\n\t          animation: function(animation) {\n\t            if(!module.cache) {\n\t              module.cache = {};\n\t            }\n\t            module.cache.animation = animation;\n\t          },\n\t          displayType: function(displayType) {\n\t            if(displayType !== 'none') {\n\t              $module.data(metadata.displayType, displayType);\n\t            }\n\t          },\n\t          transitionExists: function(animation, exists) {\n\t            $.fn.transition.exists[animation] = exists;\n\t            module.verbose('Saving existence of transition', animation, exists);\n\t          }\n\t        },\n\t\n\t        restore: {\n\t          conditions: function() {\n\t            var\n\t              animation = module.get.currentAnimation()\n\t            ;\n\t            if(animation) {\n\t              $module\n\t                .removeClass(animation)\n\t              ;\n\t              module.verbose('Removing animation class', module.cache);\n\t            }\n\t            module.remove.duration();\n\t          }\n\t        },\n\t\n\t        add: {\n\t          failSafe: function() {\n\t            var\n\t              duration = module.get.duration()\n\t            ;\n\t            module.timer = setTimeout(function() {\n\t              $module.triggerHandler(animationEnd);\n\t            }, duration + settings.failSafeDelay);\n\t            module.verbose('Adding fail safe timer', module.timer);\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          animating: function() {\n\t            $module.removeClass(className.animating);\n\t          },\n\t          animationCallbacks: function() {\n\t            module.remove.queueCallback();\n\t            module.remove.completeCallback();\n\t          },\n\t          queueCallback: function() {\n\t            $module.off('.queue' + eventNamespace);\n\t          },\n\t          completeCallback: function() {\n\t            $module.off('.complete' + eventNamespace);\n\t          },\n\t          display: function() {\n\t            $module.css('display', '');\n\t          },\n\t          direction: function() {\n\t            $module\n\t              .removeClass(className.inward)\n\t              .removeClass(className.outward)\n\t            ;\n\t          },\n\t          duration: function() {\n\t            $module\n\t              .css('animation-duration', '')\n\t            ;\n\t          },\n\t          failSafe: function() {\n\t            module.verbose('Removing fail safe timer', module.timer);\n\t            if(module.timer) {\n\t              clearTimeout(module.timer);\n\t            }\n\t          },\n\t          hidden: function() {\n\t            $module.removeClass(className.hidden);\n\t          },\n\t          visible: function() {\n\t            $module.removeClass(className.visible);\n\t          },\n\t          looping: function() {\n\t            module.debug('Transitions are no longer looping');\n\t            if( module.is.looping() ) {\n\t              module.reset();\n\t              $module\n\t                .removeClass(className.looping)\n\t              ;\n\t            }\n\t          },\n\t          transition: function() {\n\t            $module\n\t              .removeClass(className.visible)\n\t              .removeClass(className.hidden)\n\t            ;\n\t          }\n\t        },\n\t        get: {\n\t          settings: function(animation, duration, onComplete) {\n\t            // single settings object\n\t            if(typeof animation == 'object') {\n\t              return $.extend(true, {}, $.fn.transition.settings, animation);\n\t            }\n\t            // all arguments provided\n\t            else if(typeof onComplete == 'function') {\n\t              return $.extend({}, $.fn.transition.settings, {\n\t                animation  : animation,\n\t                onComplete : onComplete,\n\t                duration   : duration\n\t              });\n\t            }\n\t            // only duration provided\n\t            else if(typeof duration == 'string' || typeof duration == 'number') {\n\t              return $.extend({}, $.fn.transition.settings, {\n\t                animation : animation,\n\t                duration  : duration\n\t              });\n\t            }\n\t            // duration is actually settings object\n\t            else if(typeof duration == 'object') {\n\t              return $.extend({}, $.fn.transition.settings, duration, {\n\t                animation : animation\n\t              });\n\t            }\n\t            // duration is actually callback\n\t            else if(typeof duration == 'function') {\n\t              return $.extend({}, $.fn.transition.settings, {\n\t                animation  : animation,\n\t                onComplete : duration\n\t              });\n\t            }\n\t            // only animation provided\n\t            else {\n\t              return $.extend({}, $.fn.transition.settings, {\n\t                animation : animation\n\t              });\n\t            }\n\t          },\n\t          animationClass: function(animation) {\n\t            var\n\t              animationClass = animation || settings.animation,\n\t              directionClass = (module.can.transition() && !module.has.direction())\n\t                ? module.get.direction() + ' '\n\t                : ''\n\t            ;\n\t            return className.animating + ' '\n\t              + className.transition + ' '\n\t              + directionClass\n\t              + animationClass\n\t            ;\n\t          },\n\t          currentAnimation: function() {\n\t            return (module.cache && module.cache.animation !== undefined)\n\t              ? module.cache.animation\n\t              : false\n\t            ;\n\t          },\n\t          currentDirection: function() {\n\t            return module.is.inward()\n\t              ? className.inward\n\t              : className.outward\n\t            ;\n\t          },\n\t          direction: function() {\n\t            return module.is.hidden() || !module.is.visible()\n\t              ? className.inward\n\t              : className.outward\n\t            ;\n\t          },\n\t          animationDirection: function(animation) {\n\t            var\n\t              direction\n\t            ;\n\t            animation = animation || settings.animation;\n\t            if(typeof animation === 'string') {\n\t              animation = animation.split(' ');\n\t              // search animation name for out/in class\n\t              $.each(animation, function(index, word){\n\t                if(word === className.inward) {\n\t                  direction = className.inward;\n\t                }\n\t                else if(word === className.outward) {\n\t                  direction = className.outward;\n\t                }\n\t              });\n\t            }\n\t            // return found direction\n\t            if(direction) {\n\t              return direction;\n\t            }\n\t            return false;\n\t          },\n\t          duration: function(duration) {\n\t            duration = duration || settings.duration;\n\t            if(duration === false) {\n\t              duration = $module.css('animation-duration') || 0;\n\t            }\n\t            return (typeof duration === 'string')\n\t              ? (duration.indexOf('ms') > -1)\n\t                ? parseFloat(duration)\n\t                : parseFloat(duration) * 1000\n\t              : duration\n\t            ;\n\t          },\n\t          displayType: function(shouldDetermine) {\n\t            shouldDetermine = (shouldDetermine !== undefined)\n\t              ? shouldDetermine\n\t              : true\n\t            ;\n\t            if(settings.displayType) {\n\t              return settings.displayType;\n\t            }\n\t            if(shouldDetermine && $module.data(metadata.displayType) === undefined) {\n\t              // create fake element to determine display state\n\t              module.can.transition(true);\n\t            }\n\t            return $module.data(metadata.displayType);\n\t          },\n\t          userStyle: function(style) {\n\t            style = style || $module.attr('style') || '';\n\t            return style.replace(/display.*?;/, '');\n\t          },\n\t          transitionExists: function(animation) {\n\t            return $.fn.transition.exists[animation];\n\t          },\n\t          animationStartEvent: function() {\n\t            var\n\t              element     = document.createElement('div'),\n\t              animations  = {\n\t                'animation'       :'animationstart',\n\t                'OAnimation'      :'oAnimationStart',\n\t                'MozAnimation'    :'mozAnimationStart',\n\t                'WebkitAnimation' :'webkitAnimationStart'\n\t              },\n\t              animation\n\t            ;\n\t            for(animation in animations){\n\t              if( element.style[animation] !== undefined ){\n\t                return animations[animation];\n\t              }\n\t            }\n\t            return false;\n\t          },\n\t          animationEndEvent: function() {\n\t            var\n\t              element     = document.createElement('div'),\n\t              animations  = {\n\t                'animation'       :'animationend',\n\t                'OAnimation'      :'oAnimationEnd',\n\t                'MozAnimation'    :'mozAnimationEnd',\n\t                'WebkitAnimation' :'webkitAnimationEnd'\n\t              },\n\t              animation\n\t            ;\n\t            for(animation in animations){\n\t              if( element.style[animation] !== undefined ){\n\t                return animations[animation];\n\t              }\n\t            }\n\t            return false;\n\t          }\n\t\n\t        },\n\t\n\t        can: {\n\t          transition: function(forced) {\n\t            var\n\t              animation         = settings.animation,\n\t              transitionExists  = module.get.transitionExists(animation),\n\t              displayType       = module.get.displayType(false),\n\t              elementClass,\n\t              tagName,\n\t              $clone,\n\t              currentAnimation,\n\t              inAnimation,\n\t              directionExists\n\t            ;\n\t            if( transitionExists === undefined || forced) {\n\t              module.verbose('Determining whether animation exists');\n\t              elementClass = $module.attr('class');\n\t              tagName      = $module.prop('tagName');\n\t\n\t              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\n\t              currentAnimation = $clone\n\t                .addClass(animation)\n\t                .removeClass(className.inward)\n\t                .removeClass(className.outward)\n\t                .addClass(className.animating)\n\t                .addClass(className.transition)\n\t                .css('animationName')\n\t              ;\n\t              inAnimation = $clone\n\t                .addClass(className.inward)\n\t                .css('animationName')\n\t              ;\n\t              if(!displayType) {\n\t                displayType = $clone\n\t                  .attr('class', elementClass)\n\t                  .removeAttr('style')\n\t                  .removeClass(className.hidden)\n\t                  .removeClass(className.visible)\n\t                  .show()\n\t                  .css('display')\n\t                ;\n\t                module.verbose('Determining final display state', displayType);\n\t                module.save.displayType(displayType);\n\t              }\n\t\n\t              $clone.remove();\n\t              if(currentAnimation != inAnimation) {\n\t                module.debug('Direction exists for animation', animation);\n\t                directionExists = true;\n\t              }\n\t              else if(currentAnimation == 'none' || !currentAnimation) {\n\t                module.debug('No animation defined in css', animation);\n\t                return;\n\t              }\n\t              else {\n\t                module.debug('Static animation found', animation, displayType);\n\t                directionExists = false;\n\t              }\n\t              module.save.transitionExists(animation, directionExists);\n\t            }\n\t            return (transitionExists !== undefined)\n\t              ? transitionExists\n\t              : directionExists\n\t            ;\n\t          },\n\t          animate: function() {\n\t            // can transition does not return a value if animation does not exist\n\t            return (module.can.transition() !== undefined);\n\t          }\n\t        },\n\t\n\t        is: {\n\t          animating: function() {\n\t            return $module.hasClass(className.animating);\n\t          },\n\t          inward: function() {\n\t            return $module.hasClass(className.inward);\n\t          },\n\t          outward: function() {\n\t            return $module.hasClass(className.outward);\n\t          },\n\t          looping: function() {\n\t            return $module.hasClass(className.looping);\n\t          },\n\t          occurring: function(animation) {\n\t            animation = animation || settings.animation;\n\t            animation = '.' + animation.replace(' ', '.');\n\t            return ( $module.filter(animation).length > 0 );\n\t          },\n\t          visible: function() {\n\t            return $module.is(':visible');\n\t          },\n\t          hidden: function() {\n\t            return $module.css('visibility') === 'hidden';\n\t          },\n\t          supported: function() {\n\t            return(animationEnd !== false);\n\t          }\n\t        },\n\t\n\t        hide: function() {\n\t          module.verbose('Hiding element');\n\t          if( module.is.animating() ) {\n\t            module.reset();\n\t          }\n\t          element.blur(); // IE will trigger focus change if element is not blurred before hiding\n\t          module.remove.display();\n\t          module.remove.visible();\n\t          module.set.hidden();\n\t          module.force.hidden();\n\t          settings.onHide.call(element);\n\t          settings.onComplete.call(element);\n\t          // module.repaint();\n\t        },\n\t\n\t        show: function(display) {\n\t          module.verbose('Showing element', display);\n\t          module.remove.hidden();\n\t          module.set.visible();\n\t          module.force.visible();\n\t          settings.onShow.call(element);\n\t          settings.onComplete.call(element);\n\t          // module.repaint();\n\t        },\n\t\n\t        toggle: function() {\n\t          if( module.is.visible() ) {\n\t            module.hide();\n\t          }\n\t          else {\n\t            module.show();\n\t          }\n\t        },\n\t\n\t        stop: function() {\n\t          module.debug('Stopping current animation');\n\t          $module.triggerHandler(animationEnd);\n\t        },\n\t\n\t        stopAll: function() {\n\t          module.debug('Stopping all animation');\n\t          module.remove.queueCallback();\n\t          $module.triggerHandler(animationEnd);\n\t        },\n\t\n\t        clear: {\n\t          queue: function() {\n\t            module.debug('Clearing animation queue');\n\t            module.remove.queueCallback();\n\t          }\n\t        },\n\t\n\t        enable: function() {\n\t          module.verbose('Starting animation');\n\t          $module.removeClass(className.disabled);\n\t        },\n\t\n\t        disable: function() {\n\t          module.debug('Stopping animation');\n\t          $module.addClass(className.disabled);\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if($allModules.length > 1) {\n\t              title += ' ' + '(' + $allModules.length + ')';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        // modified for transition to return invoke success\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return (found !== undefined)\n\t            ? found\n\t            : false\n\t          ;\n\t        }\n\t      };\n\t      module.initialize();\n\t    })\n\t  ;\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t// Records if CSS transition is available\n\t$.fn.transition.exists = {};\n\t\n\t$.fn.transition.settings = {\n\t\n\t  // module info\n\t  name          : 'Transition',\n\t\n\t  // hide all output from this component regardless of other settings\n\t  silent        : false,\n\t\n\t  // debug content outputted to console\n\t  debug         : false,\n\t\n\t  // verbose debug output\n\t  verbose       : false,\n\t\n\t  // performance data output\n\t  performance   : true,\n\t\n\t  // event namespace\n\t  namespace     : 'transition',\n\t\n\t  // delay between animations in group\n\t  interval      : 0,\n\t\n\t  // whether group animations should be reversed\n\t  reverse       : 'auto',\n\t\n\t  // animation callback event\n\t  onStart       : function() {},\n\t  onComplete    : function() {},\n\t  onShow        : function() {},\n\t  onHide        : function() {},\n\t\n\t  // whether timeout should be used to ensure callback fires in cases animationend does not\n\t  useFailSafe   : true,\n\t\n\t  // delay in ms for fail safe\n\t  failSafeDelay : 100,\n\t\n\t  // whether EXACT animation can occur twice in a row\n\t  allowRepeats  : false,\n\t\n\t  // Override final display type on visible\n\t  displayType   : false,\n\t\n\t  // animation duration\n\t  animation     : 'fade',\n\t  duration      : false,\n\t\n\t  // new animations will occur after previous ones\n\t  queue         : true,\n\t\n\t  metadata : {\n\t    displayType: 'display'\n\t  },\n\t\n\t  className   : {\n\t    animating  : 'animating',\n\t    disabled   : 'disabled',\n\t    hidden     : 'hidden',\n\t    inward     : 'in',\n\t    loading    : 'loading',\n\t    looping    : 'looping',\n\t    outward    : 'out',\n\t    transition : 'transition',\n\t    visible    : 'visible'\n\t  },\n\t\n\t  // possible errors\n\t  error: {\n\t    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\n\t    repeated    : 'That animation is already occurring, cancelling repeated animation',\n\t    method      : 'The method you called is not defined',\n\t    support     : 'This browser does not support CSS animations'\n\t  }\n\t\n\t};\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - API\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\tvar\n\t  window = (typeof window != 'undefined' && window.Math == Math)\n\t    ? window\n\t    : (typeof self != 'undefined' && self.Math == Math)\n\t      ? self\n\t      : Function('return this')()\n\t;\n\t\n\t$.api = $.fn.api = function(parameters) {\n\t\n\t  var\n\t    // use window context if none specified\n\t    $allModules     = $.isFunction(this)\n\t        ? $(window)\n\t        : $(this),\n\t    moduleSelector = $allModules.selector || '',\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t\n\t    returnedValue\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings          = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.api.settings, parameters)\n\t          : $.extend({}, $.fn.api.settings),\n\t\n\t        // internal aliases\n\t        namespace       = settings.namespace,\n\t        metadata        = settings.metadata,\n\t        selector        = settings.selector,\n\t        error           = settings.error,\n\t        className       = settings.className,\n\t\n\t        // define namespaces for modules\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        // element that creates request\n\t        $module         = $(this),\n\t        $form           = $module.closest(selector.form),\n\t\n\t        // context used for state\n\t        $context        = (settings.stateContext)\n\t          ? $(settings.stateContext)\n\t          : $module,\n\t\n\t        // request details\n\t        ajaxSettings,\n\t        requestSettings,\n\t        url,\n\t        data,\n\t        requestStartTime,\n\t\n\t        // standard module\n\t        element         = this,\n\t        context         = $context[0],\n\t        instance        = $module.data(moduleNamespace),\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          if(!methodInvoked) {\n\t            module.bind.events();\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, instance)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module for', element);\n\t          $module\n\t            .removeData(moduleNamespace)\n\t            .off(eventNamespace)\n\t          ;\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            var\n\t              triggerEvent = module.get.event()\n\t            ;\n\t            if( triggerEvent ) {\n\t              module.verbose('Attaching API events to element', triggerEvent);\n\t              $module\n\t                .on(triggerEvent + eventNamespace, module.event.trigger)\n\t              ;\n\t            }\n\t            else if(settings.on == 'now') {\n\t              module.debug('Querying API endpoint immediately');\n\t              module.query();\n\t            }\n\t          }\n\t        },\n\t\n\t        decode: {\n\t          json: function(response) {\n\t            if(response !== undefined && typeof response == 'string') {\n\t              try {\n\t               response = JSON.parse(response);\n\t              }\n\t              catch(e) {\n\t                // isnt json string\n\t              }\n\t            }\n\t            return response;\n\t          }\n\t        },\n\t\n\t        read: {\n\t          cachedResponse: function(url) {\n\t            var\n\t              response\n\t            ;\n\t            if(window.Storage === undefined) {\n\t              module.error(error.noStorage);\n\t              return;\n\t            }\n\t            response = sessionStorage.getItem(url);\n\t            module.debug('Using cached response', url, response);\n\t            response = module.decode.json(response);\n\t            return response;\n\t          }\n\t        },\n\t        write: {\n\t          cachedResponse: function(url, response) {\n\t            if(response && response === '') {\n\t              module.debug('Response empty, not caching', response);\n\t              return;\n\t            }\n\t            if(window.Storage === undefined) {\n\t              module.error(error.noStorage);\n\t              return;\n\t            }\n\t            if( $.isPlainObject(response) ) {\n\t              response = JSON.stringify(response);\n\t            }\n\t            sessionStorage.setItem(url, response);\n\t            module.verbose('Storing cached response for url', url, response);\n\t          }\n\t        },\n\t\n\t        query: function() {\n\t\n\t          if(module.is.disabled()) {\n\t            module.debug('Element is disabled API request aborted');\n\t            return;\n\t          }\n\t\n\t          if(module.is.loading()) {\n\t            if(settings.interruptRequests) {\n\t              module.debug('Interrupting previous request');\n\t              module.abort();\n\t            }\n\t            else {\n\t              module.debug('Cancelling request, previous request is still pending');\n\t              return;\n\t            }\n\t          }\n\t\n\t          // pass element metadata to url (value, text)\n\t          if(settings.defaultData) {\n\t            $.extend(true, settings.urlData, module.get.defaultData());\n\t          }\n\t\n\t          // Add form content\n\t          if(settings.serializeForm) {\n\t            settings.data = module.add.formData(settings.data);\n\t          }\n\t\n\t          // call beforesend and get any settings changes\n\t          requestSettings = module.get.settings();\n\t\n\t          // check if before send cancelled request\n\t          if(requestSettings === false) {\n\t            module.cancelled = true;\n\t            module.error(error.beforeSend);\n\t            return;\n\t          }\n\t          else {\n\t            module.cancelled = false;\n\t          }\n\t\n\t          // get url\n\t          url = module.get.templatedURL();\n\t\n\t          if(!url && !module.is.mocked()) {\n\t            module.error(error.missingURL);\n\t            return;\n\t          }\n\t\n\t          // replace variables\n\t          url = module.add.urlData( url );\n\t          // missing url parameters\n\t          if( !url && !module.is.mocked()) {\n\t            return;\n\t          }\n\t\n\t          requestSettings.url = settings.base + url;\n\t\n\t          // look for jQuery ajax parameters in settings\n\t          ajaxSettings = $.extend(true, {}, settings, {\n\t            type       : settings.method || settings.type,\n\t            data       : data,\n\t            url        : settings.base + url,\n\t            beforeSend : settings.beforeXHR,\n\t            success    : function() {},\n\t            failure    : function() {},\n\t            complete   : function() {}\n\t          });\n\t\n\t          module.debug('Querying URL', ajaxSettings.url);\n\t          module.verbose('Using AJAX settings', ajaxSettings);\n\t          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\n\t            module.debug('Response returned from local cache');\n\t            module.request = module.create.request();\n\t            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\n\t            return;\n\t          }\n\t\n\t          if( !settings.throttle ) {\n\t            module.debug('Sending request', data, ajaxSettings.method);\n\t            module.send.request();\n\t          }\n\t          else {\n\t            if(!settings.throttleFirstRequest && !module.timer) {\n\t              module.debug('Sending request', data, ajaxSettings.method);\n\t              module.send.request();\n\t              module.timer = setTimeout(function(){}, settings.throttle);\n\t            }\n\t            else {\n\t              module.debug('Throttling request', settings.throttle);\n\t              clearTimeout(module.timer);\n\t              module.timer = setTimeout(function() {\n\t                if(module.timer) {\n\t                  delete module.timer;\n\t                }\n\t                module.debug('Sending throttled request', data, ajaxSettings.method);\n\t                module.send.request();\n\t              }, settings.throttle);\n\t            }\n\t          }\n\t\n\t        },\n\t\n\t        should: {\n\t          removeError: function() {\n\t            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\n\t          }\n\t        },\n\t\n\t        is: {\n\t          disabled: function() {\n\t            return ($module.filter(selector.disabled).length > 0);\n\t          },\n\t          expectingJSON: function() {\n\t            return settings.dataType === 'json' || settings.dataType === 'jsonp';\n\t          },\n\t          form: function() {\n\t            return $module.is('form') || $context.is('form');\n\t          },\n\t          mocked: function() {\n\t            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\n\t          },\n\t          input: function() {\n\t            return $module.is('input');\n\t          },\n\t          loading: function() {\n\t            return (module.request)\n\t              ? (module.request.state() == 'pending')\n\t              : false\n\t            ;\n\t          },\n\t          abortedRequest: function(xhr) {\n\t            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\n\t              module.verbose('XHR request determined to be aborted');\n\t              return true;\n\t            }\n\t            else {\n\t              module.verbose('XHR request was not aborted');\n\t              return false;\n\t            }\n\t          },\n\t          validResponse: function(response) {\n\t            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\n\t              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\n\t              return true;\n\t            }\n\t            module.debug('Checking JSON returned success', settings.successTest, response);\n\t            if( settings.successTest(response) ) {\n\t              module.debug('Response passed success test', response);\n\t              return true;\n\t            }\n\t            else {\n\t              module.debug('Response failed success test', response);\n\t              return false;\n\t            }\n\t          }\n\t        },\n\t\n\t        was: {\n\t          cancelled: function() {\n\t            return (module.cancelled || false);\n\t          },\n\t          succesful: function() {\n\t            return (module.request && module.request.state() == 'resolved');\n\t          },\n\t          failure: function() {\n\t            return (module.request && module.request.state() == 'rejected');\n\t          },\n\t          complete: function() {\n\t            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\n\t          }\n\t        },\n\t\n\t        add: {\n\t          urlData: function(url, urlData) {\n\t            var\n\t              requiredVariables,\n\t              optionalVariables\n\t            ;\n\t            if(url) {\n\t              requiredVariables = url.match(settings.regExp.required);\n\t              optionalVariables = url.match(settings.regExp.optional);\n\t              urlData           = urlData || settings.urlData;\n\t              if(requiredVariables) {\n\t                module.debug('Looking for required URL variables', requiredVariables);\n\t                $.each(requiredVariables, function(index, templatedString) {\n\t                  var\n\t                    // allow legacy {$var} style\n\t                    variable = (templatedString.indexOf('$') !== -1)\n\t                      ? templatedString.substr(2, templatedString.length - 3)\n\t                      : templatedString.substr(1, templatedString.length - 2),\n\t                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n\t                      ? urlData[variable]\n\t                      : ($module.data(variable) !== undefined)\n\t                        ? $module.data(variable)\n\t                        : ($context.data(variable) !== undefined)\n\t                          ? $context.data(variable)\n\t                          : urlData[variable]\n\t                  ;\n\t                  // remove value\n\t                  if(value === undefined) {\n\t                    module.error(error.requiredParameter, variable, url);\n\t                    url = false;\n\t                    return false;\n\t                  }\n\t                  else {\n\t                    module.verbose('Found required variable', variable, value);\n\t                    value = (settings.encodeParameters)\n\t                      ? module.get.urlEncodedValue(value)\n\t                      : value\n\t                    ;\n\t                    url = url.replace(templatedString, value);\n\t                  }\n\t                });\n\t              }\n\t              if(optionalVariables) {\n\t                module.debug('Looking for optional URL variables', requiredVariables);\n\t                $.each(optionalVariables, function(index, templatedString) {\n\t                  var\n\t                    // allow legacy {/$var} style\n\t                    variable = (templatedString.indexOf('$') !== -1)\n\t                      ? templatedString.substr(3, templatedString.length - 4)\n\t                      : templatedString.substr(2, templatedString.length - 3),\n\t                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n\t                      ? urlData[variable]\n\t                      : ($module.data(variable) !== undefined)\n\t                        ? $module.data(variable)\n\t                        : ($context.data(variable) !== undefined)\n\t                          ? $context.data(variable)\n\t                          : urlData[variable]\n\t                  ;\n\t                  // optional replacement\n\t                  if(value !== undefined) {\n\t                    module.verbose('Optional variable Found', variable, value);\n\t                    url = url.replace(templatedString, value);\n\t                  }\n\t                  else {\n\t                    module.verbose('Optional variable not found', variable);\n\t                    // remove preceding slash if set\n\t                    if(url.indexOf('/' + templatedString) !== -1) {\n\t                      url = url.replace('/' + templatedString, '');\n\t                    }\n\t                    else {\n\t                      url = url.replace(templatedString, '');\n\t                    }\n\t                  }\n\t                });\n\t              }\n\t            }\n\t            return url;\n\t          },\n\t          formData: function(data) {\n\t            var\n\t              canSerialize = ($.fn.serializeObject !== undefined),\n\t              formData     = (canSerialize)\n\t                ? $form.serializeObject()\n\t                : $form.serialize(),\n\t              hasOtherData\n\t            ;\n\t            data         = data || settings.data;\n\t            hasOtherData = $.isPlainObject(data);\n\t\n\t            if(hasOtherData) {\n\t              if(canSerialize) {\n\t                module.debug('Extending existing data with form data', data, formData);\n\t                data = $.extend(true, {}, data, formData);\n\t              }\n\t              else {\n\t                module.error(error.missingSerialize);\n\t                module.debug('Cant extend data. Replacing data with form data', data, formData);\n\t                data = formData;\n\t              }\n\t            }\n\t            else {\n\t              module.debug('Adding form data', formData);\n\t              data = formData;\n\t            }\n\t            return data;\n\t          }\n\t        },\n\t\n\t        send: {\n\t          request: function() {\n\t            module.set.loading();\n\t            module.request = module.create.request();\n\t            if( module.is.mocked() ) {\n\t              module.mockedXHR = module.create.mockedXHR();\n\t            }\n\t            else {\n\t              module.xhr = module.create.xhr();\n\t            }\n\t            settings.onRequest.call(context, module.request, module.xhr);\n\t          }\n\t        },\n\t\n\t        event: {\n\t          trigger: function(event) {\n\t            module.query();\n\t            if(event.type == 'submit' || event.type == 'click') {\n\t              event.preventDefault();\n\t            }\n\t          },\n\t          xhr: {\n\t            always: function() {\n\t              // nothing special\n\t            },\n\t            done: function(response, textStatus, xhr) {\n\t              var\n\t                context            = this,\n\t                elapsedTime        = (new Date().getTime() - requestStartTime),\n\t                timeLeft           = (settings.loadingDuration - elapsedTime),\n\t                translatedResponse = ( $.isFunction(settings.onResponse) )\n\t                  ? module.is.expectingJSON()\n\t                    ? settings.onResponse.call(context, $.extend(true, {}, response))\n\t                    : settings.onResponse.call(context, response)\n\t                  : false\n\t              ;\n\t              timeLeft = (timeLeft > 0)\n\t                ? timeLeft\n\t                : 0\n\t              ;\n\t              if(translatedResponse) {\n\t                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\n\t                response = translatedResponse;\n\t              }\n\t              if(timeLeft > 0) {\n\t                module.debug('Response completed early delaying state change by', timeLeft);\n\t              }\n\t              setTimeout(function() {\n\t                if( module.is.validResponse(response) ) {\n\t                  module.request.resolveWith(context, [response, xhr]);\n\t                }\n\t                else {\n\t                  module.request.rejectWith(context, [xhr, 'invalid']);\n\t                }\n\t              }, timeLeft);\n\t            },\n\t            fail: function(xhr, status, httpMessage) {\n\t              var\n\t                context     = this,\n\t                elapsedTime = (new Date().getTime() - requestStartTime),\n\t                timeLeft    = (settings.loadingDuration - elapsedTime)\n\t              ;\n\t              timeLeft = (timeLeft > 0)\n\t                ? timeLeft\n\t                : 0\n\t              ;\n\t              if(timeLeft > 0) {\n\t                module.debug('Response completed early delaying state change by', timeLeft);\n\t              }\n\t              setTimeout(function() {\n\t                if( module.is.abortedRequest(xhr) ) {\n\t                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\n\t                }\n\t                else {\n\t                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\n\t                }\n\t              }, timeLeft);\n\t            }\n\t          },\n\t          request: {\n\t            done: function(response, xhr) {\n\t              module.debug('Successful API Response', response);\n\t              if(settings.cache === 'local' && url) {\n\t                module.write.cachedResponse(url, response);\n\t                module.debug('Saving server response locally', module.cache);\n\t              }\n\t              settings.onSuccess.call(context, response, $module, xhr);\n\t            },\n\t            complete: function(firstParameter, secondParameter) {\n\t              var\n\t                xhr,\n\t                response\n\t              ;\n\t              // have to guess callback parameters based on request success\n\t              if( module.was.succesful() ) {\n\t                response = firstParameter;\n\t                xhr      = secondParameter;\n\t              }\n\t              else {\n\t                xhr      = firstParameter;\n\t                response = module.get.responseFromXHR(xhr);\n\t              }\n\t              module.remove.loading();\n\t              settings.onComplete.call(context, response, $module, xhr);\n\t            },\n\t            fail: function(xhr, status, httpMessage) {\n\t              var\n\t                // pull response from xhr if available\n\t                response     = module.get.responseFromXHR(xhr),\n\t                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\n\t              ;\n\t              if(status == 'aborted') {\n\t                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\n\t                settings.onAbort.call(context, status, $module, xhr);\n\t                return true;\n\t              }\n\t              else if(status == 'invalid') {\n\t                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\n\t              }\n\t              else if(status == 'error') {\n\t                if(xhr !== undefined) {\n\t                  module.debug('XHR produced a server error', status, httpMessage);\n\t                  // make sure we have an error to display to console\n\t                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\n\t                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\n\t                  }\n\t                  settings.onError.call(context, errorMessage, $module, xhr);\n\t                }\n\t              }\n\t\n\t              if(settings.errorDuration && status !== 'aborted') {\n\t                module.debug('Adding error state');\n\t                module.set.error();\n\t                if( module.should.removeError() ) {\n\t                  setTimeout(module.remove.error, settings.errorDuration);\n\t                }\n\t              }\n\t              module.debug('API Request failed', errorMessage, xhr);\n\t              settings.onFailure.call(context, response, $module, xhr);\n\t            }\n\t          }\n\t        },\n\t\n\t        create: {\n\t\n\t          request: function() {\n\t            // api request promise\n\t            return $.Deferred()\n\t              .always(module.event.request.complete)\n\t              .done(module.event.request.done)\n\t              .fail(module.event.request.fail)\n\t            ;\n\t          },\n\t\n\t          mockedXHR: function () {\n\t            var\n\t              // xhr does not simulate these properties of xhr but must return them\n\t              textStatus     = false,\n\t              status         = false,\n\t              httpMessage    = false,\n\t              responder      = settings.mockResponse      || settings.response,\n\t              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\n\t              asyncCallback,\n\t              response,\n\t              mockedXHR\n\t            ;\n\t\n\t            mockedXHR = $.Deferred()\n\t              .always(module.event.xhr.complete)\n\t              .done(module.event.xhr.done)\n\t              .fail(module.event.xhr.fail)\n\t            ;\n\t\n\t            if(responder) {\n\t              if( $.isFunction(responder) ) {\n\t                module.debug('Using specified synchronous callback', responder);\n\t                response = responder.call(context, requestSettings);\n\t              }\n\t              else {\n\t                module.debug('Using settings specified response', responder);\n\t                response = responder;\n\t              }\n\t              // simulating response\n\t              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n\t            }\n\t            else if( $.isFunction(asyncResponder) ) {\n\t              asyncCallback = function(response) {\n\t                module.debug('Async callback returned response', response);\n\t\n\t                if(response) {\n\t                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n\t                }\n\t                else {\n\t                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\n\t                }\n\t              };\n\t              module.debug('Using specified async response callback', asyncResponder);\n\t              asyncResponder.call(context, requestSettings, asyncCallback);\n\t            }\n\t            return mockedXHR;\n\t          },\n\t\n\t          xhr: function() {\n\t            var\n\t              xhr\n\t            ;\n\t            // ajax request promise\n\t            xhr = $.ajax(ajaxSettings)\n\t              .always(module.event.xhr.always)\n\t              .done(module.event.xhr.done)\n\t              .fail(module.event.xhr.fail)\n\t            ;\n\t            module.verbose('Created server request', xhr, ajaxSettings);\n\t            return xhr;\n\t          }\n\t        },\n\t\n\t        set: {\n\t          error: function() {\n\t            module.verbose('Adding error state to element', $context);\n\t            $context.addClass(className.error);\n\t          },\n\t          loading: function() {\n\t            module.verbose('Adding loading state to element', $context);\n\t            $context.addClass(className.loading);\n\t            requestStartTime = new Date().getTime();\n\t          }\n\t        },\n\t\n\t        remove: {\n\t          error: function() {\n\t            module.verbose('Removing error state from element', $context);\n\t            $context.removeClass(className.error);\n\t          },\n\t          loading: function() {\n\t            module.verbose('Removing loading state from element', $context);\n\t            $context.removeClass(className.loading);\n\t          }\n\t        },\n\t\n\t        get: {\n\t          responseFromXHR: function(xhr) {\n\t            return $.isPlainObject(xhr)\n\t              ? (module.is.expectingJSON())\n\t                ? module.decode.json(xhr.responseText)\n\t                : xhr.responseText\n\t              : false\n\t            ;\n\t          },\n\t          errorFromRequest: function(response, status, httpMessage) {\n\t            return ($.isPlainObject(response) && response.error !== undefined)\n\t              ? response.error // use json error message\n\t              : (settings.error[status] !== undefined) // use server error message\n\t                ? settings.error[status]\n\t                : httpMessage\n\t            ;\n\t          },\n\t          request: function() {\n\t            return module.request || false;\n\t          },\n\t          xhr: function() {\n\t            return module.xhr || false;\n\t          },\n\t          settings: function() {\n\t            var\n\t              runSettings\n\t            ;\n\t            runSettings = settings.beforeSend.call(context, settings);\n\t            if(runSettings) {\n\t              if(runSettings.success !== undefined) {\n\t                module.debug('Legacy success callback detected', runSettings);\n\t                module.error(error.legacyParameters, runSettings.success);\n\t                runSettings.onSuccess = runSettings.success;\n\t              }\n\t              if(runSettings.failure !== undefined) {\n\t                module.debug('Legacy failure callback detected', runSettings);\n\t                module.error(error.legacyParameters, runSettings.failure);\n\t                runSettings.onFailure = runSettings.failure;\n\t              }\n\t              if(runSettings.complete !== undefined) {\n\t                module.debug('Legacy complete callback detected', runSettings);\n\t                module.error(error.legacyParameters, runSettings.complete);\n\t                runSettings.onComplete = runSettings.complete;\n\t              }\n\t            }\n\t            if(runSettings === undefined) {\n\t              module.error(error.noReturnedValue);\n\t            }\n\t            if(runSettings === false) {\n\t              return runSettings;\n\t            }\n\t            return (runSettings !== undefined)\n\t              ? $.extend(true, {}, runSettings)\n\t              : $.extend(true, {}, settings)\n\t            ;\n\t          },\n\t          urlEncodedValue: function(value) {\n\t            var\n\t              decodedValue   = window.decodeURIComponent(value),\n\t              encodedValue   = window.encodeURIComponent(value),\n\t              alreadyEncoded = (decodedValue !== value)\n\t            ;\n\t            if(alreadyEncoded) {\n\t              module.debug('URL value is already encoded, avoiding double encoding', value);\n\t              return value;\n\t            }\n\t            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\n\t            return encodedValue;\n\t          },\n\t          defaultData: function() {\n\t            var\n\t              data = {}\n\t            ;\n\t            if( !$.isWindow(element) ) {\n\t              if( module.is.input() ) {\n\t                data.value = $module.val();\n\t              }\n\t              else if( module.is.form() ) {\n\t\n\t              }\n\t              else {\n\t                data.text = $module.text();\n\t              }\n\t            }\n\t            return data;\n\t          },\n\t          event: function() {\n\t            if( $.isWindow(element) || settings.on == 'now' ) {\n\t              module.debug('API called without element, no events attached');\n\t              return false;\n\t            }\n\t            else if(settings.on == 'auto') {\n\t              if( $module.is('input') ) {\n\t                return (element.oninput !== undefined)\n\t                  ? 'input'\n\t                  : (element.onpropertychange !== undefined)\n\t                    ? 'propertychange'\n\t                    : 'keyup'\n\t                ;\n\t              }\n\t              else if( $module.is('form') ) {\n\t                return 'submit';\n\t              }\n\t              else {\n\t                return 'click';\n\t              }\n\t            }\n\t            else {\n\t              return settings.on;\n\t            }\n\t          },\n\t          templatedURL: function(action) {\n\t            action = action || $module.data(metadata.action) || settings.action || false;\n\t            url    = $module.data(metadata.url) || settings.url || false;\n\t            if(url) {\n\t              module.debug('Using specified url', url);\n\t              return url;\n\t            }\n\t            if(action) {\n\t              module.debug('Looking up url for action', action, settings.api);\n\t              if(settings.api[action] === undefined && !module.is.mocked()) {\n\t                module.error(error.missingAction, settings.action, settings.api);\n\t                return;\n\t              }\n\t              url = settings.api[action];\n\t            }\n\t            else if( module.is.form() ) {\n\t              url = $module.attr('action') || $context.attr('action') || false;\n\t              module.debug('No url or action specified, defaulting to form action', url);\n\t            }\n\t            return url;\n\t          }\n\t        },\n\t\n\t        abort: function() {\n\t          var\n\t            xhr = module.get.xhr()\n\t          ;\n\t          if( xhr && xhr.state() !== 'resolved') {\n\t            module.debug('Cancelling API request');\n\t            xhr.abort();\n\t          }\n\t        },\n\t\n\t        // reset state\n\t        reset: function() {\n\t          module.remove.error();\n\t          module.remove.loading();\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                //'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.api.settings = {\n\t\n\t  name              : 'API',\n\t  namespace         : 'api',\n\t\n\t  debug             : false,\n\t  verbose           : false,\n\t  performance       : true,\n\t\n\t  // object containing all templates endpoints\n\t  api               : {},\n\t\n\t  // whether to cache responses\n\t  cache             : true,\n\t\n\t  // whether new requests should abort previous requests\n\t  interruptRequests : true,\n\t\n\t  // event binding\n\t  on                : 'auto',\n\t\n\t  // context for applying state classes\n\t  stateContext      : false,\n\t\n\t  // duration for loading state\n\t  loadingDuration   : 0,\n\t\n\t  // whether to hide errors after a period of time\n\t  hideError         : 'auto',\n\t\n\t  // duration for error state\n\t  errorDuration     : 2000,\n\t\n\t  // whether parameters should be encoded with encodeURIComponent\n\t  encodeParameters  : true,\n\t\n\t  // API action to use\n\t  action            : false,\n\t\n\t  // templated URL to use\n\t  url               : false,\n\t\n\t  // base URL to apply to all endpoints\n\t  base              : '',\n\t\n\t  // data that will\n\t  urlData           : {},\n\t\n\t  // whether to add default data to url data\n\t  defaultData          : true,\n\t\n\t  // whether to serialize closest form\n\t  serializeForm        : false,\n\t\n\t  // how long to wait before request should occur\n\t  throttle             : 0,\n\t\n\t  // whether to throttle first request or only repeated\n\t  throttleFirstRequest : true,\n\t\n\t  // standard ajax settings\n\t  method            : 'get',\n\t  data              : {},\n\t  dataType          : 'json',\n\t\n\t  // mock response\n\t  mockResponse      : false,\n\t  mockResponseAsync : false,\n\t\n\t  // aliases for mock\n\t  response          : false,\n\t  responseAsync     : false,\n\t\n\t  // callbacks before request\n\t  beforeSend  : function(settings) { return settings; },\n\t  beforeXHR   : function(xhr) {},\n\t  onRequest   : function(promise, xhr) {},\n\t\n\t  // after request\n\t  onResponse  : false, // function(response) { },\n\t\n\t  // response was successful, if JSON passed validation\n\t  onSuccess   : function(response, $module) {},\n\t\n\t  // request finished without aborting\n\t  onComplete  : function(response, $module) {},\n\t\n\t  // failed JSON success test\n\t  onFailure   : function(response, $module) {},\n\t\n\t  // server error\n\t  onError     : function(errorMessage, $module) {},\n\t\n\t  // request aborted\n\t  onAbort     : function(errorMessage, $module) {},\n\t\n\t  successTest : false,\n\t\n\t  // errors\n\t  error : {\n\t    beforeSend        : 'The before send function has aborted the request',\n\t    error             : 'There was an error with your request',\n\t    exitConditions    : 'API Request Aborted. Exit conditions met',\n\t    JSONParse         : 'JSON could not be parsed during error handling',\n\t    legacyParameters  : 'You are using legacy API success callback names',\n\t    method            : 'The method you called is not defined',\n\t    missingAction     : 'API action used but no url was defined',\n\t    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\n\t    missingURL        : 'No URL specified for api event',\n\t    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\n\t    noStorage         : 'Caching responses locally requires session storage',\n\t    parseError        : 'There was an error parsing your request',\n\t    requiredParameter : 'Missing a required URL parameter: ',\n\t    statusMessage     : 'Server gave an error: ',\n\t    timeout           : 'Your request timed out'\n\t  },\n\t\n\t  regExp  : {\n\t    required : /\\{\\$*[A-z0-9]+\\}/g,\n\t    optional : /\\{\\/\\$*[A-z0-9]+\\}/g,\n\t  },\n\t\n\t  className: {\n\t    loading : 'loading',\n\t    error   : 'error'\n\t  },\n\t\n\t  selector: {\n\t    disabled : '.disabled',\n\t    form      : 'form'\n\t  },\n\t\n\t  metadata: {\n\t    action  : 'action',\n\t    url     : 'url'\n\t  }\n\t};\n\t\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - State\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.state = function(parameters) {\n\t  var\n\t    $allModules     = $(this),\n\t\n\t    moduleSelector  = $allModules.selector || '',\n\t\n\t    hasTouch        = ('ontouchstart' in document.documentElement),\n\t    time            = new Date().getTime(),\n\t    performance     = [],\n\t\n\t    query           = arguments[0],\n\t    methodInvoked   = (typeof query == 'string'),\n\t    queryArguments  = [].slice.call(arguments, 1),\n\t\n\t    returnedValue\n\t  ;\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings          = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.state.settings, parameters)\n\t          : $.extend({}, $.fn.state.settings),\n\t\n\t        error           = settings.error,\n\t        metadata        = settings.metadata,\n\t        className       = settings.className,\n\t        namespace       = settings.namespace,\n\t        states          = settings.states,\n\t        text            = settings.text,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = namespace + '-module',\n\t\n\t        $module         = $(this),\n\t\n\t        element         = this,\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        module\n\t      ;\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.verbose('Initializing module');\n\t\n\t          // allow module to guess desired state based on element\n\t          if(settings.automatic) {\n\t            module.add.defaults();\n\t          }\n\t\n\t          // bind events with delegated events\n\t          if(settings.context && moduleSelector !== '') {\n\t            $(settings.context)\n\t              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\n\t              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\n\t              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\n\t            ;\n\t          }\n\t          else {\n\t            $module\n\t              .on('mouseenter' + eventNamespace, module.change.text)\n\t              .on('mouseleave' + eventNamespace, module.reset.text)\n\t              .on('click'      + eventNamespace, module.toggle.state)\n\t            ;\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.verbose('Storing instance of module', module);\n\t          instance = module;\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module', instance);\n\t          $module\n\t            .off(eventNamespace)\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        refresh: function() {\n\t          module.verbose('Refreshing selector cache');\n\t          $module = $(element);\n\t        },\n\t\n\t        add: {\n\t          defaults: function() {\n\t            var\n\t              userStates = parameters && $.isPlainObject(parameters.states)\n\t                ? parameters.states\n\t                : {}\n\t            ;\n\t            $.each(settings.defaults, function(type, typeStates) {\n\t              if( module.is[type] !== undefined && module.is[type]() ) {\n\t                module.verbose('Adding default states', type, element);\n\t                $.extend(settings.states, typeStates, userStates);\n\t              }\n\t            });\n\t          }\n\t        },\n\t\n\t        is: {\n\t\n\t          active: function() {\n\t            return $module.hasClass(className.active);\n\t          },\n\t          loading: function() {\n\t            return $module.hasClass(className.loading);\n\t          },\n\t          inactive: function() {\n\t            return !( $module.hasClass(className.active) );\n\t          },\n\t          state: function(state) {\n\t            if(className[state] === undefined) {\n\t              return false;\n\t            }\n\t            return $module.hasClass( className[state] );\n\t          },\n\t\n\t          enabled: function() {\n\t            return !( $module.is(settings.filter.active) );\n\t          },\n\t          disabled: function() {\n\t            return ( $module.is(settings.filter.active) );\n\t          },\n\t          textEnabled: function() {\n\t            return !( $module.is(settings.filter.text) );\n\t          },\n\t\n\t          // definitions for automatic type detection\n\t          button: function() {\n\t            return $module.is('.button:not(a, .submit)');\n\t          },\n\t          input: function() {\n\t            return $module.is('input');\n\t          },\n\t          progress: function() {\n\t            return $module.is('.ui.progress');\n\t          }\n\t        },\n\t\n\t        allow: function(state) {\n\t          module.debug('Now allowing state', state);\n\t          states[state] = true;\n\t        },\n\t        disallow: function(state) {\n\t          module.debug('No longer allowing', state);\n\t          states[state] = false;\n\t        },\n\t\n\t        allows: function(state) {\n\t          return states[state] || false;\n\t        },\n\t\n\t        enable: function() {\n\t          $module.removeClass(className.disabled);\n\t        },\n\t\n\t        disable: function() {\n\t          $module.addClass(className.disabled);\n\t        },\n\t\n\t        setState: function(state) {\n\t          if(module.allows(state)) {\n\t            $module.addClass( className[state] );\n\t          }\n\t        },\n\t\n\t        removeState: function(state) {\n\t          if(module.allows(state)) {\n\t            $module.removeClass( className[state] );\n\t          }\n\t        },\n\t\n\t        toggle: {\n\t          state: function() {\n\t            var\n\t              apiRequest,\n\t              requestCancelled\n\t            ;\n\t            if( module.allows('active') && module.is.enabled() ) {\n\t              module.refresh();\n\t              if($.fn.api !== undefined) {\n\t                apiRequest       = $module.api('get request');\n\t                requestCancelled = $module.api('was cancelled');\n\t                if( requestCancelled ) {\n\t                  module.debug('API Request cancelled by beforesend');\n\t                  settings.activateTest   = function(){ return false; };\n\t                  settings.deactivateTest = function(){ return false; };\n\t                }\n\t                else if(apiRequest) {\n\t                  module.listenTo(apiRequest);\n\t                  return;\n\t                }\n\t              }\n\t              module.change.state();\n\t            }\n\t          }\n\t        },\n\t\n\t        listenTo: function(apiRequest) {\n\t          module.debug('API request detected, waiting for state signal', apiRequest);\n\t          if(apiRequest) {\n\t            if(text.loading) {\n\t              module.update.text(text.loading);\n\t            }\n\t            $.when(apiRequest)\n\t              .then(function() {\n\t                if(apiRequest.state() == 'resolved') {\n\t                  module.debug('API request succeeded');\n\t                  settings.activateTest   = function(){ return true; };\n\t                  settings.deactivateTest = function(){ return true; };\n\t                }\n\t                else {\n\t                  module.debug('API request failed');\n\t                  settings.activateTest   = function(){ return false; };\n\t                  settings.deactivateTest = function(){ return false; };\n\t                }\n\t                module.change.state();\n\t              })\n\t            ;\n\t          }\n\t        },\n\t\n\t        // checks whether active/inactive state can be given\n\t        change: {\n\t\n\t          state: function() {\n\t            module.debug('Determining state change direction');\n\t            // inactive to active change\n\t            if( module.is.inactive() ) {\n\t              module.activate();\n\t            }\n\t            else {\n\t              module.deactivate();\n\t            }\n\t            if(settings.sync) {\n\t              module.sync();\n\t            }\n\t            settings.onChange.call(element);\n\t          },\n\t\n\t          text: function() {\n\t            if( module.is.textEnabled() ) {\n\t              if(module.is.disabled() ) {\n\t                module.verbose('Changing text to disabled text', text.hover);\n\t                module.update.text(text.disabled);\n\t              }\n\t              else if( module.is.active() ) {\n\t                if(text.hover) {\n\t                  module.verbose('Changing text to hover text', text.hover);\n\t                  module.update.text(text.hover);\n\t                }\n\t                else if(text.deactivate) {\n\t                  module.verbose('Changing text to deactivating text', text.deactivate);\n\t                  module.update.text(text.deactivate);\n\t                }\n\t              }\n\t              else {\n\t                if(text.hover) {\n\t                  module.verbose('Changing text to hover text', text.hover);\n\t                  module.update.text(text.hover);\n\t                }\n\t                else if(text.activate){\n\t                  module.verbose('Changing text to activating text', text.activate);\n\t                  module.update.text(text.activate);\n\t                }\n\t              }\n\t            }\n\t          }\n\t\n\t        },\n\t\n\t        activate: function() {\n\t          if( settings.activateTest.call(element) ) {\n\t            module.debug('Setting state to active');\n\t            $module\n\t              .addClass(className.active)\n\t            ;\n\t            module.update.text(text.active);\n\t            settings.onActivate.call(element);\n\t          }\n\t        },\n\t\n\t        deactivate: function() {\n\t          if( settings.deactivateTest.call(element) ) {\n\t            module.debug('Setting state to inactive');\n\t            $module\n\t              .removeClass(className.active)\n\t            ;\n\t            module.update.text(text.inactive);\n\t            settings.onDeactivate.call(element);\n\t          }\n\t        },\n\t\n\t        sync: function() {\n\t          module.verbose('Syncing other buttons to current state');\n\t          if( module.is.active() ) {\n\t            $allModules\n\t              .not($module)\n\t                .state('activate');\n\t          }\n\t          else {\n\t            $allModules\n\t              .not($module)\n\t                .state('deactivate')\n\t            ;\n\t          }\n\t        },\n\t\n\t        get: {\n\t          text: function() {\n\t            return (settings.selector.text)\n\t              ? $module.find(settings.selector.text).text()\n\t              : $module.html()\n\t            ;\n\t          },\n\t          textFor: function(state) {\n\t            return text[state] || false;\n\t          }\n\t        },\n\t\n\t        flash: {\n\t          text: function(text, duration, callback) {\n\t            var\n\t              previousText = module.get.text()\n\t            ;\n\t            module.debug('Flashing text message', text, duration);\n\t            text     = text     || settings.text.flash;\n\t            duration = duration || settings.flashDuration;\n\t            callback = callback || function() {};\n\t            module.update.text(text);\n\t            setTimeout(function(){\n\t              module.update.text(previousText);\n\t              callback.call(element);\n\t            }, duration);\n\t          }\n\t        },\n\t\n\t        reset: {\n\t          // on mouseout sets text to previous value\n\t          text: function() {\n\t            var\n\t              activeText   = text.active   || $module.data(metadata.storedText),\n\t              inactiveText = text.inactive || $module.data(metadata.storedText)\n\t            ;\n\t            if( module.is.textEnabled() ) {\n\t              if( module.is.active() && activeText) {\n\t                module.verbose('Resetting active text', activeText);\n\t                module.update.text(activeText);\n\t              }\n\t              else if(inactiveText) {\n\t                module.verbose('Resetting inactive text', activeText);\n\t                module.update.text(inactiveText);\n\t              }\n\t            }\n\t          }\n\t        },\n\t\n\t        update: {\n\t          text: function(text) {\n\t            var\n\t              currentText = module.get.text()\n\t            ;\n\t            if(text && text !== currentText) {\n\t              module.debug('Updating text', text);\n\t              if(settings.selector.text) {\n\t                $module\n\t                  .data(metadata.storedText, text)\n\t                  .find(settings.selector.text)\n\t                    .text(text)\n\t                ;\n\t              }\n\t              else {\n\t                $module\n\t                  .data(metadata.storedText, text)\n\t                  .html(text)\n\t                ;\n\t              }\n\t            }\n\t            else {\n\t              module.debug('Text is already set, ignoring update', text);\n\t            }\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          module.debug('Changing setting', name, value);\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            if($.isPlainObject(settings[name])) {\n\t              $.extend(true, settings[name], value);\n\t            }\n\t            else {\n\t              settings[name] = value;\n\t            }\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.state.settings = {\n\t\n\t  // module info\n\t  name           : 'State',\n\t\n\t  // debug output\n\t  debug          : false,\n\t\n\t  // verbose debug output\n\t  verbose        : false,\n\t\n\t  // namespace for events\n\t  namespace      : 'state',\n\t\n\t  // debug data includes performance\n\t  performance    : true,\n\t\n\t  // callback occurs on state change\n\t  onActivate     : function() {},\n\t  onDeactivate   : function() {},\n\t  onChange       : function() {},\n\t\n\t  // state test functions\n\t  activateTest   : function() { return true; },\n\t  deactivateTest : function() { return true; },\n\t\n\t  // whether to automatically map default states\n\t  automatic      : true,\n\t\n\t  // activate / deactivate changes all elements instantiated at same time\n\t  sync           : false,\n\t\n\t  // default flash text duration, used for temporarily changing text of an element\n\t  flashDuration  : 1000,\n\t\n\t  // selector filter\n\t  filter     : {\n\t    text   : '.loading, .disabled',\n\t    active : '.disabled'\n\t  },\n\t\n\t  context    : false,\n\t\n\t  // error\n\t  error: {\n\t    beforeSend : 'The before send function has cancelled state change',\n\t    method     : 'The method you called is not defined.'\n\t  },\n\t\n\t  // metadata\n\t  metadata: {\n\t    promise    : 'promise',\n\t    storedText : 'stored-text'\n\t  },\n\t\n\t  // change class on state\n\t  className: {\n\t    active   : 'active',\n\t    disabled : 'disabled',\n\t    error    : 'error',\n\t    loading  : 'loading',\n\t    success  : 'success',\n\t    warning  : 'warning'\n\t  },\n\t\n\t  selector: {\n\t    // selector for text node\n\t    text: false\n\t  },\n\t\n\t  defaults : {\n\t    input: {\n\t      disabled : true,\n\t      loading  : true,\n\t      active   : true\n\t    },\n\t    button: {\n\t      disabled : true,\n\t      loading  : true,\n\t      active   : true,\n\t    },\n\t    progress: {\n\t      active   : true,\n\t      success  : true,\n\t      warning  : true,\n\t      error    : true\n\t    }\n\t  },\n\t\n\t  states     : {\n\t    active   : true,\n\t    disabled : true,\n\t    error    : true,\n\t    loading  : true,\n\t    success  : true,\n\t    warning  : true\n\t  },\n\t\n\t  text     : {\n\t    disabled   : false,\n\t    flash      : false,\n\t    hover      : false,\n\t    active     : false,\n\t    inactive   : false,\n\t    activate   : false,\n\t    deactivate : false\n\t  }\n\t\n\t};\n\t\n\t\n\t\n\t})( jQuery, window, document );\n\t\n\t/*!\n\t * # Semantic UI 2.2.10 - Visibility\n\t * http://github.com/semantic-org/semantic-ui/\n\t *\n\t *\n\t * Released under the MIT license\n\t * http://opensource.org/licenses/MIT\n\t *\n\t */\n\t\n\t;(function ($, window, document, undefined) {\n\t\n\t\"use strict\";\n\t\n\twindow = (typeof window != 'undefined' && window.Math == Math)\n\t  ? window\n\t  : (typeof self != 'undefined' && self.Math == Math)\n\t    ? self\n\t    : Function('return this')()\n\t;\n\t\n\t$.fn.visibility = function(parameters) {\n\t  var\n\t    $allModules    = $(this),\n\t    moduleSelector = $allModules.selector || '',\n\t\n\t    time           = new Date().getTime(),\n\t    performance    = [],\n\t\n\t    query          = arguments[0],\n\t    methodInvoked  = (typeof query == 'string'),\n\t    queryArguments = [].slice.call(arguments, 1),\n\t    returnedValue,\n\t\n\t    moduleCount    = $allModules.length,\n\t    loadedCount    = 0\n\t  ;\n\t\n\t  $allModules\n\t    .each(function() {\n\t      var\n\t        settings        = ( $.isPlainObject(parameters) )\n\t          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\n\t          : $.extend({}, $.fn.visibility.settings),\n\t\n\t        className       = settings.className,\n\t        namespace       = settings.namespace,\n\t        error           = settings.error,\n\t        metadata        = settings.metadata,\n\t\n\t        eventNamespace  = '.' + namespace,\n\t        moduleNamespace = 'module-' + namespace,\n\t\n\t        $window         = $(window),\n\t\n\t        $module         = $(this),\n\t        $context        = $(settings.context),\n\t\n\t        $placeholder,\n\t\n\t        selector        = $module.selector || '',\n\t        instance        = $module.data(moduleNamespace),\n\t\n\t        requestAnimationFrame = window.requestAnimationFrame\n\t          || window.mozRequestAnimationFrame\n\t          || window.webkitRequestAnimationFrame\n\t          || window.msRequestAnimationFrame\n\t          || function(callback) { setTimeout(callback, 0); },\n\t\n\t        element         = this,\n\t        disabled        = false,\n\t\n\t        contextObserver,\n\t        observer,\n\t        module\n\t      ;\n\t\n\t      module = {\n\t\n\t        initialize: function() {\n\t          module.debug('Initializing', settings);\n\t\n\t          module.setup.cache();\n\t\n\t          if( module.should.trackChanges() ) {\n\t\n\t            if(settings.type == 'image') {\n\t              module.setup.image();\n\t            }\n\t            if(settings.type == 'fixed') {\n\t              module.setup.fixed();\n\t            }\n\t\n\t            if(settings.observeChanges) {\n\t              module.observeChanges();\n\t            }\n\t            module.bind.events();\n\t          }\n\t\n\t          module.save.position();\n\t          if( !module.is.visible() ) {\n\t            module.error(error.visible, $module);\n\t          }\n\t\n\t          if(settings.initialCheck) {\n\t            module.checkVisibility();\n\t          }\n\t          module.instantiate();\n\t        },\n\t\n\t        instantiate: function() {\n\t          module.debug('Storing instance', module);\n\t          $module\n\t            .data(moduleNamespace, module)\n\t          ;\n\t          instance = module;\n\t        },\n\t\n\t        destroy: function() {\n\t          module.verbose('Destroying previous module');\n\t          if(observer) {\n\t            observer.disconnect();\n\t          }\n\t          if(contextObserver) {\n\t            contextObserver.disconnect();\n\t          }\n\t          $window\n\t            .off('load'   + eventNamespace, module.event.load)\n\t            .off('resize' + eventNamespace, module.event.resize)\n\t          ;\n\t          $context\n\t            .off('scroll'       + eventNamespace, module.event.scroll)\n\t            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n\t          ;\n\t          if(settings.type == 'fixed') {\n\t            module.resetFixed();\n\t            module.remove.placeholder();\n\t          }\n\t          $module\n\t            .off(eventNamespace)\n\t            .removeData(moduleNamespace)\n\t          ;\n\t        },\n\t\n\t        observeChanges: function() {\n\t          if('MutationObserver' in window) {\n\t            contextObserver = new MutationObserver(module.event.contextChanged);\n\t            observer        = new MutationObserver(module.event.changed);\n\t            contextObserver.observe(document, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            observer.observe(element, {\n\t              childList : true,\n\t              subtree   : true\n\t            });\n\t            module.debug('Setting up mutation observer', observer);\n\t          }\n\t        },\n\t\n\t        bind: {\n\t          events: function() {\n\t            module.verbose('Binding visibility events to scroll and resize');\n\t            if(settings.refreshOnLoad) {\n\t              $window\n\t                .on('load'   + eventNamespace, module.event.load)\n\t              ;\n\t            }\n\t            $window\n\t              .on('resize' + eventNamespace, module.event.resize)\n\t            ;\n\t            // pub/sub pattern\n\t            $context\n\t              .off('scroll'      + eventNamespace)\n\t              .on('scroll'       + eventNamespace, module.event.scroll)\n\t              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n\t            ;\n\t          }\n\t        },\n\t\n\t        event: {\n\t          changed: function(mutations) {\n\t            module.verbose('DOM tree modified, updating visibility calculations');\n\t            module.timer = setTimeout(function() {\n\t              module.verbose('DOM tree modified, updating sticky menu');\n\t              module.refresh();\n\t            }, 100);\n\t          },\n\t          contextChanged: function(mutations) {\n\t            [].forEach.call(mutations, function(mutation) {\n\t              if(mutation.removedNodes) {\n\t                [].forEach.call(mutation.removedNodes, function(node) {\n\t                  if(node == element || $(node).find(element).length > 0) {\n\t                    module.debug('Element removed from DOM, tearing down events');\n\t                    module.destroy();\n\t                  }\n\t                });\n\t              }\n\t            });\n\t          },\n\t          resize: function() {\n\t            module.debug('Window resized');\n\t            if(settings.refreshOnResize) {\n\t              requestAnimationFrame(module.refresh);\n\t            }\n\t          },\n\t          load: function() {\n\t            module.debug('Page finished loading');\n\t            requestAnimationFrame(module.refresh);\n\t          },\n\t          // publishes scrollchange event on one scroll\n\t          scroll: function() {\n\t            if(settings.throttle) {\n\t              clearTimeout(module.timer);\n\t              module.timer = setTimeout(function() {\n\t                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n\t              }, settings.throttle);\n\t            }\n\t            else {\n\t              requestAnimationFrame(function() {\n\t                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n\t              });\n\t            }\n\t          },\n\t          // subscribes to scrollchange\n\t          scrollchange: function(event, scrollPosition) {\n\t            module.checkVisibility(scrollPosition);\n\t          },\n\t        },\n\t\n\t        precache: function(images, callback) {\n\t          if (!(images instanceof Array)) {\n\t            images = [images];\n\t          }\n\t          var\n\t            imagesLength  = images.length,\n\t            loadedCounter = 0,\n\t            cache         = [],\n\t            cacheImage    = document.createElement('img'),\n\t            handleLoad    = function() {\n\t              loadedCounter++;\n\t              if (loadedCounter >= images.length) {\n\t                if ($.isFunction(callback)) {\n\t                  callback();\n\t                }\n\t              }\n\t            }\n\t          ;\n\t          while (imagesLength--) {\n\t            cacheImage         = document.createElement('img');\n\t            cacheImage.onload  = handleLoad;\n\t            cacheImage.onerror = handleLoad;\n\t            cacheImage.src     = images[imagesLength];\n\t            cache.push(cacheImage);\n\t          }\n\t        },\n\t\n\t        enableCallbacks: function() {\n\t          module.debug('Allowing callbacks to occur');\n\t          disabled = false;\n\t        },\n\t\n\t        disableCallbacks: function() {\n\t          module.debug('Disabling all callbacks temporarily');\n\t          disabled = true;\n\t        },\n\t\n\t        should: {\n\t          trackChanges: function() {\n\t            if(methodInvoked) {\n\t              module.debug('One time query, no need to bind events');\n\t              return false;\n\t            }\n\t            module.debug('Callbacks being attached');\n\t            return true;\n\t          }\n\t        },\n\t\n\t        setup: {\n\t          cache: function() {\n\t            module.cache = {\n\t              occurred : {},\n\t              screen   : {},\n\t              element  : {},\n\t            };\n\t          },\n\t          image: function() {\n\t            var\n\t              src = $module.data(metadata.src)\n\t            ;\n\t            if(src) {\n\t              module.verbose('Lazy loading image', src);\n\t              settings.once           = true;\n\t              settings.observeChanges = false;\n\t\n\t              // show when top visible\n\t              settings.onOnScreen = function() {\n\t                module.debug('Image on screen', element);\n\t                module.precache(src, function() {\n\t                  module.set.image(src, function() {\n\t                    loadedCount++;\n\t                    if(loadedCount == moduleCount) {\n\t                      settings.onAllLoaded.call(this);\n\t                    }\n\t                    settings.onLoad.call(this);\n\t                  });\n\t                });\n\t              };\n\t            }\n\t          },\n\t          fixed: function() {\n\t            module.debug('Setting up fixed');\n\t            settings.once           = false;\n\t            settings.observeChanges = false;\n\t            settings.initialCheck   = true;\n\t            settings.refreshOnLoad  = true;\n\t            if(!parameters.transition) {\n\t              settings.transition = false;\n\t            }\n\t            module.create.placeholder();\n\t            module.debug('Added placeholder', $placeholder);\n\t            settings.onTopPassed = function() {\n\t              module.debug('Element passed, adding fixed position', $module);\n\t              module.show.placeholder();\n\t              module.set.fixed();\n\t              if(settings.transition) {\n\t                if($.fn.transition !== undefined) {\n\t                  $module.transition(settings.transition, settings.duration);\n\t                }\n\t              }\n\t            };\n\t            settings.onTopPassedReverse = function() {\n\t              module.debug('Element returned to position, removing fixed', $module);\n\t              module.hide.placeholder();\n\t              module.remove.fixed();\n\t            };\n\t          }\n\t        },\n\t\n\t        create: {\n\t          placeholder: function() {\n\t            module.verbose('Creating fixed position placeholder');\n\t            $placeholder = $module\n\t              .clone(false)\n\t              .css('display', 'none')\n\t              .addClass(className.placeholder)\n\t              .insertAfter($module)\n\t            ;\n\t          }\n\t        },\n\t\n\t        show: {\n\t          placeholder: function() {\n\t            module.verbose('Showing placeholder');\n\t            $placeholder\n\t              .css('display', 'block')\n\t              .css('visibility', 'hidden')\n\t            ;\n\t          }\n\t        },\n\t        hide: {\n\t          placeholder: function() {\n\t            module.verbose('Hiding placeholder');\n\t            $placeholder\n\t              .css('display', 'none')\n\t              .css('visibility', '')\n\t            ;\n\t          }\n\t        },\n\t\n\t        set: {\n\t          fixed: function() {\n\t            module.verbose('Setting element to fixed position');\n\t            $module\n\t              .addClass(className.fixed)\n\t              .css({\n\t                position : 'fixed',\n\t                top      : settings.offset + 'px',\n\t                left     : 'auto',\n\t                zIndex   : settings.zIndex\n\t              })\n\t            ;\n\t            settings.onFixed.call(element);\n\t          },\n\t          image: function(src, callback) {\n\t            $module\n\t              .attr('src', src)\n\t            ;\n\t            if(settings.transition) {\n\t              if( $.fn.transition !== undefined) {\n\t                if($module.hasClass(className.visible)) {\n\t                  module.debug('Transition already occurred on this image, skipping animation');\n\t                  return;\n\t                }\n\t                $module.transition(settings.transition, settings.duration, callback);\n\t              }\n\t              else {\n\t                $module.fadeIn(settings.duration, callback);\n\t              }\n\t            }\n\t            else {\n\t              $module.show();\n\t            }\n\t          }\n\t        },\n\t\n\t        is: {\n\t          onScreen: function() {\n\t            var\n\t              calculations   = module.get.elementCalculations()\n\t            ;\n\t            return calculations.onScreen;\n\t          },\n\t          offScreen: function() {\n\t            var\n\t              calculations   = module.get.elementCalculations()\n\t            ;\n\t            return calculations.offScreen;\n\t          },\n\t          visible: function() {\n\t            if(module.cache && module.cache.element) {\n\t              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\n\t            }\n\t            return false;\n\t          },\n\t          verticallyScrollableContext: function() {\n\t            var\n\t              overflowY = ($context.get(0) !== window)\n\t                ? $context.css('overflow-y')\n\t                : false\n\t            ;\n\t            return (overflowY == 'auto' || overflowY == 'scroll');\n\t          },\n\t          horizontallyScrollableContext: function() {\n\t            var\n\t              overflowX = ($context.get(0) !== window)\n\t                ? $context.css('overflow-x')\n\t                : false\n\t            ;\n\t            return (overflowX == 'auto' || overflowX == 'scroll');\n\t          }\n\t        },\n\t\n\t        refresh: function() {\n\t          module.debug('Refreshing constants (width/height)');\n\t          if(settings.type == 'fixed') {\n\t            module.resetFixed();\n\t          }\n\t          module.reset();\n\t          module.save.position();\n\t          if(settings.checkOnRefresh) {\n\t            module.checkVisibility();\n\t          }\n\t          settings.onRefresh.call(element);\n\t        },\n\t\n\t        resetFixed: function () {\n\t          module.remove.fixed();\n\t          module.remove.occurred();\n\t        },\n\t\n\t        reset: function() {\n\t          module.verbose('Resetting all cached values');\n\t          if( $.isPlainObject(module.cache) ) {\n\t            module.cache.screen = {};\n\t            module.cache.element = {};\n\t          }\n\t        },\n\t\n\t        checkVisibility: function(scroll) {\n\t          module.verbose('Checking visibility of element', module.cache.element);\n\t\n\t          if( !disabled && module.is.visible() ) {\n\t\n\t            // save scroll position\n\t            module.save.scroll(scroll);\n\t\n\t            // update calculations derived from scroll\n\t            module.save.calculations();\n\t\n\t            // percentage\n\t            module.passed();\n\t\n\t            // reverse (must be first)\n\t            module.passingReverse();\n\t            module.topVisibleReverse();\n\t            module.bottomVisibleReverse();\n\t            module.topPassedReverse();\n\t            module.bottomPassedReverse();\n\t\n\t            // one time\n\t            module.onScreen();\n\t            module.offScreen();\n\t            module.passing();\n\t            module.topVisible();\n\t            module.bottomVisible();\n\t            module.topPassed();\n\t            module.bottomPassed();\n\t\n\t            // on update callback\n\t            if(settings.onUpdate) {\n\t              settings.onUpdate.call(element, module.get.elementCalculations());\n\t            }\n\t          }\n\t        },\n\t\n\t        passed: function(amount, newCallback) {\n\t          var\n\t            calculations   = module.get.elementCalculations(),\n\t            amountInPixels\n\t          ;\n\t          // assign callback\n\t          if(amount && newCallback) {\n\t            settings.onPassed[amount] = newCallback;\n\t          }\n\t          else if(amount !== undefined) {\n\t            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\n\t          }\n\t          else if(calculations.passing) {\n\t            $.each(settings.onPassed, function(amount, callback) {\n\t              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\n\t                module.execute(callback, amount);\n\t              }\n\t              else if(!settings.once) {\n\t                module.remove.occurred(callback);\n\t              }\n\t            });\n\t          }\n\t        },\n\t\n\t        onScreen: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onOnScreen,\n\t            callbackName = 'onScreen'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for onScreen', newCallback);\n\t            settings.onOnScreen = newCallback;\n\t          }\n\t          if(calculations.onScreen) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback !== undefined) {\n\t            return calculations.onOnScreen;\n\t          }\n\t        },\n\t\n\t        offScreen: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onOffScreen,\n\t            callbackName = 'offScreen'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for offScreen', newCallback);\n\t            settings.onOffScreen = newCallback;\n\t          }\n\t          if(calculations.offScreen) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback !== undefined) {\n\t            return calculations.onOffScreen;\n\t          }\n\t        },\n\t\n\t        passing: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onPassing,\n\t            callbackName = 'passing'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for passing', newCallback);\n\t            settings.onPassing = newCallback;\n\t          }\n\t          if(calculations.passing) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback !== undefined) {\n\t            return calculations.passing;\n\t          }\n\t        },\n\t\n\t\n\t        topVisible: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onTopVisible,\n\t            callbackName = 'topVisible'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for top visible', newCallback);\n\t            settings.onTopVisible = newCallback;\n\t          }\n\t          if(calculations.topVisible) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return calculations.topVisible;\n\t          }\n\t        },\n\t\n\t        bottomVisible: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onBottomVisible,\n\t            callbackName = 'bottomVisible'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for bottom visible', newCallback);\n\t            settings.onBottomVisible = newCallback;\n\t          }\n\t          if(calculations.bottomVisible) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return calculations.bottomVisible;\n\t          }\n\t        },\n\t\n\t        topPassed: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onTopPassed,\n\t            callbackName = 'topPassed'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for top passed', newCallback);\n\t            settings.onTopPassed = newCallback;\n\t          }\n\t          if(calculations.topPassed) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return calculations.topPassed;\n\t          }\n\t        },\n\t\n\t        bottomPassed: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onBottomPassed,\n\t            callbackName = 'bottomPassed'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for bottom passed', newCallback);\n\t            settings.onBottomPassed = newCallback;\n\t          }\n\t          if(calculations.bottomPassed) {\n\t            module.execute(callback, callbackName);\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return calculations.bottomPassed;\n\t          }\n\t        },\n\t\n\t        passingReverse: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onPassingReverse,\n\t            callbackName = 'passingReverse'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for passing reverse', newCallback);\n\t            settings.onPassingReverse = newCallback;\n\t          }\n\t          if(!calculations.passing) {\n\t            if(module.get.occurred('passing')) {\n\t              module.execute(callback, callbackName);\n\t            }\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback !== undefined) {\n\t            return !calculations.passing;\n\t          }\n\t        },\n\t\n\t\n\t        topVisibleReverse: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onTopVisibleReverse,\n\t            callbackName = 'topVisibleReverse'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for top visible reverse', newCallback);\n\t            settings.onTopVisibleReverse = newCallback;\n\t          }\n\t          if(!calculations.topVisible) {\n\t            if(module.get.occurred('topVisible')) {\n\t              module.execute(callback, callbackName);\n\t            }\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return !calculations.topVisible;\n\t          }\n\t        },\n\t\n\t        bottomVisibleReverse: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onBottomVisibleReverse,\n\t            callbackName = 'bottomVisibleReverse'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for bottom visible reverse', newCallback);\n\t            settings.onBottomVisibleReverse = newCallback;\n\t          }\n\t          if(!calculations.bottomVisible) {\n\t            if(module.get.occurred('bottomVisible')) {\n\t              module.execute(callback, callbackName);\n\t            }\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return !calculations.bottomVisible;\n\t          }\n\t        },\n\t\n\t        topPassedReverse: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onTopPassedReverse,\n\t            callbackName = 'topPassedReverse'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for top passed reverse', newCallback);\n\t            settings.onTopPassedReverse = newCallback;\n\t          }\n\t          if(!calculations.topPassed) {\n\t            if(module.get.occurred('topPassed')) {\n\t              module.execute(callback, callbackName);\n\t            }\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return !calculations.onTopPassed;\n\t          }\n\t        },\n\t\n\t        bottomPassedReverse: function(newCallback) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            callback     = newCallback || settings.onBottomPassedReverse,\n\t            callbackName = 'bottomPassedReverse'\n\t          ;\n\t          if(newCallback) {\n\t            module.debug('Adding callback for bottom passed reverse', newCallback);\n\t            settings.onBottomPassedReverse = newCallback;\n\t          }\n\t          if(!calculations.bottomPassed) {\n\t            if(module.get.occurred('bottomPassed')) {\n\t              module.execute(callback, callbackName);\n\t            }\n\t          }\n\t          else if(!settings.once) {\n\t            module.remove.occurred(callbackName);\n\t          }\n\t          if(newCallback === undefined) {\n\t            return !calculations.bottomPassed;\n\t          }\n\t        },\n\t\n\t        execute: function(callback, callbackName) {\n\t          var\n\t            calculations = module.get.elementCalculations(),\n\t            screen       = module.get.screenCalculations()\n\t          ;\n\t          callback = callback || false;\n\t          if(callback) {\n\t            if(settings.continuous) {\n\t              module.debug('Callback being called continuously', callbackName, calculations);\n\t              callback.call(element, calculations, screen);\n\t            }\n\t            else if(!module.get.occurred(callbackName)) {\n\t              module.debug('Conditions met', callbackName, calculations);\n\t              callback.call(element, calculations, screen);\n\t            }\n\t          }\n\t          module.save.occurred(callbackName);\n\t        },\n\t\n\t        remove: {\n\t          fixed: function() {\n\t            module.debug('Removing fixed position');\n\t            $module\n\t              .removeClass(className.fixed)\n\t              .css({\n\t                position : '',\n\t                top      : '',\n\t                left     : '',\n\t                zIndex   : ''\n\t              })\n\t            ;\n\t            settings.onUnfixed.call(element);\n\t          },\n\t          placeholder: function() {\n\t            module.debug('Removing placeholder content');\n\t            if($placeholder) {\n\t              $placeholder.remove();\n\t            }\n\t          },\n\t          occurred: function(callback) {\n\t            if(callback) {\n\t              var\n\t                occurred = module.cache.occurred\n\t              ;\n\t              if(occurred[callback] !== undefined && occurred[callback] === true) {\n\t                module.debug('Callback can now be called again', callback);\n\t                module.cache.occurred[callback] = false;\n\t              }\n\t            }\n\t            else {\n\t              module.cache.occurred = {};\n\t            }\n\t          }\n\t        },\n\t\n\t        save: {\n\t          calculations: function() {\n\t            module.verbose('Saving all calculations necessary to determine positioning');\n\t            module.save.direction();\n\t            module.save.screenCalculations();\n\t            module.save.elementCalculations();\n\t          },\n\t          occurred: function(callback) {\n\t            if(callback) {\n\t              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\n\t                module.verbose('Saving callback occurred', callback);\n\t                module.cache.occurred[callback] = true;\n\t              }\n\t            }\n\t          },\n\t          scroll: function(scrollPosition) {\n\t            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\n\t            module.cache.scroll = scrollPosition;\n\t          },\n\t          direction: function() {\n\t            var\n\t              scroll     = module.get.scroll(),\n\t              lastScroll = module.get.lastScroll(),\n\t              direction\n\t            ;\n\t            if(scroll > lastScroll && lastScroll) {\n\t              direction = 'down';\n\t            }\n\t            else if(scroll < lastScroll && lastScroll) {\n\t              direction = 'up';\n\t            }\n\t            else {\n\t              direction = 'static';\n\t            }\n\t            module.cache.direction = direction;\n\t            return module.cache.direction;\n\t          },\n\t          elementPosition: function() {\n\t            var\n\t              element = module.cache.element,\n\t              screen  = module.get.screenSize()\n\t            ;\n\t            module.verbose('Saving element position');\n\t            // (quicker than $.extend)\n\t            element.fits          = (element.height < screen.height);\n\t            element.offset        = $module.offset();\n\t            element.width         = $module.outerWidth();\n\t            element.height        = $module.outerHeight();\n\t            // compensate for scroll in context\n\t            if(module.is.verticallyScrollableContext()) {\n\t              element.offset.top += $context.scrollTop() - $context.offset().top;\n\t            }\n\t            if(module.is.horizontallyScrollableContext()) {\n\t              element.offset.left += $context.scrollLeft - $context.offset().left;\n\t            }\n\t            // store\n\t            module.cache.element = element;\n\t            return element;\n\t          },\n\t          elementCalculations: function() {\n\t            var\n\t              screen     = module.get.screenCalculations(),\n\t              element    = module.get.elementPosition()\n\t            ;\n\t            // offset\n\t            if(settings.includeMargin) {\n\t              element.margin        = {};\n\t              element.margin.top    = parseInt($module.css('margin-top'), 10);\n\t              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\n\t              element.top    = element.offset.top - element.margin.top;\n\t              element.bottom = element.offset.top + element.height + element.margin.bottom;\n\t            }\n\t            else {\n\t              element.top    = element.offset.top;\n\t              element.bottom = element.offset.top + element.height;\n\t            }\n\t\n\t            // visibility\n\t            element.topPassed        = (screen.top >= element.top);\n\t            element.bottomPassed     = (screen.top >= element.bottom);\n\t            element.topVisible       = (screen.bottom >= element.top) && !element.bottomPassed;\n\t            element.bottomVisible    = (screen.bottom >= element.bottom) && !element.topPassed;\n\t            element.pixelsPassed     = 0;\n\t            element.percentagePassed = 0;\n\t\n\t            // meta calculations\n\t            element.onScreen  = (element.topVisible && !element.bottomPassed);\n\t            element.passing   = (element.topPassed && !element.bottomPassed);\n\t            element.offScreen = (!element.onScreen);\n\t\n\t            // passing calculations\n\t            if(element.passing) {\n\t              element.pixelsPassed     = (screen.top - element.top);\n\t              element.percentagePassed = (screen.top - element.top) / element.height;\n\t            }\n\t            module.cache.element = element;\n\t            module.verbose('Updated element calculations', element);\n\t            return element;\n\t          },\n\t          screenCalculations: function() {\n\t            var\n\t              scroll = module.get.scroll()\n\t            ;\n\t            module.save.direction();\n\t            module.cache.screen.top    = scroll;\n\t            module.cache.screen.bottom = scroll + module.cache.screen.height;\n\t            return module.cache.screen;\n\t          },\n\t          screenSize: function() {\n\t            module.verbose('Saving window position');\n\t            module.cache.screen = {\n\t              height: $context.height()\n\t            };\n\t          },\n\t          position: function() {\n\t            module.save.screenSize();\n\t            module.save.elementPosition();\n\t          }\n\t        },\n\t\n\t        get: {\n\t          pixelsPassed: function(amount) {\n\t            var\n\t              element = module.get.elementCalculations()\n\t            ;\n\t            if(amount.search('%') > -1) {\n\t              return ( element.height * (parseInt(amount, 10) / 100) );\n\t            }\n\t            return parseInt(amount, 10);\n\t          },\n\t          occurred: function(callback) {\n\t            return (module.cache.occurred !== undefined)\n\t              ? module.cache.occurred[callback] || false\n\t              : false\n\t            ;\n\t          },\n\t          direction: function() {\n\t            if(module.cache.direction === undefined) {\n\t              module.save.direction();\n\t            }\n\t            return module.cache.direction;\n\t          },\n\t          elementPosition: function() {\n\t            if(module.cache.element === undefined) {\n\t              module.save.elementPosition();\n\t            }\n\t            return module.cache.element;\n\t          },\n\t          elementCalculations: function() {\n\t            if(module.cache.element === undefined) {\n\t              module.save.elementCalculations();\n\t            }\n\t            return module.cache.element;\n\t          },\n\t          screenCalculations: function() {\n\t            if(module.cache.screen === undefined) {\n\t              module.save.screenCalculations();\n\t            }\n\t            return module.cache.screen;\n\t          },\n\t          screenSize: function() {\n\t            if(module.cache.screen === undefined) {\n\t              module.save.screenSize();\n\t            }\n\t            return module.cache.screen;\n\t          },\n\t          scroll: function() {\n\t            if(module.cache.scroll === undefined) {\n\t              module.save.scroll();\n\t            }\n\t            return module.cache.scroll;\n\t          },\n\t          lastScroll: function() {\n\t            if(module.cache.screen === undefined) {\n\t              module.debug('First scroll event, no last scroll could be found');\n\t              return false;\n\t            }\n\t            return module.cache.screen.top;\n\t          }\n\t        },\n\t\n\t        setting: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, settings, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            settings[name] = value;\n\t          }\n\t          else {\n\t            return settings[name];\n\t          }\n\t        },\n\t        internal: function(name, value) {\n\t          if( $.isPlainObject(name) ) {\n\t            $.extend(true, module, name);\n\t          }\n\t          else if(value !== undefined) {\n\t            module[name] = value;\n\t          }\n\t          else {\n\t            return module[name];\n\t          }\n\t        },\n\t        debug: function() {\n\t          if(!settings.silent && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.debug.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        verbose: function() {\n\t          if(!settings.silent && settings.verbose && settings.debug) {\n\t            if(settings.performance) {\n\t              module.performance.log(arguments);\n\t            }\n\t            else {\n\t              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n\t              module.verbose.apply(console, arguments);\n\t            }\n\t          }\n\t        },\n\t        error: function() {\n\t          if(!settings.silent) {\n\t            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n\t            module.error.apply(console, arguments);\n\t          }\n\t        },\n\t        performance: {\n\t          log: function(message) {\n\t            var\n\t              currentTime,\n\t              executionTime,\n\t              previousTime\n\t            ;\n\t            if(settings.performance) {\n\t              currentTime   = new Date().getTime();\n\t              previousTime  = time || currentTime;\n\t              executionTime = currentTime - previousTime;\n\t              time          = currentTime;\n\t              performance.push({\n\t                'Name'           : message[0],\n\t                'Arguments'      : [].slice.call(message, 1) || '',\n\t                'Element'        : element,\n\t                'Execution Time' : executionTime\n\t              });\n\t            }\n\t            clearTimeout(module.performance.timer);\n\t            module.performance.timer = setTimeout(module.performance.display, 500);\n\t          },\n\t          display: function() {\n\t            var\n\t              title = settings.name + ':',\n\t              totalTime = 0\n\t            ;\n\t            time = false;\n\t            clearTimeout(module.performance.timer);\n\t            $.each(performance, function(index, data) {\n\t              totalTime += data['Execution Time'];\n\t            });\n\t            title += ' ' + totalTime + 'ms';\n\t            if(moduleSelector) {\n\t              title += ' \\'' + moduleSelector + '\\'';\n\t            }\n\t            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n\t              console.groupCollapsed(title);\n\t              if(console.table) {\n\t                console.table(performance);\n\t              }\n\t              else {\n\t                $.each(performance, function(index, data) {\n\t                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n\t                });\n\t              }\n\t              console.groupEnd();\n\t            }\n\t            performance = [];\n\t          }\n\t        },\n\t        invoke: function(query, passedArguments, context) {\n\t          var\n\t            object = instance,\n\t            maxDepth,\n\t            found,\n\t            response\n\t          ;\n\t          passedArguments = passedArguments || queryArguments;\n\t          context         = element         || context;\n\t          if(typeof query == 'string' && object !== undefined) {\n\t            query    = query.split(/[\\. ]/);\n\t            maxDepth = query.length - 1;\n\t            $.each(query, function(depth, value) {\n\t              var camelCaseValue = (depth != maxDepth)\n\t                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n\t                : query\n\t              ;\n\t              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n\t                object = object[camelCaseValue];\n\t              }\n\t              else if( object[camelCaseValue] !== undefined ) {\n\t                found = object[camelCaseValue];\n\t                return false;\n\t              }\n\t              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n\t                object = object[value];\n\t              }\n\t              else if( object[value] !== undefined ) {\n\t                found = object[value];\n\t                return false;\n\t              }\n\t              else {\n\t                module.error(error.method, query);\n\t                return false;\n\t              }\n\t            });\n\t          }\n\t          if ( $.isFunction( found ) ) {\n\t            response = found.apply(context, passedArguments);\n\t          }\n\t          else if(found !== undefined) {\n\t            response = found;\n\t          }\n\t          if($.isArray(returnedValue)) {\n\t            returnedValue.push(response);\n\t          }\n\t          else if(returnedValue !== undefined) {\n\t            returnedValue = [returnedValue, response];\n\t          }\n\t          else if(response !== undefined) {\n\t            returnedValue = response;\n\t          }\n\t          return found;\n\t        }\n\t      };\n\t\n\t      if(methodInvoked) {\n\t        if(instance === undefined) {\n\t          module.initialize();\n\t        }\n\t        instance.save.scroll();\n\t        instance.save.calculations();\n\t        module.invoke(query);\n\t      }\n\t      else {\n\t        if(instance !== undefined) {\n\t          instance.invoke('destroy');\n\t        }\n\t        module.initialize();\n\t      }\n\t    })\n\t  ;\n\t\n\t  return (returnedValue !== undefined)\n\t    ? returnedValue\n\t    : this\n\t  ;\n\t};\n\t\n\t$.fn.visibility.settings = {\n\t\n\t  name                   : 'Visibility',\n\t  namespace              : 'visibility',\n\t\n\t  debug                  : false,\n\t  verbose                : false,\n\t  performance            : true,\n\t\n\t  // whether to use mutation observers to follow changes\n\t  observeChanges         : true,\n\t\n\t  // check position immediately on init\n\t  initialCheck           : true,\n\t\n\t  // whether to refresh calculations after all page images load\n\t  refreshOnLoad          : true,\n\t\n\t  // whether to refresh calculations after page resize event\n\t  refreshOnResize        : true,\n\t\n\t  // should call callbacks on refresh event (resize, etc)\n\t  checkOnRefresh         : true,\n\t\n\t  // callback should only occur one time\n\t  once                   : true,\n\t\n\t  // callback should fire continuously whe evaluates to true\n\t  continuous             : false,\n\t\n\t  // offset to use with scroll top\n\t  offset                 : 0,\n\t\n\t  // whether to include margin in elements position\n\t  includeMargin          : false,\n\t\n\t  // scroll context for visibility checks\n\t  context                : window,\n\t\n\t  // visibility check delay in ms (defaults to animationFrame)\n\t  throttle               : false,\n\t\n\t  // special visibility type (image, fixed)\n\t  type                   : false,\n\t\n\t  // z-index to use with visibility 'fixed'\n\t  zIndex                 : '10',\n\t\n\t  // image only animation settings\n\t  transition             : 'fade in',\n\t  duration               : 1000,\n\t\n\t  // array of callbacks for percentage\n\t  onPassed               : {},\n\t\n\t  // standard callbacks\n\t  onOnScreen             : false,\n\t  onOffScreen            : false,\n\t  onPassing              : false,\n\t  onTopVisible           : false,\n\t  onBottomVisible        : false,\n\t  onTopPassed            : false,\n\t  onBottomPassed         : false,\n\t\n\t  // reverse callbacks\n\t  onPassingReverse       : false,\n\t  onTopVisibleReverse    : false,\n\t  onBottomVisibleReverse : false,\n\t  onTopPassedReverse     : false,\n\t  onBottomPassedReverse  : false,\n\t\n\t  // special callbacks for image\n\t  onLoad                 : function() {},\n\t  onAllLoaded            : function() {},\n\t\n\t  // special callbacks for fixed position\n\t  onFixed                : function() {},\n\t  onUnfixed              : function() {},\n\t\n\t  // utility callbacks\n\t  onUpdate               : false, // disabled by default for performance\n\t  onRefresh              : function(){},\n\t\n\t  metadata : {\n\t    src: 'src'\n\t  },\n\t\n\t  className: {\n\t    fixed       : 'fixed',\n\t    placeholder : 'placeholder',\n\t    visible     : 'visible'\n\t  },\n\t\n\t  error : {\n\t    method  : 'The method you called is not defined.',\n\t    visible : 'Element is hidden, you must call refresh after element becomes visible'\n\t  }\n\t\n\t};\n\t\n\t})( jQuery, window, document );\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.7ad19af0e15ccea12109.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport App from './App';\nimport '../semantic/dist/semantic.min.css';\nimport 'semantic'; // importing semantic js\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  template: '<App/>',\n  components: { App },\n  mounted: function() {\n    $('.ui.accordion')\n    \t.accordion();\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\n  <div id=\"app\">\n    <div id=\"left\">\n\n      <a href=\"/\" class=\"centered\">\n        <h1>Joshua Menke</h1>\n        <img class=\"ui small circular image centered\" src=\"https://unsplash.it/200\" alt=\"Joshua Menke\">\n      </a>\n      <div>\n        <div class=\"ui divider\"></div>\n        <h2>Persönliches</h2>\n        <div class=\"ui divider\"></div>\n      </div>\n\n      <div id=\"personal\">\n        <div class=\"info\">\n          <i class=\"birthday circular icon\"></i>\n          <div>Geb. 13.10.1994</div>\n        </div>\n        <div class=\"info\">\n          <i class=\"home circular icon\"></i>\n          <a href=\"https://goo.gl/maps/JVHtcFxZz4q\">\n            <div>Kortumstr. 30</div>\n            <div>44787 Bochum</div>\n          </a>\n        </div>\n        <div class=\"info\">\n          <i class=\"text telephone circular icon\"></i>\n          <a href=\"tel:+4917660890700\">+49 176 - 60 89 0700</a>\n        </div>\n        <div class=\"info\">\n          <i class=\"mail circular icon\"></i>\n          <a href=\"mailto:info@joshuamenke.de\">info@joshuamenke.de</a>\n        </div>\n        <div class=\"info\">\n          <i class=\"browser circular icon\"></i>\n          <a href=\"http://joshuamenke.de\">joshuamenke.de</a>\n        </div>\n      </div>\n      <div>\n        <div class=\"ui divider\"></div>\n        <h2>Sprachen</h2>\n        <div class=\"ui divider\"></div>\n      </div>\n      <div id=\"sprachen\">\n        <div class=\"info\">\n          <span><b>Deutsch</b></span>\n          <span>Muttersprache</span>\n        </div>\n        <div class=\"info\">\n          <span><b>Englisch</b></span>\n          <span>Fließend</span>\n        </div>\n      </div>\n      <div>\n        <div class=\"ui divider\"></div>\n        <h2>Kenntnisse</h2>\n        <div class=\"ui divider\"></div>\n      </div>\n      <div id=\"kenntnisse\">\n        <div class=\"info\">\n          <span><b>Python</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/python-filled/ios7/100/\" title=\"Python\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/python-filled/ios7/100/\" title=\"Python\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/python-filled/ios7/100/\" title=\"Python\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/python-filled/ios7/100/\" title=\"Python\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/python/ios7/100/\" title=\"Python\" width=\"13\" height=\"13\">\n          </div>\n        </div>\n        <div class=\"info\">\n          <span><b>Java</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/java-bean-filled/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/java-bean-filled/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/java-bean/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/java-bean/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/java-bean/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n          </div>\n        </div>\n        <div class=\"info\">\n          <span><b>JavaScript</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/javascript-filled/ios7/100/\" title=\"Javascript\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/javascript-filled/ios7/100/\" title=\"Javascript\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/javascript-filled/ios7/100/\" title=\"Javascript\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/javascript-filled/ios7/100/\" title=\"Javascript\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/javascript/ios7/100/\" title=\"Javascript\" width=\"13\" height=\"13\">\n          </div>\n        </div>\n        <div class=\"info\">\n          <span><b>Html</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/html-5-filled/ios7/100/\" title=\"Html 5\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/html-5-filled/ios7/100/\" title=\"Html 5\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/html-5-filled/ios7/100/\" title=\"Html 5\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/html-5-filled/ios7/100/\" title=\"Html 5\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/html-5/ios7/100/\" title=\"Html 5\" width=\"13\" height=\"13\">\n          </div>\n        </div>\n        <div class=\"info\">\n          <span><b>CSS</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/css-filled/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/css-filled/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/css-filled/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/css/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/css/ios7/100/\" title=\"CSS\" width=\"13\" height=\"13\">\n          </div>\n        </div>\n        <div class=\"ui divider\"></div>\n        <div class=\"info\">\n          <span><b>MS Office</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/microsoft-excel-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/microsoft-excel-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/microsoft-excel-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/microsoft-excel-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/microsoft-excel/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n          </div>\n        </div>\n        <div class=\"info\">\n          <span><b>Linux</b></span>\n          <div class=\"rating\">\n            <img src=\"https://png.icons8.com/linux-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/linux-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/linux-filled/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/linux/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n            <img src=\"https://png.icons8.com/linux/ios7/100/\" title=\"Microsoft Office\" width=\"13\" height=\"13\">\n\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"ui divider\"></div>\n        <h2>Interessen & Hobbies</h2>\n        <div class=\"ui divider\"></div>\n      </div>\n      <div class=\"hobbies\">\n          <div class=\"info\"><b>Computer / Programmieren</b></div>\n          <div  class=\"info\"><b>Elektronische Musik</b></div>\n          <div  class=\"info\"><b>Kochen</b></div>\n      </div>\n      <div>\n        <div class=\"ui divider\"></div>\n        <h2>Links</h2>\n        <div class=\"ui divider\"></div>\n      </div>\n      <div class=\"links\">\n        <div class=\"info\">\n          <i class=\"github circular icon\"></i>\n          <a href=\"http://www.github.com/Joshkop\">github.com/Joshkop</a>\n        </div>\n        <div class=\"info\">\n          <i class=\"linkedin circular icon\"></i>\n          <a href=\"http://www.linkedin.com/in/Joshkop\">linkedin.com/in/Joshkop</a>\n        </div>\n        <div class=\"info\">\n          <i class=\"facebook circular icon\"></i>\n          <a href=\"https://www.facebook.com/Joshkop\">facebook.com/Joshkop</a>\n        </div>\n        <div class=\"info\">\n          <i class=\"twitter circular icon\"></i>\n          <a href=\"https://www.twitter.com/_Joshkop\">twitter.com/_Joshkop</a>\n        </div>\n      </div>\n    </div>\n    <div id=\"right\">\n      <div>\n        <div class=\"ui divider\"></div>\n        <h2>Berufserfahrung</h2>\n        <div class=\"ui divider\"></div>\n        <div id=\"berufe\">\n          <div class=\"beruf\">\n            <h3>Programmierer und Datenerfasser</h3>\n            <div class=\"info bold italic\">\n              <span>Fachverlag für Verbraucherinformationen</span>\n              <span>08/2015 - 01/2017</span>\n            </div>\n            <div class=\"text\">Sammeln und bearbeiten von Daten sowie die Programmierung von Datenverarbeitungsskripts und Eingabeoberflächen.</div>\n          </div>\n          <div class=\"beruf\">\n            <h3>Technik AG</h3>\n            <div class=\"info bold italic\">\n              <span>Grundschule Bochum Westenfeld</span>\n              <span>04/2013 - 02/2014</span>\n            </div>\n            <div class=\"text\">Mitleitung der Technik AG, in der Grundschülern die Welt der Technik\nnäher gebracht werden soll. Dabei unterrichte Ich mit einem weiteren Schüler\ndiese Grundschüler und lies diese Experimente unter unserer Beobachtung\nund Leitung durchführen.</div>\n          </div>\n          <div class=\"beruf\">\n            <h3>Verkäufer</h3>\n            <div class=\"info bold italic\">\n              <span>Edmund Goebgens Stadion- und Veranstaltungsservice GmbH</span>\n              <span>03/2012 - 06/2012</span>\n            </div>\n            <div class=\"text\">Verkauf von Lebensmitteln, vor allem Eis und Bier, in Stadien wie der Veltins Arena in Gelsenkirchen oder Lanxess Arena in Köln. Dabei verkaufte ich hauptsächlich in den Sitzplatzreihen mit Bauchladen.</div>\n          </div>\n          <div class=\"beruf\">\n            <h3>Praktikum im Bereich IT</h3>\n            <div class=\"info bold italic\">\n              <span>Faber Datentechnik</span>\n              <span>11/2011 - 11/2011</span>\n            </div>\n            <div class=\"text\">Praktikum vom 07.11 – 18.11.11 im Bereich IT. Dabei vor allem Einführung in\ndie Welt der Hardware und Montage von Computern.</div>\n          </div>\n          <div class=\"beruf\">\n            <h3>Praktikum im Bereich IT</h3>\n            <div class=\"info bold italic\">\n              <span>DOGEWO21</span>\n              <span>02/2010 - 02/2010</span>\n            </div>\n            <div class=\"text\">Praktikum vom 22.02 – 26.02.10 im Bereich IT. Dabei vor allem Software\nLösungen und Fehlerbehebung.</div>\n          </div>\n        </div>\n        <div class=\"ui divider\"></div>\n        <h2>Bildungsweg</h2>\n        <div class=\"ui divider\"></div>\n        <div id=\"bildung\">\n          <div class=\"bildung\">\n            <h3>Bachelor of Science (B.Sc.), Wirtschaftsinformatik</h3>\n            <div class=\"info bold italic\">\n              <span>Universität Duisburg-Essen, Standort Essen</span>\n              <span>10/2014 - 02/2017</span>\n            </div>\n            <div class=\"text\">Vorzeitig Beendet.</div>\n          </div>\n          <div class=\"bildung\">\n            <h3>Abitur</h3>\n            <div class=\"info bold italic\">\n              <span>Hellwegschule Bochum</span>\n              <span>02/2010 - 05/2014</span>\n            </div>\n            <div class=\"text\">Abschlussnote: 2,8</div>\n          </div>\n          <div class=\"bildung\">\n            <h3>Gymnasium</h3>\n            <div class=\"info bold italic\">\n              <span>Internatsschule Schloss Neubeuern, Bayern</span>\n              <span>09/2005 - 02/2010</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\n  export default {\n    name: 'app'\n  }\n\n\n</script>\n\n<style lang=\"sass\">\n  body\n    background: rgba(144, 238, 144, 0.28) !important\n  #app\n    display: flex\n    justify-content: center\n    /*min-height: 100%*/\n    padding: 30px\n  #left\n    padding: 30px\n    background-color: lightgreen\n    min-height: 100%\n    display: flex\n    flex-direction: column\n  #right\n    width: 650px\n    padding: 30px\n    background-color: whitesmoke\n    min-height: 100%\n    display: flex\n    flex-direction: column\n  .centered\n    align-self: center\n    text-align: center\n  .bold\n    font-weight: bold\n  .italic\n    font-style: italic\n  .info\n    display: flex\n    justify-content: space-between\n    align-items: center\n    padding-top: 3px\n    padding-bottom: 3px\n  .rating\n    display: flex\n    justify-content: space-around\n    img\n      margin-left: 2px\n  .inverted\n    filter: invert(100%)\n  footer\n    background-color: rgba(144, 238, 144, 0.64)\n    position: absolute\n    padding: 5px\n    bottom: 0\n    left: 0\n    right: 0\n  .beruf\n    margin-bottom: 20px\n  .bildung\n    margin-bottom: 20px\n  h3\n    margin-bottom: 5px !important\n    color: green\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?ff4fd388","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../node_modules/vue-loader/lib/style-rewriter?id=data-v-370e5544!sass-loader?indentedSyntax&sourceMap!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler?id=data-v-370e5544!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 5\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"left\"\n    }\n  }, [_c('a', {\n    staticClass: \"centered\",\n    attrs: {\n      \"href\": \"/\"\n    }\n  }, [_c('h1', [_vm._v(\"Joshua Menke\")]), _vm._v(\" \"), _c('img', {\n    staticClass: \"ui small circular image centered\",\n    attrs: {\n      \"src\": \"https://unsplash.it/200\",\n      \"alt\": \"Joshua Menke\"\n    }\n  })]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Persönliches\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  })]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"personal\"\n    }\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"birthday circular icon\"\n  }), _vm._v(\" \"), _c('div', [_vm._v(\"Geb. 13.10.1994\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"home circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"https://goo.gl/maps/JVHtcFxZz4q\"\n    }\n  }, [_c('div', [_vm._v(\"Kortumstr. 30\")]), _vm._v(\" \"), _c('div', [_vm._v(\"44787 Bochum\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"text telephone circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"tel:+4917660890700\"\n    }\n  }, [_vm._v(\"+49 176 - 60 89 0700\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"mail circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"mailto:info@joshuamenke.de\"\n    }\n  }, [_vm._v(\"info@joshuamenke.de\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"browser circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"http://joshuamenke.de\"\n    }\n  }, [_vm._v(\"joshuamenke.de\")])])]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Sprachen\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  })]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"sprachen\"\n    }\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"Deutsch\")])]), _vm._v(\" \"), _c('span', [_vm._v(\"Muttersprache\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"Englisch\")])]), _vm._v(\" \"), _c('span', [_vm._v(\"Fließend\")])])]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Kenntnisse\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  })]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"kenntnisse\"\n    }\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"Python\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n      \"title\": \"Python\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n      \"title\": \"Python\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n      \"title\": \"Python\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/python-filled/ios7/100/\",\n      \"title\": \"Python\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/python/ios7/100/\",\n      \"title\": \"Python\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"Java\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/java-bean-filled/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/java-bean-filled/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/java-bean/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/java-bean/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/java-bean/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"JavaScript\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n      \"title\": \"Javascript\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n      \"title\": \"Javascript\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n      \"title\": \"Javascript\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/javascript-filled/ios7/100/\",\n      \"title\": \"Javascript\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/javascript/ios7/100/\",\n      \"title\": \"Javascript\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"Html\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n      \"title\": \"Html 5\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n      \"title\": \"Html 5\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n      \"title\": \"Html 5\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/html-5-filled/ios7/100/\",\n      \"title\": \"Html 5\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/html-5/ios7/100/\",\n      \"title\": \"Html 5\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"CSS\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/css-filled/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/css-filled/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/css-filled/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/css/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/css/ios7/100/\",\n      \"title\": \"CSS\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"MS Office\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/microsoft-excel-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/microsoft-excel/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('span', [_c('b', [_vm._v(\"Linux\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/linux-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/linux-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/linux-filled/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/linux/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  }), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": \"https://png.icons8.com/linux/ios7/100/\",\n      \"title\": \"Microsoft Office\",\n      \"width\": \"13\",\n      \"height\": \"13\"\n    }\n  })])])]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Interessen & Hobbies\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"hobbies\"\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('b', [_vm._v(\"Computer / Programmieren\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('b', [_vm._v(\"Elektronische Musik\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('b', [_vm._v(\"Kochen\")])])]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Links\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"links\"\n  }, [_c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"github circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"http://www.github.com/Joshkop\"\n    }\n  }, [_vm._v(\"github.com/Joshkop\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"linkedin circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"http://www.linkedin.com/in/Joshkop\"\n    }\n  }, [_vm._v(\"linkedin.com/in/Joshkop\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"facebook circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"https://www.facebook.com/Joshkop\"\n    }\n  }, [_vm._v(\"facebook.com/Joshkop\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info\"\n  }, [_c('i', {\n    staticClass: \"twitter circular icon\"\n  }), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"https://www.twitter.com/_Joshkop\"\n    }\n  }, [_vm._v(\"twitter.com/_Joshkop\")])])])]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"right\"\n    }\n  }, [_c('div', [_c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Berufserfahrung\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"berufe\"\n    }\n  }, [_c('div', {\n    staticClass: \"beruf\"\n  }, [_c('h3', [_vm._v(\"Programmierer und Datenerfasser\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Fachverlag für Verbraucherinformationen\")]), _vm._v(\" \"), _c('span', [_vm._v(\"08/2015 - 01/2017\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Sammeln und bearbeiten von Daten sowie die Programmierung von Datenverarbeitungsskripts und Eingabeoberflächen.\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"beruf\"\n  }, [_c('h3', [_vm._v(\"Technik AG\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Grundschule Bochum Westenfeld\")]), _vm._v(\" \"), _c('span', [_vm._v(\"04/2013 - 02/2014\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Mitleitung der Technik AG, in der Grundschülern die Welt der Technik\\nnäher gebracht werden soll. Dabei unterrichte Ich mit einem weiteren Schüler\\ndiese Grundschüler und lies diese Experimente unter unserer Beobachtung\\nund Leitung durchführen.\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"beruf\"\n  }, [_c('h3', [_vm._v(\"Verkäufer\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Edmund Goebgens Stadion- und Veranstaltungsservice GmbH\")]), _vm._v(\" \"), _c('span', [_vm._v(\"03/2012 - 06/2012\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Verkauf von Lebensmitteln, vor allem Eis und Bier, in Stadien wie der Veltins Arena in Gelsenkirchen oder Lanxess Arena in Köln. Dabei verkaufte ich hauptsächlich in den Sitzplatzreihen mit Bauchladen.\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"beruf\"\n  }, [_c('h3', [_vm._v(\"Praktikum im Bereich IT\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Faber Datentechnik\")]), _vm._v(\" \"), _c('span', [_vm._v(\"11/2011 - 11/2011\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Praktikum vom 07.11 – 18.11.11 im Bereich IT. Dabei vor allem Einführung in\\ndie Welt der Hardware und Montage von Computern.\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"beruf\"\n  }, [_c('h3', [_vm._v(\"Praktikum im Bereich IT\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"DOGEWO21\")]), _vm._v(\" \"), _c('span', [_vm._v(\"02/2010 - 02/2010\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Praktikum vom 22.02 – 26.02.10 im Bereich IT. Dabei vor allem Software\\nLösungen und Fehlerbehebung.\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('h2', [_vm._v(\"Bildungsweg\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"bildung\"\n    }\n  }, [_c('div', {\n    staticClass: \"bildung\"\n  }, [_c('h3', [_vm._v(\"Bachelor of Science (B.Sc.), Wirtschaftsinformatik\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Universität Duisburg-Essen, Standort Essen\")]), _vm._v(\" \"), _c('span', [_vm._v(\"10/2014 - 02/2017\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Vorzeitig Beendet.\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"bildung\"\n  }, [_c('h3', [_vm._v(\"Abitur\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Hellwegschule Bochum\")]), _vm._v(\" \"), _c('span', [_vm._v(\"02/2010 - 05/2014\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"Abschlussnote: 2,8\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"bildung\"\n  }, [_c('h3', [_vm._v(\"Gymnasium\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info bold italic\"\n  }, [_c('span', [_vm._v(\"Internatsschule Schloss Neubeuern, Bayern\")]), _vm._v(\" \"), _c('span', [_vm._v(\"09/2005 - 02/2010\")])])])])])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-370e5544!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 7\n// module chunks = 1"," /*\n * # Semantic UI - 2.2.10\n * https://github.com/Semantic-Org/Semantic-UI\n * http://www.semantic-ui.com/\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*!\n * # Semantic UI 2.2.10 - Site\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.site = $.fn.site = function(parameters) {\n  var\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    settings        = ( $.isPlainObject(parameters) )\n      ? $.extend(true, {}, $.site.settings, parameters)\n      : $.extend({}, $.site.settings),\n\n    namespace       = settings.namespace,\n    error           = settings.error,\n\n    eventNamespace  = '.' + namespace,\n    moduleNamespace = 'module-' + namespace,\n\n    $document       = $(document),\n    $module         = $document,\n    element         = this,\n    instance        = $module.data(moduleNamespace),\n\n    module,\n    returnedValue\n  ;\n  module = {\n\n    initialize: function() {\n      module.instantiate();\n    },\n\n    instantiate: function() {\n      module.verbose('Storing instance of site', module);\n      instance = module;\n      $module\n        .data(moduleNamespace, module)\n      ;\n    },\n\n    normalize: function() {\n      module.fix.console();\n      module.fix.requestAnimationFrame();\n    },\n\n    fix: {\n      console: function() {\n        module.debug('Normalizing window.console');\n        if (console === undefined || console.log === undefined) {\n          module.verbose('Console not available, normalizing events');\n          module.disable.console();\n        }\n        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\n          module.verbose('Console group not available, normalizing events');\n          window.console.group = function() {};\n          window.console.groupEnd = function() {};\n          window.console.groupCollapsed = function() {};\n        }\n        if (typeof console.markTimeline == 'undefined') {\n          module.verbose('Mark timeline not available, normalizing events');\n          window.console.markTimeline = function() {};\n        }\n      },\n      consoleClear: function() {\n        module.debug('Disabling programmatic console clearing');\n        window.console.clear = function() {};\n      },\n      requestAnimationFrame: function() {\n        module.debug('Normalizing requestAnimationFrame');\n        if(window.requestAnimationFrame === undefined) {\n          module.debug('RequestAnimationFrame not available, normalizing event');\n          window.requestAnimationFrame = window.requestAnimationFrame\n            || window.mozRequestAnimationFrame\n            || window.webkitRequestAnimationFrame\n            || window.msRequestAnimationFrame\n            || function(callback) { setTimeout(callback, 0); }\n          ;\n        }\n      }\n    },\n\n    moduleExists: function(name) {\n      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\n    },\n\n    enabled: {\n      modules: function(modules) {\n        var\n          enabledModules = []\n        ;\n        modules = modules || settings.modules;\n        $.each(modules, function(index, name) {\n          if(module.moduleExists(name)) {\n            enabledModules.push(name);\n          }\n        });\n        return enabledModules;\n      }\n    },\n\n    disabled: {\n      modules: function(modules) {\n        var\n          disabledModules = []\n        ;\n        modules = modules || settings.modules;\n        $.each(modules, function(index, name) {\n          if(!module.moduleExists(name)) {\n            disabledModules.push(name);\n          }\n        });\n        return disabledModules;\n      }\n    },\n\n    change: {\n      setting: function(setting, value, modules, modifyExisting) {\n        modules = (typeof modules === 'string')\n          ? (modules === 'all')\n            ? settings.modules\n            : [modules]\n          : modules || settings.modules\n        ;\n        modifyExisting = (modifyExisting !== undefined)\n          ? modifyExisting\n          : true\n        ;\n        $.each(modules, function(index, name) {\n          var\n            namespace = (module.moduleExists(name))\n              ? $.fn[name].settings.namespace || false\n              : true,\n            $existingModules\n          ;\n          if(module.moduleExists(name)) {\n            module.verbose('Changing default setting', setting, value, name);\n            $.fn[name].settings[setting] = value;\n            if(modifyExisting && namespace) {\n              $existingModules = $(':data(module-' + namespace + ')');\n              if($existingModules.length > 0) {\n                module.verbose('Modifying existing settings', $existingModules);\n                $existingModules[name]('setting', setting, value);\n              }\n            }\n          }\n        });\n      },\n      settings: function(newSettings, modules, modifyExisting) {\n        modules = (typeof modules === 'string')\n          ? [modules]\n          : modules || settings.modules\n        ;\n        modifyExisting = (modifyExisting !== undefined)\n          ? modifyExisting\n          : true\n        ;\n        $.each(modules, function(index, name) {\n          var\n            $existingModules\n          ;\n          if(module.moduleExists(name)) {\n            module.verbose('Changing default setting', newSettings, name);\n            $.extend(true, $.fn[name].settings, newSettings);\n            if(modifyExisting && namespace) {\n              $existingModules = $(':data(module-' + namespace + ')');\n              if($existingModules.length > 0) {\n                module.verbose('Modifying existing settings', $existingModules);\n                $existingModules[name]('setting', newSettings);\n              }\n            }\n          }\n        });\n      }\n    },\n\n    enable: {\n      console: function() {\n        module.console(true);\n      },\n      debug: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Enabling debug for modules', modules);\n        module.change.setting('debug', true, modules, modifyExisting);\n      },\n      verbose: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Enabling verbose debug for modules', modules);\n        module.change.setting('verbose', true, modules, modifyExisting);\n      }\n    },\n    disable: {\n      console: function() {\n        module.console(false);\n      },\n      debug: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Disabling debug for modules', modules);\n        module.change.setting('debug', false, modules, modifyExisting);\n      },\n      verbose: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Disabling verbose debug for modules', modules);\n        module.change.setting('verbose', false, modules, modifyExisting);\n      }\n    },\n\n    console: function(enable) {\n      if(enable) {\n        if(instance.cache.console === undefined) {\n          module.error(error.console);\n          return;\n        }\n        module.debug('Restoring console function');\n        window.console = instance.cache.console;\n      }\n      else {\n        module.debug('Disabling console function');\n        instance.cache.console = window.console;\n        window.console = {\n          clear          : function(){},\n          error          : function(){},\n          group          : function(){},\n          groupCollapsed : function(){},\n          groupEnd       : function(){},\n          info           : function(){},\n          log            : function(){},\n          markTimeline   : function(){},\n          warn           : function(){}\n        };\n      }\n    },\n\n    destroy: function() {\n      module.verbose('Destroying previous site for', $module);\n      $module\n        .removeData(moduleNamespace)\n      ;\n    },\n\n    cache: {},\n\n    setting: function(name, value) {\n      if( $.isPlainObject(name) ) {\n        $.extend(true, settings, name);\n      }\n      else if(value !== undefined) {\n        settings[name] = value;\n      }\n      else {\n        return settings[name];\n      }\n    },\n    internal: function(name, value) {\n      if( $.isPlainObject(name) ) {\n        $.extend(true, module, name);\n      }\n      else if(value !== undefined) {\n        module[name] = value;\n      }\n      else {\n        return module[name];\n      }\n    },\n    debug: function() {\n      if(settings.debug) {\n        if(settings.performance) {\n          module.performance.log(arguments);\n        }\n        else {\n          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n          module.debug.apply(console, arguments);\n        }\n      }\n    },\n    verbose: function() {\n      if(settings.verbose && settings.debug) {\n        if(settings.performance) {\n          module.performance.log(arguments);\n        }\n        else {\n          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n          module.verbose.apply(console, arguments);\n        }\n      }\n    },\n    error: function() {\n      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n      module.error.apply(console, arguments);\n    },\n    performance: {\n      log: function(message) {\n        var\n          currentTime,\n          executionTime,\n          previousTime\n        ;\n        if(settings.performance) {\n          currentTime   = new Date().getTime();\n          previousTime  = time || currentTime;\n          executionTime = currentTime - previousTime;\n          time          = currentTime;\n          performance.push({\n            'Element'        : element,\n            'Name'           : message[0],\n            'Arguments'      : [].slice.call(message, 1) || '',\n            'Execution Time' : executionTime\n          });\n        }\n        clearTimeout(module.performance.timer);\n        module.performance.timer = setTimeout(module.performance.display, 500);\n      },\n      display: function() {\n        var\n          title = settings.name + ':',\n          totalTime = 0\n        ;\n        time = false;\n        clearTimeout(module.performance.timer);\n        $.each(performance, function(index, data) {\n          totalTime += data['Execution Time'];\n        });\n        title += ' ' + totalTime + 'ms';\n        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n          console.groupCollapsed(title);\n          if(console.table) {\n            console.table(performance);\n          }\n          else {\n            $.each(performance, function(index, data) {\n              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n            });\n          }\n          console.groupEnd();\n        }\n        performance = [];\n      }\n    },\n    invoke: function(query, passedArguments, context) {\n      var\n        object = instance,\n        maxDepth,\n        found,\n        response\n      ;\n      passedArguments = passedArguments || queryArguments;\n      context         = element         || context;\n      if(typeof query == 'string' && object !== undefined) {\n        query    = query.split(/[\\. ]/);\n        maxDepth = query.length - 1;\n        $.each(query, function(depth, value) {\n          var camelCaseValue = (depth != maxDepth)\n            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n            : query\n          ;\n          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n            object = object[camelCaseValue];\n          }\n          else if( object[camelCaseValue] !== undefined ) {\n            found = object[camelCaseValue];\n            return false;\n          }\n          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n            object = object[value];\n          }\n          else if( object[value] !== undefined ) {\n            found = object[value];\n            return false;\n          }\n          else {\n            module.error(error.method, query);\n            return false;\n          }\n        });\n      }\n      if ( $.isFunction( found ) ) {\n        response = found.apply(context, passedArguments);\n      }\n      else if(found !== undefined) {\n        response = found;\n      }\n      if($.isArray(returnedValue)) {\n        returnedValue.push(response);\n      }\n      else if(returnedValue !== undefined) {\n        returnedValue = [returnedValue, response];\n      }\n      else if(response !== undefined) {\n        returnedValue = response;\n      }\n      return found;\n    }\n  };\n\n  if(methodInvoked) {\n    if(instance === undefined) {\n      module.initialize();\n    }\n    module.invoke(query);\n  }\n  else {\n    if(instance !== undefined) {\n      module.destroy();\n    }\n    module.initialize();\n  }\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.site.settings = {\n\n  name        : 'Site',\n  namespace   : 'site',\n\n  error : {\n    console : 'Console cannot be restored, most likely it was overwritten outside of module',\n    method : 'The method you called is not defined.'\n  },\n\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  modules: [\n    'accordion',\n    'api',\n    'checkbox',\n    'dimmer',\n    'dropdown',\n    'embed',\n    'form',\n    'modal',\n    'nag',\n    'popup',\n    'rating',\n    'shape',\n    'sidebar',\n    'state',\n    'sticky',\n    'tab',\n    'transition',\n    'visit',\n    'visibility'\n  ],\n\n  siteNamespace   : 'site',\n  namespaceStub   : {\n    cache     : {},\n    config    : {},\n    sections  : {},\n    section   : {},\n    utilities : {}\n  }\n\n};\n\n// allows for selection of elements with data attributes\n$.extend($.expr[ \":\" ], {\n  data: ($.expr.createPseudo)\n    ? $.expr.createPseudo(function(dataName) {\n        return function(elem) {\n          return !!$.data(elem, dataName);\n        };\n      })\n    : function(elem, i, match) {\n      // support: jQuery < 1.8\n      return !!$.data(elem, match[ 3 ]);\n    }\n});\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.form = function(parameters) {\n  var\n    $allModules      = $(this),\n    moduleSelector   = $allModules.selector || '',\n\n    time             = new Date().getTime(),\n    performance      = [],\n\n    query            = arguments[0],\n    legacyParameters = arguments[1],\n    methodInvoked    = (typeof query == 'string'),\n    queryArguments   = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module     = $(this),\n        element     = this,\n\n        formErrors  = [],\n        keyHeldDown = false,\n\n        // set at run-time\n        $field,\n        $group,\n        $message,\n        $prompt,\n        $submit,\n        $clear,\n        $reset,\n\n        settings,\n        validation,\n\n        metadata,\n        selector,\n        className,\n        regExp,\n        error,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n\n        instance,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          // settings grabbed at run time\n          module.get.settings();\n          if(methodInvoked) {\n            if(instance === undefined) {\n              module.instantiate();\n            }\n            module.invoke(query);\n          }\n          else {\n            if(instance !== undefined) {\n              instance.invoke('destroy');\n            }\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field      = $module.find(selector.field);\n          $group      = $module.find(selector.group);\n          $message    = $module.find(selector.message);\n          $prompt     = $module.find(selector.prompt);\n\n          $submit     = $module.find(selector.submit);\n          $clear      = $module.find(selector.clear);\n          $reset      = $module.find(selector.reset);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        attachEvents: function(selector, action) {\n          action = action || 'submit';\n          $(selector)\n            .on('click' + eventNamespace, function(event) {\n              module[action]();\n              event.preventDefault();\n            })\n          ;\n        },\n\n        bindEvents: function() {\n          module.verbose('Attaching form events');\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n            .on('click'  + eventNamespace, selector.submit, module.submit)\n            .on('click'  + eventNamespace, selector.reset, module.reset)\n            .on('click'  + eventNamespace, selector.clear, module.clear)\n          ;\n          if(settings.keyboardShortcuts) {\n            $module\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n            ;\n          }\n          $field\n            .each(function() {\n              var\n                $input     = $(this),\n                type       = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input)\n              ;\n              $(this)\n                .on(inputEvent + eventNamespace, module.event.field.change)\n              ;\n            })\n          ;\n        },\n\n        clear: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('clear');\n              }\n              else if(isCheckbox) {\n                $field.prop('checked', false);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val('');\n              }\n            })\n          ;\n        },\n\n        reset: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(defaultValue === undefined) {\n                return;\n              }\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('restore defaults');\n              }\n              else if(isCheckbox) {\n                module.verbose('Resetting checkbox value', $element, defaultValue);\n                $field.prop('checked', defaultValue);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val(defaultValue);\n              }\n            })\n          ;\n        },\n\n        determine: {\n          isValid: function() {\n            var\n              allValid = true\n            ;\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field, fieldName, true) ) ) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n\n        is: {\n          bracketedRule: function(rule) {\n            return (rule.type && rule.type.match(settings.regExp.bracket));\n          },\n          empty: function($field) {\n            if(!$field || $field.length === 0) {\n              return true;\n            }\n            else if($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            }\n            else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function(field) {\n            var\n              allValid = true\n            ;\n            if(field) {\n              module.verbose('Checking if field is valid', field);\n              return module.validate.field(validation[field], field, false);\n            }\n            else {\n              module.verbose('Checking if form is valid');\n              $.each(validation, function(fieldName, field) {\n                if( !module.is.valid(fieldName) ) {\n                  allValid = false;\n                }\n              });\n              return allValid;\n            }\n          }\n        },\n\n        removeEvents: function() {\n          $module\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n          $submit\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field       = $(this),\n                key          = event.which,\n                isInput      = $field.is(selector.input),\n                isCheckbox   = $field.is(selector.checkbox),\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n                keyCode      = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if(!keyHeldDown) {\n                  $field\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\n                  ;\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n                keyHeldDown = true;\n              }\n            },\n            keyup: function() {\n              keyHeldDown = false;\n            },\n            blur: function(event) {\n              var\n                $field          = $(this),\n                $fieldGroup     = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field, validationRules);\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n              else if(settings.on == 'blur' || settings.on == 'change') {\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n            },\n            change: function(event) {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( validationRules );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          ancillaryValue: function(rule) {\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\n              return false;\n            }\n            return (rule.value !== undefined)\n              ? rule.value\n              : rule.type.match(settings.regExp.bracket)[1] + ''\n            ;\n          },\n          ruleName: function(rule) {\n            if( module.is.bracketedRule(rule) ) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n            return rule.type;\n          },\n          changeEvent: function(type, $input) {\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            }\n            else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          prompt: function(rule, field) {\n            var\n              ruleName      = module.get.ruleName(rule),\n              ancillary     = module.get.ancillaryValue(rule),\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n              requiresValue = (prompt.search('{value}') !== -1),\n              requiresName  = (prompt.search('{name}') !== -1),\n              $label,\n              $field,\n              name\n            ;\n            if(requiresName || requiresValue) {\n              $field = module.get.field(field.identifier);\n            }\n            if(requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n            if(requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = ($label.length == 1)\n                ? $label.text()\n                : $field.prop('placeholder') || settings.text.unspecifiedField\n              ;\n              prompt = prompt.replace('{name}', name);\n            }\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n            if(!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n            return prompt;\n          },\n          settings: function() {\n            if($.isPlainObject(parameters)) {\n              var\n                keys     = Object.keys(parameters),\n                isLegacySettings = (keys.length > 0)\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n                  : false,\n                ruleKeys\n              ;\n              if(isLegacySettings) {\n                // 1.x (ducktyped)\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              }\n              else {\n                // 2.x\n                if(parameters.fields) {\n                  ruleKeys = Object.keys(parameters.fields);\n                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\n                    $.each(parameters.fields, function(name, rules) {\n                      if(typeof rules == 'string') {\n                        rules = [rules];\n                      }\n                      parameters.fields[name] = {\n                        rules: []\n                      };\n                      $.each(rules, function(index, rule) {\n                        parameters.fields[name].rules.push({ type: rule });\n                      });\n                    });\n                  }\n                }\n\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            }\n            else {\n              settings   = $.fn.form.settings;\n              validation = $.fn.form.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            }\n\n            // shorthand\n            namespace       = settings.namespace;\n            metadata        = settings.metadata;\n            selector        = settings.selector;\n            className       = settings.className;\n            regExp          = settings.regExp;\n            error           = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace  = '.' + namespace;\n\n            // grab instance\n            instance = $module.data(moduleNamespace);\n\n            // refresh selector cache\n            module.refresh();\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if($field.filter('#' + identifier).length > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'[]\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          fields: function(fields) {\n            var\n              $fields = $()\n            ;\n            $.each(fields, function(index, name) {\n              $fields = $fields.add( module.get.field(name) );\n            });\n            return $fields;\n          },\n          validation: function($field) {\n            var\n              fieldValidation,\n              identifier\n            ;\n            if(!validation) {\n              return false;\n            }\n            $.each(validation, function(fieldName, field) {\n              identifier = field.identifier || fieldName;\n              if( module.get.field(identifier)[0] == $field[0] ) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var\n              fields = [],\n              results\n            ;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var\n              $fields = $.isArray(fields)\n                ? module.get.fields(fields)\n                : $field,\n              values = {}\n            ;\n            $fields.each(function(index, field) {\n              var\n                $field     = $(field),\n                type       = $field.prop('type'),\n                name       = $field.prop('name'),\n                value      = $field.val(),\n                isCheckbox = $field.is(selector.checkbox),\n                isRadio    = $field.is(selector.radio),\n                isMultiple = (name.indexOf('[]') !== -1),\n                isChecked  = (isCheckbox)\n                  ? $field.is(':checked')\n                  : false\n              ;\n              if(name) {\n                if(isMultiple) {\n                  name = name.replace('[]', '');\n                  if(!values[name]) {\n                    values[name] = [];\n                  }\n                  if(isCheckbox) {\n                    if(isChecked) {\n                      values[name].push(value || true);\n                    }\n                    else {\n                      values[name].push(false);\n                    }\n                  }\n                  else {\n                    values[name].push(value);\n                  }\n                }\n                else {\n                  if(isRadio) {\n                    if(isChecked) {\n                      values[name] = value;\n                    }\n                  }\n                  else if(isCheckbox) {\n                    if(isChecked) {\n                      values[name] = value || true;\n                    }\n                    else {\n                      values[name] = false;\n                    }\n                  }\n                  else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if(typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n            if($field.filter('#' + identifier).length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        escape: {\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        add: {\n          prompt: function(identifier, errors) {\n            var\n              $field       = module.get.field(identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.children(selector.prompt),\n              promptExists = ($prompt.length !== 0)\n            ;\n            errors = (typeof errors == 'string')\n              ? [errors]\n              : errors\n            ;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n              else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          prompt: function(identifier) {\n            var\n              $field      = module.get.field(identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.children(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        set: {\n          success: function() {\n            $module\n              .removeClass(className.error)\n              .addClass(className.success)\n            ;\n          },\n          defaults: function () {\n            $field\n              .each(function () {\n                var\n                  $field     = $(this),\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n                  value      = (isCheckbox)\n                    ? $field.is(':checked')\n                    : $field.val()\n                ;\n                $field.data(metadata.defaultValue, value);\n              })\n            ;\n          },\n          error: function() {\n            $module\n              .removeClass(className.success)\n              .addClass(className.error)\n            ;\n          },\n          value: function (field, value) {\n            var\n              fields = {}\n            ;\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if($.isEmptyObject(fields)) {\n              return;\n            }\n            $.each(fields, function(key, value) {\n              var\n                $field      = module.get.field(key),\n                $element    = $field.parent(),\n                isMultiple  = $.isArray(value),\n                isCheckbox  = $element.is(selector.uiCheckbox),\n                isDropdown  = $element.is(selector.uiDropdown),\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\n                fieldExists = ($field.length > 0),\n                $multipleField\n              ;\n              if(fieldExists) {\n                if(isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function(index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element       = $multipleField.parent();\n                    if($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                }\n                else if(isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]')\n                    .parent(selector.uiCheckbox)\n                      .checkbox('check')\n                  ;\n                }\n                else if(isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n                  if(value === true) {\n                    $element.checkbox('check');\n                  }\n                  else {\n                    $element.checkbox('uncheck');\n                  }\n                }\n                else if(isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                }\n                else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n\n        validate: {\n\n          form: function(event, ignoreCallbacks) {\n            var\n              values = module.get.values(),\n              apiRequest\n            ;\n\n            // input keydown event will fire submit repeatedly by browser default\n            if(keyHeldDown) {\n              return false;\n            }\n\n            // reset errors\n            formErrors = [];\n            if( module.determine.isValid() ) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n              if(ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            }\n            else {\n              module.debug('Form has errors');\n              module.set.error();\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              // prevent ajax submit\n              if($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n              if(ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field, fieldName, showErrors) {\n            showErrors = (showErrors !== undefined)\n              ? showErrors\n              : true\n            ;\n            if(typeof field == 'string') {\n              module.verbose('Validating field', field);\n              fieldName = field;\n              field = validation[field];\n            }\n            var\n              identifier    = field.identifier || fieldName,\n              $field        = module.get.field(identifier),\n              $dependsField = (field.depends)\n                ? module.get.field(field.depends)\n                : false,\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n            if($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.optional && module.is.blank($field)){\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            }\n            else if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              if(showErrors) {\n                module.remove.prompt(identifier, fieldErrors);\n                settings.onValid.call($field);\n              }\n            }\n            else {\n              if(showErrors) {\n                formErrors = formErrors.concat(fieldErrors);\n                module.add.prompt(identifier, fieldErrors);\n                settings.onInvalid.call($field, fieldErrors);\n              }\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, rule) {\n            var\n              $field       = module.get.field(field.identifier),\n              type         = rule.type,\n              value        = $field.val(),\n              isValid      = true,\n              ancillary    = module.get.ancillaryValue(rule),\n              ruleName     = module.get.ruleName(rule),\n              ruleFunction = settings.rules[ruleName]\n            ;\n            if( !$.isFunction(ruleFunction) ) {\n              module.error(error.noRule, ruleName);\n              return;\n            }\n            // cast to string avoiding encoding special values\n            value = (value === undefined || value === '' || value === null)\n              ? ''\n              : $.trim(value + '')\n            ;\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      module.initialize();\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.form.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  fields            : false,\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 200,\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    defaultValue : 'default',\n    validate     : 'validate'\n  },\n\n  regExp: {\n    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\n    bracket : /\\[(.*)\\]/i,\n    decimal : /^\\d+\\.?\\d*$/,\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    flags   : /^\\/(.*)\\/(.*)?/,\n    integer : /^\\-?\\d+$/,\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n  },\n\n  text: {\n    unspecifiedRule  : 'Please enter a valid value',\n    unspecifiedField : 'This field'\n  },\n\n  prompt: {\n    empty                : '{name} must have a value',\n    checked              : '{name} must be checked',\n    email                : '{name} must be a valid e-mail',\n    url                  : '{name} must be a valid url',\n    regExp               : '{name} is not formatted correctly',\n    integer              : '{name} must be an integer',\n    decimal              : '{name} must be a decimal number',\n    number               : '{name} must be set to a number',\n    is                   : '{name} must be \"{ruleValue}\"',\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n    contain              : '{name} cannot contain \"{ruleValue}\"',\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\n    minLength            : '{name} must be at least {ruleValue} characters',\n    length               : '{name} must be at least {ruleValue} characters',\n    exactLength          : '{name} must be exactly {ruleValue} characters',\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n    match                : '{name} must match {ruleValue} field',\n    different            : '{name} must have a different value than {ruleValue} field',\n    creditCard           : '{name} must be a valid credit card number',\n    minCount             : '{name} must have at least {ruleValue} choices',\n    exactCount           : '{name} must have exactly {ruleValue} choices',\n    maxCount             : '{name} must have {ruleValue} or less choices'\n  },\n\n  selector : {\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    clear      : '.clear',\n    field      : 'input, textarea, select',\n    group      : '.field',\n    input      : 'input',\n    message    : '.error.message',\n    prompt     : '.prompt.label',\n    radio      : 'input[type=\"radio\"]',\n    reset      : '.reset:not([type=\"reset\"])',\n    submit     : '.submit:not([type=\"submit\"])',\n    uiCheckbox : '.ui.checkbox',\n    uiDropdown : '.ui.dropdown'\n  },\n\n  className : {\n    error   : 'error',\n    label   : 'ui prompt label',\n    pressed : 'down',\n    success : 'success'\n  },\n\n  error: {\n    identifier : 'You must specify a string identifier for each field',\n    method     : 'The method you called is not defined.',\n    noRule     : 'There is no rule matching the one you specified',\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n  },\n\n  templates: {\n\n    // template that produces error message\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n\n    // template that produces label\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui basic red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n\n    // is not empty or blank string\n    empty: function(value) {\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n    },\n\n    // checkbox checked\n    checked: function() {\n      return ($(this).filter(':checked').length > 0);\n    },\n\n    // is most likely an email\n    email: function(value){\n      return $.fn.form.settings.regExp.email.test(value);\n    },\n\n    // value is most likely url\n    url: function(value) {\n      return $.fn.form.settings.regExp.url.test(value);\n    },\n\n    // matches specified regExp\n    regExp: function(value, regExp) {\n      if(regExp instanceof RegExp) {\n        return value.match(regExp);\n      }\n      var\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n        flags\n      ;\n      // regular expression specified as /baz/gi (flags)\n      if(regExpParts) {\n        regExp = (regExpParts.length >= 2)\n          ? regExpParts[1]\n          : regExp\n        ;\n        flags = (regExpParts.length >= 3)\n          ? regExpParts[2]\n          : ''\n        ;\n      }\n      return value.match( new RegExp(regExp, flags) );\n    },\n\n    // is valid integer or matches range\n    integer: function(value, range) {\n      var\n        intRegExp = $.fn.form.settings.regExp.integer,\n        min,\n        max,\n        parts\n      ;\n      if( !range || ['', '..'].indexOf(range) !== -1) {\n        // do nothing\n      }\n      else if(range.indexOf('..') == -1) {\n        if(intRegExp.test(range)) {\n          min = max = range - 0;\n        }\n      }\n      else {\n        parts = range.split('..', 2);\n        if(intRegExp.test(parts[0])) {\n          min = parts[0] - 0;\n        }\n        if(intRegExp.test(parts[1])) {\n          max = parts[1] - 0;\n        }\n      }\n      return (\n        intRegExp.test(value) &&\n        (min === undefined || value >= min) &&\n        (max === undefined || value <= max)\n      );\n    },\n\n    // is valid number (with decimal)\n    decimal: function(value) {\n      return $.fn.form.settings.regExp.decimal.test(value);\n    },\n\n    // is valid number\n    number: function(value) {\n      return $.fn.form.settings.regExp.number.test(value);\n    },\n\n    // is value (case insensitive)\n    is: function(value, text) {\n      text = (typeof text == 'string')\n        ? text.toLowerCase()\n        : text\n      ;\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      return (value == text);\n    },\n\n    // is value\n    isExactly: function(value, text) {\n      return (value == text);\n    },\n\n    // value is not another value (case insensitive)\n    not: function(value, notValue) {\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      notValue = (typeof notValue == 'string')\n        ? notValue.toLowerCase()\n        : notValue\n      ;\n      return (value != notValue);\n    },\n\n    // value is not another value (case sensitive)\n    notExactly: function(value, notValue) {\n      return (value != notValue);\n    },\n\n    // value contains text (insensitive)\n    contains: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) !== -1);\n    },\n\n    // value contains text (case sensitive)\n    containsExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) !== -1);\n    },\n\n    // value contains text (insensitive)\n    doesntContain: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) === -1);\n    },\n\n    // value contains text (case sensitive)\n    doesntContainExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) === -1);\n    },\n\n    // is at least string length\n    minLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // is exactly length\n    exactLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length == requiredLength)\n        : false\n      ;\n    },\n\n    // is less than length\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n\n    // matches another field\n    match: function(value, identifier) {\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n\n    // different than another field\n    different: function(value, identifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() !== matchingValue.toString() )\n        : false\n      ;\n    },\n\n    creditCard: function(cardNumber, cardTypes) {\n      var\n        cards = {\n          visa: {\n            pattern : /^4/,\n            length  : [16]\n          },\n          amex: {\n            pattern : /^3[47]/,\n            length  : [15]\n          },\n          mastercard: {\n            pattern : /^5[1-5]/,\n            length  : [16]\n          },\n          discover: {\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length  : [16]\n          },\n          unionPay: {\n            pattern : /^(62|88)/,\n            length  : [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern : /^35(2[89]|[3-8][0-9])/,\n            length  : [16]\n          },\n          maestro: {\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern : /^(30[0-5]|^36)/,\n            length  : [14]\n          },\n          laser: {\n            pattern : /^(6304|670[69]|6771)/,\n            length  : [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n            length  : [16]\n          }\n        },\n        valid         = {},\n        validCard     = false,\n        requiredTypes = (typeof cardTypes == 'string')\n          ? cardTypes.split(',')\n          : false,\n        unionPay,\n        validation\n      ;\n\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n        return;\n      }\n\n      // allow dashes in card\n      cardNumber = cardNumber.replace(/[\\-]/g, '');\n\n      // verify card types\n      if(requiredTypes) {\n        $.each(requiredTypes, function(index, type){\n          // verify each card type\n          validation = cards[type];\n          if(validation) {\n            valid = {\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n              pattern : (cardNumber.search(validation.pattern) !== -1)\n            };\n            if(valid.length && valid.pattern) {\n              validCard = true;\n            }\n          }\n        });\n\n        if(!validCard) {\n          return false;\n        }\n      }\n\n      // skip luhn for UnionPay\n      unionPay = {\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n      };\n      if(unionPay.number && unionPay.pattern) {\n        return true;\n      }\n\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\n      var\n        length        = cardNumber.length,\n        multiple      = 0,\n        producedValue = [\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n        ],\n        sum           = 0\n      ;\n      while (length--) {\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n        multiple ^= 1;\n      }\n      return (sum % 10 === 0 && sum > 0);\n    },\n\n    minCount: function(value, minCount) {\n      if(minCount == 0) {\n        return true;\n      }\n      if(minCount == 1) {\n        return (value !== '');\n      }\n      return (value.split(',').length >= minCount);\n    },\n\n    exactCount: function(value, exactCount) {\n      if(exactCount == 0) {\n        return (value === '');\n      }\n      if(exactCount == 1) {\n        return (value !== '' && value.search(',') === -1);\n      }\n      return (value.split(',').length == exactCount);\n    },\n\n    maxCount: function(value, maxCount) {\n      if(maxCount == 0) {\n        return false;\n      }\n      if(maxCount == 1) {\n        return (value.search(',') === -1);\n      }\n      return (value.split(',').length <= maxCount);\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Accordion\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.accordion = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\n          : $.extend({}, $.fn.accordion.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        $module  = $(this),\n        $title   = $module.find(selector.title),\n        $content = $module.find(selector.content),\n\n        element  = this,\n        instance = $module.data(moduleNamespace),\n        observer,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing', $module);\n          module.bind.events();\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous instance', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $title   = $module.find(selector.title);\n          $content = $module.find(selector.content);\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, updating selector cache');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.debug('Binding delegated events');\n            $module\n              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\n            ;\n          }\n        },\n\n        event: {\n          click: function() {\n            module.toggle.call(this);\n          }\n        },\n\n        toggle: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating = $activeContent.hasClass(className.animating),\n            isActive    = $activeContent.hasClass(className.active),\n            isOpen      = (isActive && !isAnimating),\n            isOpening   = (!isActive && isAnimating)\n          ;\n          module.debug('Toggling visibility of content', $activeTitle);\n          if(isOpen || isOpening) {\n            if(settings.collapsible) {\n              module.close.call($activeTitle);\n            }\n            else {\n              module.debug('Cannot close accordion content collapsing is disabled');\n            }\n          }\n          else {\n            module.open.call($activeTitle);\n          }\n        },\n\n        open: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating = $activeContent.hasClass(className.animating),\n            isActive    = $activeContent.hasClass(className.active),\n            isOpen      = (isActive || isAnimating)\n          ;\n          if(isOpen) {\n            module.debug('Accordion already open, skipping', $activeContent);\n            return;\n          }\n          module.debug('Opening accordion content', $activeTitle);\n          settings.onOpening.call($activeContent);\n          if(settings.exclusive) {\n            module.closeOthers.call($activeTitle);\n          }\n          $activeTitle\n            .addClass(className.active)\n          ;\n          $activeContent\n            .stop(true, true)\n            .addClass(className.animating)\n          ;\n          if(settings.animateChildren) {\n            if($.fn.transition !== undefined && $module.transition('is supported')) {\n              $activeContent\n                .children()\n                  .transition({\n                    animation   : 'fade in',\n                    queue       : false,\n                    useFailSafe : true,\n                    debug       : settings.debug,\n                    verbose     : settings.verbose,\n                    duration    : settings.duration\n                  })\n              ;\n            }\n            else {\n              $activeContent\n                .children()\n                  .stop(true, true)\n                  .animate({\n                    opacity: 1\n                  }, settings.duration, module.resetOpacity)\n              ;\n            }\n          }\n          $activeContent\n            .slideDown(settings.duration, settings.easing, function() {\n              $activeContent\n                .removeClass(className.animating)\n                .addClass(className.active)\n              ;\n              module.reset.display.call(this);\n              settings.onOpen.call(this);\n              settings.onChange.call(this);\n            })\n          ;\n        },\n\n        close: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating    = $activeContent.hasClass(className.animating),\n            isActive       = $activeContent.hasClass(className.active),\n            isOpening      = (!isActive && isAnimating),\n            isClosing      = (isActive && isAnimating)\n          ;\n          if((isActive || isOpening) && !isClosing) {\n            module.debug('Closing accordion content', $activeContent);\n            settings.onClosing.call($activeContent);\n            $activeTitle\n              .removeClass(className.active)\n            ;\n            $activeContent\n              .stop(true, true)\n              .addClass(className.animating)\n            ;\n            if(settings.animateChildren) {\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $activeContent\n                  .children()\n                    .transition({\n                      animation   : 'fade out',\n                      queue       : false,\n                      useFailSafe : true,\n                      debug       : settings.debug,\n                      verbose     : settings.verbose,\n                      duration    : settings.duration\n                    })\n                ;\n              }\n              else {\n                $activeContent\n                  .children()\n                    .stop(true, true)\n                    .animate({\n                      opacity: 0\n                    }, settings.duration, module.resetOpacity)\n                ;\n              }\n            }\n            $activeContent\n              .slideUp(settings.duration, settings.easing, function() {\n                $activeContent\n                  .removeClass(className.animating)\n                  .removeClass(className.active)\n                ;\n                module.reset.display.call(this);\n                settings.onClose.call(this);\n                settings.onChange.call(this);\n              })\n            ;\n          }\n        },\n\n        closeOthers: function(index) {\n          var\n            $activeTitle = (index !== undefined)\n              ? $title.eq(index)\n              : $(this).closest(selector.title),\n            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\n            $activeAccordion = $activeTitle.closest(selector.accordion),\n            activeSelector   = selector.title + '.' + className.active + ':visible',\n            activeContent    = selector.content + '.' + className.active + ':visible',\n            $openTitles,\n            $nestedTitles,\n            $openContents\n          ;\n          if(settings.closeNested) {\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n            $openContents = $openTitles.next($content);\n          }\n          else {\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\n            $openTitles   = $openTitles.not($nestedTitles);\n            $openContents = $openTitles.next($content);\n          }\n          if( ($openTitles.length > 0) ) {\n            module.debug('Exclusive enabled, closing other content', $openTitles);\n            $openTitles\n              .removeClass(className.active)\n            ;\n            $openContents\n              .removeClass(className.animating)\n              .stop(true, true)\n            ;\n            if(settings.animateChildren) {\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $openContents\n                  .children()\n                    .transition({\n                      animation   : 'fade out',\n                      useFailSafe : true,\n                      debug       : settings.debug,\n                      verbose     : settings.verbose,\n                      duration    : settings.duration\n                    })\n                ;\n              }\n              else {\n                $openContents\n                  .children()\n                    .stop(true, true)\n                    .animate({\n                      opacity: 0\n                    }, settings.duration, module.resetOpacity)\n                ;\n              }\n            }\n            $openContents\n              .slideUp(settings.duration , settings.easing, function() {\n                $(this).removeClass(className.active);\n                module.reset.display.call(this);\n              })\n            ;\n          }\n        },\n\n        reset: {\n\n          display: function() {\n            module.verbose('Removing inline display from element', this);\n            $(this).css('display', '');\n            if( $(this).attr('style') === '') {\n              $(this)\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n            }\n          },\n\n          opacity: function() {\n            module.verbose('Removing inline opacity from element', this);\n            $(this).css('opacity', '');\n            if( $(this).attr('style') === '') {\n              $(this)\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n            }\n          },\n\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.accordion.settings = {\n\n  name            : 'Accordion',\n  namespace       : 'accordion',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  on              : 'click', // event on title that opens accordion\n\n  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\n\n  exclusive       : true,  // whether a single accordion content panel should be open at once\n  collapsible     : true,  // whether accordion content can be closed\n  closeNested     : false, // whether nested content should be closed when a panel is closed\n  animateChildren : true,  // whether children opacity should be animated\n\n  duration        : 350, // duration of animation\n  easing          : 'easeOutQuad', // easing equation for animation\n\n\n  onOpening       : function(){}, // callback before open animation\n  onOpen          : function(){}, // callback after open animation\n  onClosing       : function(){}, // callback before closing animation\n  onClose         : function(){}, // callback after closing animation\n  onChange        : function(){}, // callback after closing or opening animation\n\n  error: {\n    method : 'The method you called is not defined'\n  },\n\n  className   : {\n    active    : 'active',\n    animating : 'animating'\n  },\n\n  selector    : {\n    accordion : '.accordion',\n    title     : '.title',\n    trigger   : '.title',\n    content   : '.content'\n  }\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  }\n});\n\n})( jQuery, window, document );\n\n\n/*!\n * # Semantic UI 2.2.10 - Checkbox\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.checkbox = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $label          = $(this).children(selector.label),\n        $input          = $(this).children(selector.input),\n        input           = $input[0],\n\n        initialLoad     = false,\n        shortcutPressed = false,\n        instance        = $module.data(moduleNamespace),\n\n        observer,\n        element         = this,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.verbose('Initializing checkbox', settings);\n\n          module.create.label();\n          module.bind.events();\n\n          module.set.tabbable();\n          module.hide.input();\n\n          module.observeChanges();\n          module.instantiate();\n          module.setup();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying module');\n          module.unbind.events();\n          module.show.input();\n          $module.removeData(moduleNamespace);\n        },\n\n        fix: {\n          reference: function() {\n            if( $module.is(selector.input) ) {\n              module.debug('Behavior called on <input> adjusting invoked element');\n              $module = $module.closest(selector.checkbox);\n              module.refresh();\n            }\n          }\n        },\n\n        setup: function() {\n          module.set.initialLoad();\n          if( module.is.indeterminate() ) {\n            module.debug('Initial value is indeterminate');\n            module.indeterminate();\n          }\n          else if( module.is.checked() ) {\n            module.debug('Initial value is checked');\n            module.check();\n          }\n          else {\n            module.debug('Initial value is unchecked');\n            module.uncheck();\n          }\n          module.remove.initialLoad();\n        },\n\n        refresh: function() {\n          $label = $module.children(selector.label);\n          $input = $module.children(selector.input);\n          input  = $input[0];\n        },\n\n        hide: {\n          input: function() {\n            module.verbose('Modifying <input> z-index to be unselectable');\n            $input.addClass(className.hidden);\n          }\n        },\n        show: {\n          input: function() {\n            module.verbose('Modifying <input> z-index to be selectable');\n            $input.removeClass(className.hidden);\n          }\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, updating selector cache');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $element = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($element.length > 0) {\n            module.debug('Attaching checkbox events to element', selector, event);\n            $element\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound);\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              $target = $(event.target)\n            ;\n            if( $target.is(selector.input) ) {\n              module.verbose('Using default check action on initialized checkbox');\n              return;\n            }\n            if( $target.is(selector.link) ) {\n              module.debug('Clicking link inside checkbox, skipping toggle');\n              return;\n            }\n            module.toggle();\n            $input.focus();\n            event.preventDefault();\n          },\n          keydown: function(event) {\n            var\n              key     = event.which,\n              keyCode = {\n                enter  : 13,\n                space  : 32,\n                escape : 27\n              }\n            ;\n            if(key == keyCode.escape) {\n              module.verbose('Escape key pressed blurring field');\n              $input.blur();\n              shortcutPressed = true;\n            }\n            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\n              module.verbose('Enter/space key pressed, toggling checkbox');\n              module.toggle();\n              shortcutPressed = true;\n            }\n            else {\n              shortcutPressed = false;\n            }\n          },\n          keyup: function(event) {\n            if(shortcutPressed) {\n              event.preventDefault();\n            }\n          }\n        },\n\n        check: function() {\n          if( !module.should.allowCheck() ) {\n            return;\n          }\n          module.debug('Checking checkbox', $input);\n          module.set.checked();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onChecked.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        uncheck: function() {\n          if( !module.should.allowUncheck() ) {\n            return;\n          }\n          module.debug('Unchecking checkbox');\n          module.set.unchecked();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onUnchecked.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        indeterminate: function() {\n          if( module.should.allowIndeterminate() ) {\n            module.debug('Checkbox is already indeterminate');\n            return;\n          }\n          module.debug('Making checkbox indeterminate');\n          module.set.indeterminate();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onIndeterminate.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        determinate: function() {\n          if( module.should.allowDeterminate() ) {\n            module.debug('Checkbox is already determinate');\n            return;\n          }\n          module.debug('Making checkbox determinate');\n          module.set.determinate();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onDeterminate.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        enable: function() {\n          if( module.is.enabled() ) {\n            module.debug('Checkbox is already enabled');\n            return;\n          }\n          module.debug('Enabling checkbox');\n          module.set.enabled();\n          settings.onEnable.call(input);\n          // preserve legacy callbacks\n          settings.onEnabled.call(input);\n        },\n\n        disable: function() {\n          if( module.is.disabled() ) {\n            module.debug('Checkbox is already disabled');\n            return;\n          }\n          module.debug('Disabling checkbox');\n          module.set.disabled();\n          settings.onDisable.call(input);\n          // preserve legacy callbacks\n          settings.onDisabled.call(input);\n        },\n\n        get: {\n          radios: function() {\n            var\n              name = module.get.name()\n            ;\n            return $('input[name=\"' + name + '\"]').closest(selector.checkbox);\n          },\n          otherRadios: function() {\n            return module.get.radios().not($module);\n          },\n          name: function() {\n            return $input.attr('name');\n          }\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          },\n          radio: function() {\n            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\n          },\n          indeterminate: function() {\n            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\n          },\n          checked: function() {\n            return $input.prop('checked') !== undefined && $input.prop('checked');\n          },\n          disabled: function() {\n            return $input.prop('disabled') !== undefined && $input.prop('disabled');\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          determinate: function() {\n            return !module.is.indeterminate();\n          },\n          unchecked: function() {\n            return !module.is.checked();\n          }\n        },\n\n        should: {\n          allowCheck: function() {\n            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow check, checkbox is already checked');\n              return false;\n            }\n            if(settings.beforeChecked.apply(input) === false) {\n              module.debug('Should not allow check, beforeChecked cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowUncheck: function() {\n            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow uncheck, checkbox is already unchecked');\n              return false;\n            }\n            if(settings.beforeUnchecked.apply(input) === false) {\n              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowIndeterminate: function() {\n            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\n              return false;\n            }\n            if(settings.beforeIndeterminate.apply(input) === false) {\n              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowDeterminate: function() {\n            if(module.is.determinate() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow determinate, checkbox is already determinate');\n              return false;\n            }\n            if(settings.beforeDeterminate.apply(input) === false) {\n              module.debug('Should not allow determinate, beforeDeterminate cancelled');\n              return false;\n            }\n            return true;\n          },\n          forceCallbacks: function() {\n            return (module.is.initialLoad() && settings.fireOnInit);\n          },\n          ignoreCallbacks: function() {\n            return (initialLoad && !settings.fireOnInit);\n          }\n        },\n\n        can: {\n          change: function() {\n            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\n          },\n          uncheck: function() {\n            return (typeof settings.uncheckable === 'boolean')\n              ? settings.uncheckable\n              : !module.is.radio()\n            ;\n          }\n        },\n\n        set: {\n          initialLoad: function() {\n            initialLoad = true;\n          },\n          checked: function() {\n            module.verbose('Setting class to checked');\n            $module\n              .removeClass(className.indeterminate)\n              .addClass(className.checked)\n            ;\n            if( module.is.radio() ) {\n              module.uncheckOthers();\n            }\n            if(!module.is.indeterminate() && module.is.checked()) {\n              module.debug('Input is already checked, skipping input property change');\n              return;\n            }\n            module.verbose('Setting state to checked', input);\n            $input\n              .prop('indeterminate', false)\n              .prop('checked', true)\n            ;\n            module.trigger.change();\n          },\n          unchecked: function() {\n            module.verbose('Removing checked class');\n            $module\n              .removeClass(className.indeterminate)\n              .removeClass(className.checked)\n            ;\n            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\n              module.debug('Input is already unchecked');\n              return;\n            }\n            module.debug('Setting state to unchecked');\n            $input\n              .prop('indeterminate', false)\n              .prop('checked', false)\n            ;\n            module.trigger.change();\n          },\n          indeterminate: function() {\n            module.verbose('Setting class to indeterminate');\n            $module\n              .addClass(className.indeterminate)\n            ;\n            if( module.is.indeterminate() ) {\n              module.debug('Input is already indeterminate, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to indeterminate');\n            $input\n              .prop('indeterminate', true)\n            ;\n            module.trigger.change();\n          },\n          determinate: function() {\n            module.verbose('Removing indeterminate class');\n            $module\n              .removeClass(className.indeterminate)\n            ;\n            if( module.is.determinate() ) {\n              module.debug('Input is already determinate, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to determinate');\n            $input\n              .prop('indeterminate', false)\n            ;\n          },\n          disabled: function() {\n            module.verbose('Setting class to disabled');\n            $module\n              .addClass(className.disabled)\n            ;\n            if( module.is.disabled() ) {\n              module.debug('Input is already disabled, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to disabled');\n            $input\n              .prop('disabled', 'disabled')\n            ;\n            module.trigger.change();\n          },\n          enabled: function() {\n            module.verbose('Removing disabled class');\n            $module.removeClass(className.disabled);\n            if( module.is.enabled() ) {\n              module.debug('Input is already enabled, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to enabled');\n            $input\n              .prop('disabled', false)\n            ;\n            module.trigger.change();\n          },\n          tabbable: function() {\n            module.verbose('Adding tabindex to checkbox');\n            if( $input.attr('tabindex') === undefined) {\n              $input.attr('tabindex', 0);\n            }\n          }\n        },\n\n        remove: {\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        trigger: {\n          change: function() {\n            var\n              events       = document.createEvent('HTMLEvents'),\n              inputElement = $input[0]\n            ;\n            if(inputElement) {\n              module.verbose('Triggering native change event');\n              events.initEvent('change', true, false);\n              inputElement.dispatchEvent(events);\n            }\n          }\n        },\n\n\n        create: {\n          label: function() {\n            if($input.prevAll(selector.label).length > 0) {\n              $input.prev(selector.label).detach().insertAfter($input);\n              module.debug('Moving existing label', $label);\n            }\n            else if( !module.has.label() ) {\n              $label = $('<label>').insertAfter($input);\n              module.debug('Creating label', $label);\n            }\n          }\n        },\n\n        has: {\n          label: function() {\n            return ($label.length > 0);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Attaching checkbox events');\n            $module\n              .on('click'   + eventNamespace, module.event.click)\n              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\n              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\n            ;\n          }\n        },\n\n        unbind: {\n          events: function() {\n            module.debug('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        uncheckOthers: function() {\n          var\n            $radios = module.get.otherRadios()\n          ;\n          module.debug('Unchecking other radios', $radios);\n          $radios.removeClass(className.checked);\n        },\n\n        toggle: function() {\n          if( !module.can.change() ) {\n            if(!module.is.radio()) {\n              module.debug('Checkbox is read-only or disabled, ignoring toggle');\n            }\n            return;\n          }\n          if( module.is.indeterminate() || module.is.unchecked() ) {\n            module.debug('Currently unchecked');\n            module.check();\n          }\n          else if( module.is.checked() && module.can.uncheck() ) {\n            module.debug('Currently checked');\n            module.uncheck();\n          }\n        },\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.checkbox.settings = {\n\n  name                : 'Checkbox',\n  namespace           : 'checkbox',\n\n  silent              : false,\n  debug               : false,\n  verbose             : true,\n  performance         : true,\n\n  // delegated event context\n  uncheckable         : 'auto',\n  fireOnInit          : false,\n\n  onChange            : function(){},\n\n  beforeChecked       : function(){},\n  beforeUnchecked     : function(){},\n  beforeDeterminate   : function(){},\n  beforeIndeterminate : function(){},\n\n  onChecked           : function(){},\n  onUnchecked         : function(){},\n\n  onDeterminate       : function() {},\n  onIndeterminate     : function() {},\n\n  onEnable            : function(){},\n  onDisable           : function(){},\n\n  // preserve misspelled callbacks (will be removed in 3.0)\n  onEnabled           : function(){},\n  onDisabled          : function(){},\n\n  className       : {\n    checked       : 'checked',\n    indeterminate : 'indeterminate',\n    disabled      : 'disabled',\n    hidden        : 'hidden',\n    radio         : 'radio',\n    readOnly      : 'read-only'\n  },\n\n  error     : {\n    method       : 'The method you called is not defined'\n  },\n\n  selector : {\n    checkbox : '.ui.checkbox',\n    label    : 'label, .box',\n    input    : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    link     : 'a[href]'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Dimmer\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.dimmer = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\n          : $.extend({}, $.fn.dimmer.settings),\n\n        selector        = settings.selector,\n        namespace       = settings.namespace,\n        className       = settings.className,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        clickEvent      = ('ontouchstart' in document.documentElement)\n          ? 'touchstart'\n          : 'click',\n\n        $module = $(this),\n        $dimmer,\n        $dimmable,\n\n        element   = this,\n        instance  = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        preinitialize: function() {\n          if( module.is.dimmer() ) {\n\n            $dimmable = $module.parent();\n            $dimmer   = $module;\n          }\n          else {\n            $dimmable = $module;\n            if( module.has.dimmer() ) {\n              if(settings.dimmerName) {\n                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\n              }\n              else {\n                $dimmer = $dimmable.find(selector.dimmer);\n              }\n            }\n            else {\n              $dimmer = module.create();\n            }\n            module.set.variation();\n          }\n        },\n\n        initialize: function() {\n          module.debug('Initializing dimmer', settings);\n\n          module.bind.events();\n          module.set.dimmable();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', $dimmer);\n          module.unbind.events();\n          module.remove.variation();\n          $dimmable\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            if(settings.on == 'hover') {\n              $dimmable\n                .on('mouseenter' + eventNamespace, module.show)\n                .on('mouseleave' + eventNamespace, module.hide)\n              ;\n            }\n            else if(settings.on == 'click') {\n              $dimmable\n                .on(clickEvent + eventNamespace, module.toggle)\n              ;\n            }\n            if( module.is.page() ) {\n              module.debug('Setting as a page dimmer', $dimmable);\n              module.set.pageDimmer();\n            }\n\n            if( module.is.closable() ) {\n              module.verbose('Adding dimmer close event', $dimmer);\n              $dimmable\n                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\n              ;\n            }\n          }\n        },\n\n        unbind: {\n          events: function() {\n            $module\n              .removeData(moduleNamespace)\n            ;\n            $dimmable\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            module.verbose('Determining if event occured on dimmer', event);\n            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\n              module.hide();\n              event.stopImmediatePropagation();\n            }\n          }\n        },\n\n        addContent: function(element) {\n          var\n            $content = $(element)\n          ;\n          module.debug('Add content to dimmer', $content);\n          if($content.parent()[0] !== $dimmer[0]) {\n            $content.detach().appendTo($dimmer);\n          }\n        },\n\n        create: function() {\n          var\n            $element = $( settings.template.dimmer() )\n          ;\n          if(settings.dimmerName) {\n            module.debug('Creating named dimmer', settings.dimmerName);\n            $element.addClass(settings.dimmerName);\n          }\n          $element\n            .appendTo($dimmable)\n          ;\n          return $element;\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Showing dimmer', $dimmer, settings);\n          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\n            module.animate.show(callback);\n            settings.onShow.call(element);\n            settings.onChange.call(element);\n          }\n          else {\n            module.debug('Dimmer is already shown or disabled');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.dimmed() || module.is.animating() ) {\n            module.debug('Hiding dimmer', $dimmer);\n            module.animate.hide(callback);\n            settings.onHide.call(element);\n            settings.onChange.call(element);\n          }\n          else {\n            module.debug('Dimmer is not visible');\n          }\n        },\n\n        toggle: function() {\n          module.verbose('Toggling dimmer visibility', $dimmer);\n          if( !module.is.dimmed() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n              if(settings.opacity !== 'auto') {\n                module.set.opacity();\n              }\n              $dimmer\n                .transition({\n                  animation   : settings.transition + ' in',\n                  queue       : false,\n                  duration    : module.get.duration(),\n                  useFailSafe : true,\n                  onStart     : function() {\n                    module.set.dimmed();\n                  },\n                  onComplete  : function() {\n                    module.set.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Showing dimmer animation with javascript');\n              module.set.dimmed();\n              if(settings.opacity == 'auto') {\n                settings.opacity = 0.8;\n              }\n              $dimmer\n                .stop()\n                .css({\n                  opacity : 0,\n                  width   : '100%',\n                  height  : '100%'\n                })\n                .fadeTo(module.get.duration(), settings.opacity, function() {\n                  $dimmer.removeAttr('style');\n                  module.set.active();\n                  callback();\n                })\n              ;\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n              module.verbose('Hiding dimmer with css');\n              $dimmer\n                .transition({\n                  animation   : settings.transition + ' out',\n                  queue       : false,\n                  duration    : module.get.duration(),\n                  useFailSafe : true,\n                  onStart     : function() {\n                    module.remove.dimmed();\n                  },\n                  onComplete  : function() {\n                    module.remove.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Hiding dimmer with javascript');\n              module.remove.dimmed();\n              $dimmer\n                .stop()\n                .fadeOut(module.get.duration(), function() {\n                  module.remove.active();\n                  $dimmer.removeAttr('style');\n                  callback();\n                })\n              ;\n            }\n          }\n        },\n\n        get: {\n          dimmer: function() {\n            return $dimmer;\n          },\n          duration: function() {\n            if(typeof settings.duration == 'object') {\n              if( module.is.active() ) {\n                return settings.duration.hide;\n              }\n              else {\n                return settings.duration.show;\n              }\n            }\n            return settings.duration;\n          }\n        },\n\n        has: {\n          dimmer: function() {\n            if(settings.dimmerName) {\n              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\n            }\n            else {\n              return ( $module.find(selector.dimmer).length > 0 );\n            }\n          }\n        },\n\n        is: {\n          active: function() {\n            return $dimmer.hasClass(className.active);\n          },\n          animating: function() {\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\n          },\n          closable: function() {\n            if(settings.closable == 'auto') {\n              if(settings.on == 'hover') {\n                return false;\n              }\n              return true;\n            }\n            return settings.closable;\n          },\n          dimmer: function() {\n            return $module.hasClass(className.dimmer);\n          },\n          dimmable: function() {\n            return $module.hasClass(className.dimmable);\n          },\n          dimmed: function() {\n            return $dimmable.hasClass(className.dimmed);\n          },\n          disabled: function() {\n            return $dimmable.hasClass(className.disabled);\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          page: function () {\n            return $dimmable.is('body');\n          },\n          pageDimmer: function() {\n            return $dimmer.hasClass(className.pageDimmer);\n          }\n        },\n\n        can: {\n          show: function() {\n            return !$dimmer.hasClass(className.disabled);\n          }\n        },\n\n        set: {\n          opacity: function(opacity) {\n            var\n              color      = $dimmer.css('background-color'),\n              colorArray = color.split(','),\n              isRGB      = (colorArray && colorArray.length == 3),\n              isRGBA     = (colorArray && colorArray.length == 4)\n            ;\n            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\n            if(isRGB || isRGBA) {\n              colorArray[3] = opacity + ')';\n              color         = colorArray.join(',');\n            }\n            else {\n              color = 'rgba(0, 0, 0, ' + opacity + ')';\n            }\n            module.debug('Setting opacity to', opacity);\n            $dimmer.css('background-color', color);\n          },\n          active: function() {\n            $dimmer.addClass(className.active);\n          },\n          dimmable: function() {\n            $dimmable.addClass(className.dimmable);\n          },\n          dimmed: function() {\n            $dimmable.addClass(className.dimmed);\n          },\n          pageDimmer: function() {\n            $dimmer.addClass(className.pageDimmer);\n          },\n          disabled: function() {\n            $dimmer.addClass(className.disabled);\n          },\n          variation: function(variation) {\n            variation = variation || settings.variation;\n            if(variation) {\n              $dimmer.addClass(variation);\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $dimmer\n              .removeClass(className.active)\n            ;\n          },\n          dimmed: function() {\n            $dimmable.removeClass(className.dimmed);\n          },\n          disabled: function() {\n            $dimmer.removeClass(className.disabled);\n          },\n          variation: function(variation) {\n            variation = variation || settings.variation;\n            if(variation) {\n              $dimmer.removeClass(variation);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      module.preinitialize();\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.dimmer.settings = {\n\n  name        : 'Dimmer',\n  namespace   : 'dimmer',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  // name to distinguish between multiple dimmers in context\n  dimmerName  : false,\n\n  // whether to add a variation type\n  variation   : false,\n\n  // whether to bind close events\n  closable    : 'auto',\n\n  // whether to use css animations\n  useCSS      : true,\n\n  // css animation to use\n  transition  : 'fade',\n\n  // event to bind to\n  on          : false,\n\n  // overriding opacity value\n  opacity     : 'auto',\n\n  // transition durations\n  duration    : {\n    show : 500,\n    hide : 500\n  },\n\n  onChange    : function(){},\n  onShow      : function(){},\n  onHide      : function(){},\n\n  error   : {\n    method   : 'The method you called is not defined.'\n  },\n\n  className : {\n    active     : 'active',\n    animating  : 'animating',\n    dimmable   : 'dimmable',\n    dimmed     : 'dimmed',\n    dimmer     : 'dimmer',\n    disabled   : 'disabled',\n    hide       : 'hide',\n    pageDimmer : 'page',\n    show       : 'show'\n  },\n\n  selector: {\n    dimmer   : '> .ui.dimmer',\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\n  },\n\n  template: {\n    dimmer: function() {\n     return $('<div />').attr('class', 'ui dimmer');\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Dropdown\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.dropdown = function(parameters) {\n  var\n    $allModules    = $(this),\n    $document      = $(document),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = ('ontouchstart' in document.documentElement),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function(elementIndex) {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\n          : $.extend({}, $.fn.dropdown.settings),\n\n        className       = settings.className,\n        message         = settings.message,\n        fields          = settings.fields,\n        keys            = settings.keys,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        regExp          = settings.regExp,\n        selector        = settings.selector,\n        error           = settings.error,\n        templates       = settings.templates,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $text           = $module.find(selector.text),\n        $search         = $module.find(selector.search),\n        $sizer          = $module.find(selector.sizer),\n        $input          = $module.find(selector.input),\n        $icon           = $module.find(selector.icon),\n\n        $combo = ($module.prev().find(selector.text).length > 0)\n          ? $module.prev().find(selector.text)\n          : $module.prev(),\n\n        $menu           = $module.children(selector.menu),\n        $item           = $menu.find(selector.item),\n\n        activated       = false,\n        itemActivated   = false,\n        internalChange  = false,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        initialLoad,\n        pageLostFocus,\n        willRefocus,\n        elementNamespace,\n        id,\n        selectObserver,\n        menuObserver,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing dropdown', settings);\n\n          if( module.is.alreadySetup() ) {\n            module.setup.reference();\n          }\n          else {\n            module.setup.layout();\n            module.refreshData();\n\n            module.save.defaults();\n            module.restore.selected();\n\n            module.create.id();\n            module.bind.events();\n\n            module.observeChanges();\n            module.instantiate();\n          }\n\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of dropdown', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous dropdown', $module);\n          module.remove.tabbable();\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n          $menu\n            .off(eventNamespace)\n          ;\n          $document\n            .off(elementNamespace)\n          ;\n          module.disconnect.menuObserver();\n          module.disconnect.selectObserver();\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            selectObserver = new MutationObserver(module.event.select.mutation);\n            menuObserver   = new MutationObserver(module.event.menu.mutation);\n            module.debug('Setting up mutation observer', selectObserver, menuObserver);\n            module.observe.select();\n            module.observe.menu();\n          }\n        },\n\n        disconnect: {\n          menuObserver: function() {\n            if(menuObserver) {\n              menuObserver.disconnect();\n            }\n          },\n          selectObserver: function() {\n            if(selectObserver) {\n              selectObserver.disconnect();\n            }\n          }\n        },\n        observe: {\n          select: function() {\n            if(module.has.input()) {\n              selectObserver.observe($input[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          },\n          menu: function() {\n            if(module.has.menu()) {\n              menuObserver.observe($menu[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          }\n        },\n\n        create: {\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2, 8);\n            elementNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          },\n          userChoice: function(values) {\n            var\n              $userChoices,\n              $userChoice,\n              isUserValue,\n              html\n            ;\n            values = values || module.get.userValues();\n            if(!values) {\n              return false;\n            }\n            values = $.isArray(values)\n              ? values\n              : [values]\n            ;\n            $.each(values, function(index, value) {\n              if(module.get.item(value) === false) {\n                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\n                $userChoice  = $('<div />')\n                  .html(html)\n                  .attr('data-' + metadata.value, value)\n                  .attr('data-' + metadata.text, value)\n                  .addClass(className.addition)\n                  .addClass(className.item)\n                ;\n                if(settings.hideAdditions) {\n                  $userChoice.addClass(className.hidden);\n                }\n                $userChoices = ($userChoices === undefined)\n                  ? $userChoice\n                  : $userChoices.add($userChoice)\n                ;\n                module.verbose('Creating user choices for value', value, $userChoice);\n              }\n            });\n            return $userChoices;\n          },\n          userLabels: function(value) {\n            var\n              userValues = module.get.userValues()\n            ;\n            if(userValues) {\n              module.debug('Adding user labels', userValues);\n              $.each(userValues, function(index, value) {\n                module.verbose('Adding custom user value');\n                module.add.label(value, value);\n              });\n            }\n          },\n          menu: function() {\n            $menu = $('<div />')\n              .addClass(className.menu)\n              .appendTo($module)\n            ;\n          },\n          sizer: function() {\n            $sizer = $('<span />')\n              .addClass(className.sizer)\n              .insertAfter($search)\n            ;\n          }\n        },\n\n        search: function(query) {\n          query = (query !== undefined)\n            ? query\n            : module.get.query()\n          ;\n          module.verbose('Searching for query', query);\n          if(module.has.minCharacters(query)) {\n            module.filter(query);\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        select: {\n          firstUnfiltered: function() {\n            module.verbose('Selecting first non-filtered element');\n            module.remove.selectedItem();\n            $item\n              .not(selector.unselectable)\n              .not(selector.addition + selector.hidden)\n                .eq(0)\n                .addClass(className.selected)\n            ;\n          },\n          nextAvailable: function($selected) {\n            $selected = $selected.eq(0);\n            var\n              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\n              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\n              hasNext        = ($nextAvailable.length > 0)\n            ;\n            if(hasNext) {\n              module.verbose('Moving selection to', $nextAvailable);\n              $nextAvailable.addClass(className.selected);\n            }\n            else {\n              module.verbose('Moving selection to', $prevAvailable);\n              $prevAvailable.addClass(className.selected);\n            }\n          }\n        },\n\n        setup: {\n          api: function() {\n            var\n              apiSettings = {\n                debug   : settings.debug,\n                urlData : {\n                  value : module.get.value(),\n                  query : module.get.query()\n                },\n                on    : false\n              }\n            ;\n            module.verbose('First request, initializing API');\n            $module\n              .api(apiSettings)\n            ;\n          },\n          layout: function() {\n            if( $module.is('select') ) {\n              module.setup.select();\n              module.setup.returnedObject();\n            }\n            if( !module.has.menu() ) {\n              module.create.menu();\n            }\n            if( module.is.search() && !module.has.search() ) {\n              module.verbose('Adding search input');\n              $search = $('<input />')\n                .addClass(className.search)\n                .prop('autocomplete', 'off')\n                .insertBefore($text)\n              ;\n            }\n            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\n              module.create.sizer();\n            }\n            if(settings.allowTab) {\n              module.set.tabbable();\n            }\n          },\n          select: function() {\n            var\n              selectValues  = module.get.selectValues()\n            ;\n            module.debug('Dropdown initialized on a select', selectValues);\n            if( $module.is('select') ) {\n              $input = $module;\n            }\n            // see if select is placed correctly already\n            if($input.parent(selector.dropdown).length > 0) {\n              module.debug('UI dropdown already exists. Creating dropdown menu only');\n              $module = $input.closest(selector.dropdown);\n              if( !module.has.menu() ) {\n                module.create.menu();\n              }\n              $menu = $module.children(selector.menu);\n              module.setup.menu(selectValues);\n            }\n            else {\n              module.debug('Creating entire dropdown from select');\n              $module = $('<div />')\n                .attr('class', $input.attr('class') )\n                .addClass(className.selection)\n                .addClass(className.dropdown)\n                .html( templates.dropdown(selectValues) )\n                .insertBefore($input)\n              ;\n              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\n                module.error(error.missingMultiple);\n                $input.prop('multiple', true);\n              }\n              if($input.is('[multiple]')) {\n                module.set.multiple();\n              }\n              if ($input.prop('disabled')) {\n                module.debug('Disabling dropdown');\n                $module.addClass(className.disabled);\n              }\n              $input\n                .removeAttr('class')\n                .detach()\n                .prependTo($module)\n              ;\n            }\n            module.refresh();\n          },\n          menu: function(values) {\n            $menu.html( templates.menu(values, fields));\n            $item = $menu.find(selector.item);\n          },\n          reference: function() {\n            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\n            // replace module reference\n            $module = $module.parent(selector.dropdown);\n            module.refresh();\n            module.setup.returnedObject();\n            // invoke method in context of current instance\n            if(methodInvoked) {\n              instance = module;\n              module.invoke(query);\n            }\n          },\n          returnedObject: function() {\n            var\n              $firstModules = $allModules.slice(0, elementIndex),\n              $lastModules = $allModules.slice(elementIndex + 1)\n            ;\n            // adjust all modules to use correct reference\n            $allModules = $firstModules.add($module).add($lastModules);\n          }\n        },\n\n        refresh: function() {\n          module.refreshSelectors();\n          module.refreshData();\n        },\n\n        refreshItems: function() {\n          $item = $menu.find(selector.item);\n        },\n\n        refreshSelectors: function() {\n          module.verbose('Refreshing selector cache');\n          $text   = $module.find(selector.text);\n          $search = $module.find(selector.search);\n          $input  = $module.find(selector.input);\n          $icon   = $module.find(selector.icon);\n          $combo  = ($module.prev().find(selector.text).length > 0)\n            ? $module.prev().find(selector.text)\n            : $module.prev()\n          ;\n          $menu    = $module.children(selector.menu);\n          $item    = $menu.find(selector.item);\n        },\n\n        refreshData: function() {\n          module.verbose('Refreshing cached metadata');\n          $item\n            .removeData(metadata.text)\n            .removeData(metadata.value)\n          ;\n        },\n\n        clearData: function() {\n          module.verbose('Clearing metadata');\n          $item\n            .removeData(metadata.text)\n            .removeData(metadata.value)\n          ;\n          $module\n            .removeData(metadata.defaultText)\n            .removeData(metadata.defaultValue)\n            .removeData(metadata.placeholderText)\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Toggling menu visibility');\n          if( !module.is.active() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(!module.can.show() && module.is.remote()) {\n            module.debug('No API results retrieved, searching before show');\n            module.queryRemote(module.get.query(), module.show);\n          }\n          if( module.can.show() && !module.is.active() ) {\n            module.debug('Showing dropdown');\n            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\n              module.remove.message();\n            }\n            if(module.is.allFiltered()) {\n              return true;\n            }\n            if(settings.onShow.call(element) !== false) {\n              module.animate.show(function() {\n                if( module.can.click() ) {\n                  module.bind.intent();\n                }\n                if(module.has.menuSearch()) {\n                  module.focusSearch();\n                }\n                module.set.visible();\n                callback.call(element);\n              });\n            }\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.active() ) {\n            module.debug('Hiding dropdown');\n            if(settings.onHide.call(element) !== false) {\n              module.animate.hide(function() {\n                module.remove.visible();\n                callback.call(element);\n              });\n            }\n          }\n        },\n\n        hideOthers: function() {\n          module.verbose('Finding other dropdowns to hide');\n          $allModules\n            .not($module)\n              .has(selector.menu + '.' + className.visible)\n                .dropdown('hide')\n          ;\n        },\n\n        hideMenu: function() {\n          module.verbose('Hiding menu  instantaneously');\n          module.remove.active();\n          module.remove.visible();\n          $menu.transition('hide');\n        },\n\n        hideSubMenus: function() {\n          var\n            $subMenus = $menu.children(selector.item).find(selector.menu)\n          ;\n          module.verbose('Hiding sub menus', $subMenus);\n          $subMenus.transition('hide');\n        },\n\n        bind: {\n          events: function() {\n            if(hasTouch) {\n              module.bind.touchEvents();\n            }\n            module.bind.keyboardEvents();\n            module.bind.inputEvents();\n            module.bind.mouseEvents();\n          },\n          touchEvents: function() {\n            module.debug('Touch device detected binding additional touch events');\n            if( module.is.searchSelection() ) {\n              // do nothing special yet\n            }\n            else if( module.is.single() ) {\n              $module\n                .on('touchstart' + eventNamespace, module.event.test.toggle)\n              ;\n            }\n            $menu\n              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\n            ;\n          },\n          keyboardEvents: function() {\n            module.verbose('Binding keyboard events');\n            $module\n              .on('keydown' + eventNamespace, module.event.keydown)\n            ;\n            if( module.has.search() ) {\n              $module\n                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\n              ;\n            }\n            if( module.is.multiple() ) {\n              $document\n                .on('keydown' + elementNamespace, module.event.document.keydown)\n              ;\n            }\n          },\n          inputEvents: function() {\n            module.verbose('Binding input change events');\n            $module\n              .on('change' + eventNamespace, selector.input, module.event.change)\n            ;\n          },\n          mouseEvents: function() {\n            module.verbose('Binding mouse events');\n            if(module.is.multiple()) {\n              $module\n                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\n                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\n              ;\n            }\n            if( module.is.searchSelection() ) {\n              $module\n                .on('mousedown' + eventNamespace, module.event.mousedown)\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\n                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\n                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\n                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\n                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\n                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\n                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\n                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\n              ;\n              if(module.is.multiple()) {\n                $module\n                  .on('click' + eventNamespace, module.event.click)\n                ;\n              }\n            }\n            else {\n              if(settings.on == 'click') {\n                $module\n                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\n                  .on('click' + eventNamespace, module.event.test.toggle)\n                ;\n              }\n              else if(settings.on == 'hover') {\n                $module\n                  .on('mouseenter' + eventNamespace, module.delay.show)\n                  .on('mouseleave' + eventNamespace, module.delay.hide)\n                ;\n              }\n              else {\n                $module\n                  .on(settings.on + eventNamespace, module.toggle)\n                ;\n              }\n              $module\n                .on('mousedown' + eventNamespace, module.event.mousedown)\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\n                .on('focus'     + eventNamespace, module.event.focus)\n              ;\n              if(module.has.menuSearch() ) {\n                $module\n                  .on('blur' + eventNamespace, selector.search, module.event.search.blur)\n                ;\n              }\n              else {\n                $module\n                  .on('blur' + eventNamespace, module.event.blur)\n                ;\n              }\n            }\n            $menu\n              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\n              .on('click'      + eventNamespace, selector.item, module.event.item.click)\n            ;\n          },\n          intent: function() {\n            module.verbose('Binding hide intent event to document');\n            if(hasTouch) {\n              $document\n                .on('touchstart' + elementNamespace, module.event.test.touch)\n                .on('touchmove'  + elementNamespace, module.event.test.touch)\n              ;\n            }\n            $document\n              .on('click' + elementNamespace, module.event.test.hide)\n            ;\n          }\n        },\n\n        unbind: {\n          intent: function() {\n            module.verbose('Removing hide intent event from document');\n            if(hasTouch) {\n              $document\n                .off('touchstart' + elementNamespace)\n                .off('touchmove' + elementNamespace)\n              ;\n            }\n            $document\n              .off('click' + elementNamespace)\n            ;\n          }\n        },\n\n        filter: function(query) {\n          var\n            searchTerm = (query !== undefined)\n              ? query\n              : module.get.query(),\n            afterFiltered = function() {\n              if(module.is.multiple()) {\n                module.filterActive();\n              }\n              module.select.firstUnfiltered();\n              if( module.has.allResultsFiltered() ) {\n                if( settings.onNoResults.call(element, searchTerm) ) {\n                  if(settings.allowAdditions) {\n                    if(settings.hideAdditions) {\n                      module.verbose('User addition with no menu, setting empty style');\n                      module.set.empty();\n                      module.hideMenu();\n                    }\n                  }\n                  else {\n                    module.verbose('All items filtered, showing message', searchTerm);\n                    module.add.message(message.noResults);\n                  }\n                }\n                else {\n                  module.verbose('All items filtered, hiding dropdown', searchTerm);\n                  module.hideMenu();\n                }\n              }\n              else {\n                module.remove.empty();\n                module.remove.message();\n              }\n              if(settings.allowAdditions) {\n                module.add.userSuggestion(query);\n              }\n              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\n                module.show();\n              }\n            }\n          ;\n          if(settings.useLabels && module.has.maxSelections()) {\n            return;\n          }\n          if(settings.apiSettings) {\n            if( module.can.useAPI() ) {\n              module.queryRemote(searchTerm, function() {\n                if(settings.filterRemoteData) {\n                  module.filterItems(searchTerm);\n                }\n                afterFiltered();\n              });\n            }\n            else {\n              module.error(error.noAPI);\n            }\n          }\n          else {\n            module.filterItems(searchTerm);\n            afterFiltered();\n          }\n        },\n\n        queryRemote: function(query, callback) {\n          var\n            apiSettings = {\n              errorDuration : false,\n              cache         : 'local',\n              throttle      : settings.throttle,\n              urlData       : {\n                query: query\n              },\n              onError: function() {\n                module.add.message(message.serverError);\n                callback();\n              },\n              onFailure: function() {\n                module.add.message(message.serverError);\n                callback();\n              },\n              onSuccess : function(response) {\n                module.remove.message();\n                module.setup.menu({\n                  values: response[fields.remoteValues]\n                });\n                callback();\n              }\n            }\n          ;\n          if( !$module.api('get request') ) {\n            module.setup.api();\n          }\n          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\n          $module\n            .api('setting', apiSettings)\n            .api('query')\n          ;\n        },\n\n        filterItems: function(query) {\n          var\n            searchTerm = (query !== undefined)\n              ? query\n              : module.get.query(),\n            results          =  null,\n            escapedTerm      = module.escape.string(searchTerm),\n            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\n          ;\n          // avoid loop if we're matching nothing\n          if( module.has.query() ) {\n            results = [];\n\n            module.verbose('Searching for matching values', searchTerm);\n            $item\n              .each(function(){\n                var\n                  $choice = $(this),\n                  text,\n                  value\n                ;\n                if(settings.match == 'both' || settings.match == 'text') {\n                  text = String(module.get.choiceText($choice, false));\n                  if(text.search(beginsWithRegExp) !== -1) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\n                    results.push(this);\n                    return true;\n                  }\n                }\n                if(settings.match == 'both' || settings.match == 'value') {\n                  value = String(module.get.choiceValue($choice, text));\n                  if(value.search(beginsWithRegExp) !== -1) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, value)) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, value)) {\n                    results.push(this);\n                    return true;\n                  }\n                }\n              })\n            ;\n          }\n          module.debug('Showing only matched items', searchTerm);\n          module.remove.filteredItem();\n          if(results) {\n            $item\n              .not(results)\n              .addClass(className.filtered)\n            ;\n          }\n        },\n\n        fuzzySearch: function(query, term) {\n          var\n            termLength  = term.length,\n            queryLength = query.length\n          ;\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(queryLength > termLength) {\n            return false;\n          }\n          if(queryLength === termLength) {\n            return (query === term);\n          }\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n            var\n              queryCharacter = query.charCodeAt(characterIndex)\n            ;\n            while(nextCharacterIndex < termLength) {\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n                continue search;\n              }\n            }\n            return false;\n          }\n          return true;\n        },\n        exactSearch: function (query, term) {\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(term.indexOf(query) > -1) {\n             return true;\n          }\n          return false;\n        },\n        filterActive: function() {\n          if(settings.useLabels) {\n            $item.filter('.' + className.active)\n              .addClass(className.filtered)\n            ;\n          }\n        },\n\n        focusSearch: function(skipHandler) {\n          if( module.has.search() && !module.is.focusedOnSearch() ) {\n            if(skipHandler) {\n              $module.off('focus' + eventNamespace, selector.search);\n              $search.focus();\n              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\n            }\n            else {\n              $search.focus();\n            }\n          }\n        },\n\n        forceSelection: function() {\n          var\n            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\n            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\n            $selectedItem      = ($currentlySelected.length > 0)\n              ? $currentlySelected\n              : $activeItem,\n            hasSelected = ($selectedItem.length > 0)\n          ;\n          if(hasSelected && !module.is.multiple()) {\n            module.debug('Forcing partial selection to selected item', $selectedItem);\n            module.event.item.click.call($selectedItem, {}, true);\n            return;\n          }\n          else {\n            if(settings.allowAdditions) {\n              module.set.selected(module.get.query());\n              module.remove.searchTerm();\n            }\n            else {\n              module.remove.searchTerm();\n            }\n          }\n        },\n\n        event: {\n          change: function() {\n            if(!internalChange) {\n              module.debug('Input changed, updating selection');\n              module.set.selected();\n            }\n          },\n          focus: function() {\n            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\n              module.show();\n            }\n          },\n          blur: function(event) {\n            pageLostFocus = (document.activeElement === this);\n            if(!activated && !pageLostFocus) {\n              module.remove.activeLabel();\n              module.hide();\n            }\n          },\n          mousedown: function() {\n            if(module.is.searchSelection()) {\n              // prevent menu hiding on immediate re-focus\n              willRefocus = true;\n            }\n            else {\n              // prevents focus callback from occurring on mousedown\n              activated = true;\n            }\n          },\n          mouseup: function() {\n            if(module.is.searchSelection()) {\n              // prevent menu hiding on immediate re-focus\n              willRefocus = false;\n            }\n            else {\n              activated = false;\n            }\n          },\n          click: function(event) {\n            var\n              $target = $(event.target)\n            ;\n            // focus search\n            if($target.is($module)) {\n              if(!module.is.focusedOnSearch()) {\n                module.focusSearch();\n              }\n              else {\n                module.show();\n              }\n            }\n          },\n          search: {\n            focus: function() {\n              activated = true;\n              if(module.is.multiple()) {\n                module.remove.activeLabel();\n              }\n              if(settings.showOnFocus) {\n                module.search();\n              }\n            },\n            blur: function(event) {\n              pageLostFocus = (document.activeElement === this);\n              if(module.is.searchSelection() && !willRefocus) {\n                if(!itemActivated && !pageLostFocus) {\n                  if(settings.forceSelection) {\n                    module.forceSelection();\n                  }\n                  module.hide();\n                }\n              }\n              willRefocus = false;\n            }\n          },\n          icon: {\n            click: function(event) {\n              module.toggle();\n            }\n          },\n          text: {\n            focus: function(event) {\n              activated = true;\n              module.focusSearch();\n            }\n          },\n          input: function(event) {\n            if(module.is.multiple() || module.is.searchSelection()) {\n              module.set.filtered();\n            }\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.search, settings.delay.search);\n          },\n          label: {\n            click: function(event) {\n              var\n                $label        = $(this),\n                $labels       = $module.find(selector.label),\n                $activeLabels = $labels.filter('.' + className.active),\n                $nextActive   = $label.nextAll('.' + className.active),\n                $prevActive   = $label.prevAll('.' + className.active),\n                $range = ($nextActive.length > 0)\n                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\n                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\n              ;\n              if(event.shiftKey) {\n                $activeLabels.removeClass(className.active);\n                $range.addClass(className.active);\n              }\n              else if(event.ctrlKey) {\n                $label.toggleClass(className.active);\n              }\n              else {\n                $activeLabels.removeClass(className.active);\n                $label.addClass(className.active);\n              }\n              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\n            }\n          },\n          remove: {\n            click: function() {\n              var\n                $label = $(this).parent()\n              ;\n              if( $label.hasClass(className.active) ) {\n                // remove all selected labels\n                module.remove.activeLabels();\n              }\n              else {\n                // remove this label only\n                module.remove.activeLabels( $label );\n              }\n            }\n          },\n          test: {\n            toggle: function(event) {\n              var\n                toggleBehavior = (module.is.multiple())\n                  ? module.show\n                  : module.toggle\n              ;\n              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\n                return;\n              }\n              if( module.determine.eventOnElement(event, toggleBehavior) ) {\n                event.preventDefault();\n              }\n            },\n            touch: function(event) {\n              module.determine.eventOnElement(event, function() {\n                if(event.type == 'touchstart') {\n                  module.timer = setTimeout(function() {\n                    module.hide();\n                  }, settings.delay.touch);\n                }\n                else if(event.type == 'touchmove') {\n                  clearTimeout(module.timer);\n                }\n              });\n              event.stopPropagation();\n            },\n            hide: function(event) {\n              module.determine.eventInModule(event, module.hide);\n            }\n          },\n          select: {\n            mutation: function(mutations) {\n              module.debug('<select> modified, recreating menu');\n              module.setup.select();\n            }\n          },\n          menu: {\n            mutation: function(mutations) {\n              var\n                mutation   = mutations[0],\n                $addedNode = mutation.addedNodes\n                  ? $(mutation.addedNodes[0])\n                  : $(false),\n                $removedNode = mutation.removedNodes\n                  ? $(mutation.removedNodes[0])\n                  : $(false),\n                $changedNodes  = $addedNode.add($removedNode),\n                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\n                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\n              ;\n              if(isUserAddition || isMessage) {\n                module.debug('Updating item selector cache');\n                module.refreshItems();\n              }\n              else {\n                module.debug('Menu modified, updating selector cache');\n                module.refresh();\n              }\n            },\n            mousedown: function() {\n              itemActivated = true;\n            },\n            mouseup: function() {\n              itemActivated = false;\n            }\n          },\n          item: {\n            mouseenter: function(event) {\n              var\n                $target        = $(event.target),\n                $item          = $(this),\n                $subMenu       = $item.children(selector.menu),\n                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\n                hasSubMenu     = ($subMenu.length > 0),\n                isBubbledEvent = ($subMenu.find($target).length > 0)\n              ;\n              if( !isBubbledEvent && hasSubMenu ) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Showing sub-menu', $subMenu);\n                  $.each($otherMenus, function() {\n                    module.animate.hide(false, $(this));\n                  });\n                  module.animate.show(false, $subMenu);\n                }, settings.delay.show);\n                event.preventDefault();\n              }\n            },\n            mouseleave: function(event) {\n              var\n                $subMenu = $(this).children(selector.menu)\n              ;\n              if($subMenu.length > 0) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Hiding sub-menu', $subMenu);\n                  module.animate.hide(false, $subMenu);\n                }, settings.delay.hide);\n              }\n            },\n            click: function (event, skipRefocus) {\n              var\n                $choice        = $(this),\n                $target        = (event)\n                  ? $(event.target)\n                  : $(''),\n                $subMenu       = $choice.find(selector.menu),\n                text           = module.get.choiceText($choice),\n                value          = module.get.choiceValue($choice, text),\n                hasSubMenu     = ($subMenu.length > 0),\n                isBubbledEvent = ($subMenu.find($target).length > 0)\n              ;\n              // prevents IE11 bug where menu receives focus even though `tabindex=-1`\n              if(module.has.menuSearch()) {\n                $(document.activeElement).blur();\n              }\n              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\n                if(module.is.searchSelection()) {\n                  if(settings.allowAdditions) {\n                    module.remove.userAddition();\n                  }\n                  module.remove.searchTerm();\n                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\n                    module.focusSearch(true);\n                  }\n                }\n                if(!settings.useLabels) {\n                  module.remove.filteredItem();\n                  module.set.scrollPosition($choice);\n                }\n                module.determine.selectAction.call(this, text, value);\n              }\n            }\n          },\n\n          document: {\n            // label selection should occur even when element has no focus\n            keydown: function(event) {\n              var\n                pressedKey    = event.which,\n                isShortcutKey = module.is.inObject(pressedKey, keys)\n              ;\n              if(isShortcutKey) {\n                var\n                  $label            = $module.find(selector.label),\n                  $activeLabel      = $label.filter('.' + className.active),\n                  activeValue       = $activeLabel.data(metadata.value),\n                  labelIndex        = $label.index($activeLabel),\n                  labelCount        = $label.length,\n                  hasActiveLabel    = ($activeLabel.length > 0),\n                  hasMultipleActive = ($activeLabel.length > 1),\n                  isFirstLabel      = (labelIndex === 0),\n                  isLastLabel       = (labelIndex + 1 == labelCount),\n                  isSearch          = module.is.searchSelection(),\n                  isFocusedOnSearch = module.is.focusedOnSearch(),\n                  isFocused         = module.is.focused(),\n                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\n                  $nextLabel\n                ;\n                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\n                  return;\n                }\n\n                if(pressedKey == keys.leftArrow) {\n                  // activate previous label\n                  if((isFocused || caretAtStart) && !hasActiveLabel) {\n                    module.verbose('Selecting previous label');\n                    $label.last().addClass(className.active);\n                  }\n                  else if(hasActiveLabel) {\n                    if(!event.shiftKey) {\n                      module.verbose('Selecting previous label');\n                      $label.removeClass(className.active);\n                    }\n                    else {\n                      module.verbose('Adding previous label to selection');\n                    }\n                    if(isFirstLabel && !hasMultipleActive) {\n                      $activeLabel.addClass(className.active);\n                    }\n                    else {\n                      $activeLabel.prev(selector.siblingLabel)\n                        .addClass(className.active)\n                        .end()\n                      ;\n                    }\n                    event.preventDefault();\n                  }\n                }\n                else if(pressedKey == keys.rightArrow) {\n                  // activate first label\n                  if(isFocused && !hasActiveLabel) {\n                    $label.first().addClass(className.active);\n                  }\n                  // activate next label\n                  if(hasActiveLabel) {\n                    if(!event.shiftKey) {\n                      module.verbose('Selecting next label');\n                      $label.removeClass(className.active);\n                    }\n                    else {\n                      module.verbose('Adding next label to selection');\n                    }\n                    if(isLastLabel) {\n                      if(isSearch) {\n                        if(!isFocusedOnSearch) {\n                          module.focusSearch();\n                        }\n                        else {\n                          $label.removeClass(className.active);\n                        }\n                      }\n                      else if(hasMultipleActive) {\n                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\n                      }\n                      else {\n                        $activeLabel.addClass(className.active);\n                      }\n                    }\n                    else {\n                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\n                    }\n                    event.preventDefault();\n                  }\n                }\n                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\n                  if(hasActiveLabel) {\n                    module.verbose('Removing active labels');\n                    if(isLastLabel) {\n                      if(isSearch && !isFocusedOnSearch) {\n                        module.focusSearch();\n                      }\n                    }\n                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\n                    module.remove.activeLabels($activeLabel);\n                    event.preventDefault();\n                  }\n                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\n                    module.verbose('Removing last label on input backspace');\n                    $activeLabel = $label.last().addClass(className.active);\n                    module.remove.activeLabels($activeLabel);\n                  }\n                }\n                else {\n                  $activeLabel.removeClass(className.active);\n                }\n              }\n            }\n          },\n\n          keydown: function(event) {\n            var\n              pressedKey    = event.which,\n              isShortcutKey = module.is.inObject(pressedKey, keys)\n            ;\n            if(isShortcutKey) {\n              var\n                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\n                $activeItem        = $menu.children('.' + className.active).eq(0),\n                $selectedItem      = ($currentlySelected.length > 0)\n                  ? $currentlySelected\n                  : $activeItem,\n                $visibleItems = ($selectedItem.length > 0)\n                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\n                  : $menu.children(':not(.' + className.filtered +')'),\n                $subMenu              = $selectedItem.children(selector.menu),\n                $parentMenu           = $selectedItem.closest(selector.menu),\n                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\n                hasSubMenu            = ($subMenu.length> 0),\n                hasSelectedItem       = ($selectedItem.length > 0),\n                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\n                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\n                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\n                $nextItem,\n                isSubMenuItem,\n                newIndex\n              ;\n              // allow selection with menu closed\n              if(isAdditionWithoutMenu) {\n                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n                module.event.item.click.call($selectedItem, event);\n                if(module.is.searchSelection()) {\n                  module.remove.searchTerm();\n                }\n              }\n\n              // visible menu keyboard shortcuts\n              if( module.is.visible() ) {\n\n                // enter (select or open sub-menu)\n                if(pressedKey == keys.enter || delimiterPressed) {\n                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\n                    module.verbose('Pressed enter on unselectable category, opening sub menu');\n                    pressedKey = keys.rightArrow;\n                  }\n                  else if(selectedIsSelectable) {\n                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n                    module.event.item.click.call($selectedItem, event);\n                    if(module.is.searchSelection()) {\n                      module.remove.searchTerm();\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // sub-menu actions\n                if(hasSelectedItem) {\n\n                  if(pressedKey == keys.leftArrow) {\n\n                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\n\n                    if(isSubMenuItem) {\n                      module.verbose('Left key pressed, closing sub-menu');\n                      module.animate.hide(false, $parentMenu);\n                      $selectedItem\n                        .removeClass(className.selected)\n                      ;\n                      $parentMenu\n                        .closest(selector.item)\n                          .addClass(className.selected)\n                      ;\n                      event.preventDefault();\n                    }\n                  }\n\n                  // right arrow (show sub-menu)\n                  if(pressedKey == keys.rightArrow) {\n                    if(hasSubMenu) {\n                      module.verbose('Right key pressed, opening sub-menu');\n                      module.animate.show(false, $subMenu);\n                      $selectedItem\n                        .removeClass(className.selected)\n                      ;\n                      $subMenu\n                        .find(selector.item).eq(0)\n                          .addClass(className.selected)\n                      ;\n                      event.preventDefault();\n                    }\n                  }\n                }\n\n                // up arrow (traverse menu up)\n                if(pressedKey == keys.upArrow) {\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\n                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n                    : $item.eq(0)\n                  ;\n                  if($visibleItems.index( $nextItem ) < 0) {\n                    module.verbose('Up key pressed but reached top of current menu');\n                    event.preventDefault();\n                    return;\n                  }\n                  else {\n                    module.verbose('Up key pressed, changing active item');\n                    $selectedItem\n                      .removeClass(className.selected)\n                    ;\n                    $nextItem\n                      .addClass(className.selected)\n                    ;\n                    module.set.scrollPosition($nextItem);\n                    if(settings.selectOnKeydown && module.is.single()) {\n                      module.set.selectedItem($nextItem);\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // down arrow (traverse menu down)\n                if(pressedKey == keys.downArrow) {\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\n                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n                    : $item.eq(0)\n                  ;\n                  if($nextItem.length === 0) {\n                    module.verbose('Down key pressed but reached bottom of current menu');\n                    event.preventDefault();\n                    return;\n                  }\n                  else {\n                    module.verbose('Down key pressed, changing active item');\n                    $item\n                      .removeClass(className.selected)\n                    ;\n                    $nextItem\n                      .addClass(className.selected)\n                    ;\n                    module.set.scrollPosition($nextItem);\n                    if(settings.selectOnKeydown && module.is.single()) {\n                      module.set.selectedItem($nextItem);\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // page down (show next page)\n                if(pressedKey == keys.pageUp) {\n                  module.scrollPage('up');\n                  event.preventDefault();\n                }\n                if(pressedKey == keys.pageDown) {\n                  module.scrollPage('down');\n                  event.preventDefault();\n                }\n\n                // escape (close menu)\n                if(pressedKey == keys.escape) {\n                  module.verbose('Escape key pressed, closing dropdown');\n                  module.hide();\n                }\n\n              }\n              else {\n                // delimiter key\n                if(delimiterPressed) {\n                  event.preventDefault();\n                }\n                // down arrow (open menu)\n                if(pressedKey == keys.downArrow && !module.is.visible()) {\n                  module.verbose('Down key pressed, showing dropdown');\n                  module.select.firstUnfiltered();\n                  module.show();\n                  event.preventDefault();\n                }\n              }\n            }\n            else {\n              if( !module.has.search() ) {\n                module.set.selectedLetter( String.fromCharCode(pressedKey) );\n              }\n            }\n          }\n        },\n\n        trigger: {\n          change: function() {\n            var\n              events       = document.createEvent('HTMLEvents'),\n              inputElement = $input[0]\n            ;\n            if(inputElement) {\n              module.verbose('Triggering native change event');\n              events.initEvent('change', true, false);\n              inputElement.dispatchEvent(events);\n            }\n          }\n        },\n\n        determine: {\n          selectAction: function(text, value) {\n            module.verbose('Determining action', settings.action);\n            if( $.isFunction( module.action[settings.action] ) ) {\n              module.verbose('Triggering preset action', settings.action, text, value);\n              module.action[ settings.action ].call(element, text, value, this);\n            }\n            else if( $.isFunction(settings.action) ) {\n              module.verbose('Triggering user action', settings.action, text, value);\n              settings.action.call(element, text, value, this);\n            }\n            else {\n              module.error(error.action, settings.action);\n            }\n          },\n          eventInModule: function(event, callback) {\n            var\n              $target    = $(event.target),\n              inDocument = ($target.closest(document.documentElement).length > 0),\n              inModule   = ($target.closest($module).length > 0)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(inDocument && !inModule) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown, canceling callback');\n              return false;\n            }\n          },\n          eventOnElement: function(event, callback) {\n            var\n              $target      = $(event.target),\n              $label       = $target.closest(selector.siblingLabel),\n              inVisibleDOM = document.body.contains(event.target),\n              notOnLabel   = ($module.find($label).length === 0),\n              notInMenu    = ($target.closest($menu).length === 0)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(inVisibleDOM && notOnLabel && notInMenu) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown menu, canceling callback');\n              return false;\n            }\n          }\n        },\n\n        action: {\n\n          nothing: function() {},\n\n          activate: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            if( module.can.activate( $(element) ) ) {\n              module.set.selected(value, $(element));\n              if(module.is.multiple() && !module.is.allFiltered()) {\n                return;\n              }\n              else {\n                module.hideAndClear();\n              }\n            }\n          },\n\n          select: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            if( module.can.activate( $(element) ) ) {\n              module.set.value(value, $(element));\n              if(module.is.multiple() && !module.is.allFiltered()) {\n                return;\n              }\n              else {\n                module.hideAndClear();\n              }\n            }\n          },\n\n          combo: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value, $(element));\n            module.hideAndClear();\n          },\n\n          hide: function(text, value, element) {\n            module.set.value(value, text);\n            module.hideAndClear();\n          }\n\n        },\n\n        get: {\n          id: function() {\n            return id;\n          },\n          defaultText: function() {\n            return $module.data(metadata.defaultText);\n          },\n          defaultValue: function() {\n            return $module.data(metadata.defaultValue);\n          },\n          placeholderText: function() {\n            return $module.data(metadata.placeholderText) || '';\n          },\n          text: function() {\n            return $text.text();\n          },\n          query: function() {\n            return $.trim($search.val());\n          },\n          searchWidth: function(value) {\n            value = (value !== undefined)\n              ? value\n              : $search.val()\n            ;\n            $sizer.text(value);\n            // prevent rounding issues\n            return Math.ceil( $sizer.width() + 1);\n          },\n          selectionCount: function() {\n            var\n              values = module.get.values(),\n              count\n            ;\n            count = ( module.is.multiple() )\n              ? $.isArray(values)\n                ? values.length\n                : 0\n              : (module.get.value() !== '')\n                ? 1\n                : 0\n            ;\n            return count;\n          },\n          transition: function($subMenu) {\n            return (settings.transition == 'auto')\n              ? module.is.upward($subMenu)\n                ? 'slide up'\n                : 'slide down'\n              : settings.transition\n            ;\n          },\n          userValues: function() {\n            var\n              values = module.get.values()\n            ;\n            if(!values) {\n              return false;\n            }\n            values = $.isArray(values)\n              ? values\n              : [values]\n            ;\n            return $.grep(values, function(value) {\n              return (module.get.item(value) === false);\n            });\n          },\n          uniqueArray: function(array) {\n            return $.grep(array, function (value, index) {\n                return $.inArray(value, array) === index;\n            });\n          },\n          caretPosition: function() {\n            var\n              input = $search.get(0),\n              range,\n              rangeLength\n            ;\n            if('selectionStart' in input) {\n              return input.selectionStart;\n            }\n            else if (document.selection) {\n              input.focus();\n              range       = document.selection.createRange();\n              rangeLength = range.text.length;\n              range.moveStart('character', -input.value.length);\n              return range.text.length - rangeLength;\n            }\n          },\n          value: function() {\n            var\n              value = ($input.length > 0)\n                ? $input.val()\n                : $module.data(metadata.value),\n              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\n            ;\n            // prevents placeholder element from being selected when multiple\n            return (value === undefined || isEmptyMultiselect)\n              ? ''\n              : value\n            ;\n          },\n          values: function() {\n            var\n              value = module.get.value()\n            ;\n            if(value === '') {\n              return '';\n            }\n            return ( !module.has.selectInput() && module.is.multiple() )\n              ? (typeof value == 'string') // delimited string\n                ? value.split(settings.delimiter)\n                : ''\n              : value\n            ;\n          },\n          remoteValues: function() {\n            var\n              values = module.get.values(),\n              remoteValues = false\n            ;\n            if(values) {\n              if(typeof values == 'string') {\n                values = [values];\n              }\n              $.each(values, function(index, value) {\n                var\n                  name = module.read.remoteData(value)\n                ;\n                module.verbose('Restoring value from session data', name, value);\n                if(name) {\n                  if(!remoteValues) {\n                    remoteValues = {};\n                  }\n                  remoteValues[value] = name;\n                }\n              });\n            }\n            return remoteValues;\n          },\n          choiceText: function($choice, preserveHTML) {\n            preserveHTML = (preserveHTML !== undefined)\n              ? preserveHTML\n              : settings.preserveHTML\n            ;\n            if($choice) {\n              if($choice.find(selector.menu).length > 0) {\n                module.verbose('Retrieving text of element with sub-menu');\n                $choice = $choice.clone();\n                $choice.find(selector.menu).remove();\n                $choice.find(selector.menuIcon).remove();\n              }\n              return ($choice.data(metadata.text) !== undefined)\n                ? $choice.data(metadata.text)\n                : (preserveHTML)\n                  ? $.trim($choice.html())\n                  : $.trim($choice.text())\n              ;\n            }\n          },\n          choiceValue: function($choice, choiceText) {\n            choiceText = choiceText || module.get.choiceText($choice);\n            if(!$choice) {\n              return false;\n            }\n            return ($choice.data(metadata.value) !== undefined)\n              ? String( $choice.data(metadata.value) )\n              : (typeof choiceText === 'string')\n                ? $.trim(choiceText.toLowerCase())\n                : String(choiceText)\n            ;\n          },\n          inputEvent: function() {\n            var\n              input = $search[0]\n            ;\n            if(input) {\n              return (input.oninput !== undefined)\n                ? 'input'\n                : (input.onpropertychange !== undefined)\n                  ? 'propertychange'\n                  : 'keyup'\n              ;\n            }\n            return false;\n          },\n          selectValues: function() {\n            var\n              select = {}\n            ;\n            select.values = [];\n            $module\n              .find('option')\n                .each(function() {\n                  var\n                    $option  = $(this),\n                    name     = $option.html(),\n                    disabled = $option.attr('disabled'),\n                    value    = ( $option.attr('value') !== undefined )\n                      ? $option.attr('value')\n                      : name\n                  ;\n                  if(settings.placeholder === 'auto' && value === '') {\n                    select.placeholder = name;\n                  }\n                  else {\n                    select.values.push({\n                      name     : name,\n                      value    : value,\n                      disabled : disabled\n                    });\n                  }\n                })\n            ;\n            if(settings.placeholder && settings.placeholder !== 'auto') {\n              module.debug('Setting placeholder value to', settings.placeholder);\n              select.placeholder = settings.placeholder;\n            }\n            if(settings.sortSelect) {\n              select.values.sort(function(a, b) {\n                return (a.name > b.name)\n                  ? 1\n                  : -1\n                ;\n              });\n              module.debug('Retrieved and sorted values from select', select);\n            }\n            else {\n              module.debug('Retrieved values from select', select);\n            }\n            return select;\n          },\n          activeItem: function() {\n            return $item.filter('.'  + className.active);\n          },\n          selectedItem: function() {\n            var\n              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\n            ;\n            return ($selectedItem.length > 0)\n              ? $selectedItem\n              : $item.eq(0)\n            ;\n          },\n          itemWithAdditions: function(value) {\n            var\n              $items       = module.get.item(value),\n              $userItems   = module.create.userChoice(value),\n              hasUserItems = ($userItems && $userItems.length > 0)\n            ;\n            if(hasUserItems) {\n              $items = ($items.length > 0)\n                ? $items.add($userItems)\n                : $userItems\n              ;\n            }\n            return $items;\n          },\n          item: function(value, strict) {\n            var\n              $selectedItem = false,\n              shouldSearch,\n              isMultiple\n            ;\n            value = (value !== undefined)\n              ? value\n              : ( module.get.values() !== undefined)\n                ? module.get.values()\n                : module.get.text()\n            ;\n            shouldSearch = (isMultiple)\n              ? (value.length > 0)\n              : (value !== undefined && value !== null)\n            ;\n            isMultiple = (module.is.multiple() && $.isArray(value));\n            strict     = (value === '' || value === 0)\n              ? true\n              : strict || false\n            ;\n            if(shouldSearch) {\n              $item\n                .each(function() {\n                  var\n                    $choice       = $(this),\n                    optionText    = module.get.choiceText($choice),\n                    optionValue   = module.get.choiceValue($choice, optionText)\n                  ;\n                  // safe early exit\n                  if(optionValue === null || optionValue === undefined) {\n                    return;\n                  }\n                  if(isMultiple) {\n                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\n                      $selectedItem = ($selectedItem)\n                        ? $selectedItem.add($choice)\n                        : $choice\n                      ;\n                    }\n                  }\n                  else if(strict) {\n                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\n                    if( optionValue === value || optionText === value) {\n                      $selectedItem = $choice;\n                      return true;\n                    }\n                  }\n                  else {\n                    if( String(optionValue) == String(value) || optionText == value) {\n                      module.verbose('Found select item by value', optionValue, value);\n                      $selectedItem = $choice;\n                      return true;\n                    }\n                  }\n                })\n              ;\n            }\n            return $selectedItem;\n          }\n        },\n\n        check: {\n          maxSelections: function(selectionCount) {\n            if(settings.maxSelections) {\n              selectionCount = (selectionCount !== undefined)\n                ? selectionCount\n                : module.get.selectionCount()\n              ;\n              if(selectionCount >= settings.maxSelections) {\n                module.debug('Maximum selection count reached');\n                if(settings.useLabels) {\n                  $item.addClass(className.filtered);\n                  module.add.message(message.maxSelections);\n                }\n                return true;\n              }\n              else {\n                module.verbose('No longer at maximum selection count');\n                module.remove.message();\n                module.remove.filteredItem();\n                if(module.is.searchSelection()) {\n                  module.filterItems();\n                }\n                return false;\n              }\n            }\n            return true;\n          }\n        },\n\n        restore: {\n          defaults: function() {\n            module.clear();\n            module.restore.defaultText();\n            module.restore.defaultValue();\n          },\n          defaultText: function() {\n            var\n              defaultText     = module.get.defaultText(),\n              placeholderText = module.get.placeholderText\n            ;\n            if(defaultText === placeholderText) {\n              module.debug('Restoring default placeholder text', defaultText);\n              module.set.placeholderText(defaultText);\n            }\n            else {\n              module.debug('Restoring default text', defaultText);\n              module.set.text(defaultText);\n            }\n          },\n          placeholderText: function() {\n            module.set.placeholderText();\n          },\n          defaultValue: function() {\n            var\n              defaultValue = module.get.defaultValue()\n            ;\n            if(defaultValue !== undefined) {\n              module.debug('Restoring default value', defaultValue);\n              if(defaultValue !== '') {\n                module.set.value(defaultValue);\n                module.set.selected();\n              }\n              else {\n                module.remove.activeItem();\n                module.remove.selectedItem();\n              }\n            }\n          },\n          labels: function() {\n            if(settings.allowAdditions) {\n              if(!settings.useLabels) {\n                module.error(error.labels);\n                settings.useLabels = true;\n              }\n              module.debug('Restoring selected values');\n              module.create.userLabels();\n            }\n            module.check.maxSelections();\n          },\n          selected: function() {\n            module.restore.values();\n            if(module.is.multiple()) {\n              module.debug('Restoring previously selected values and labels');\n              module.restore.labels();\n            }\n            else {\n              module.debug('Restoring previously selected values');\n            }\n          },\n          values: function() {\n            // prevents callbacks from occurring on initial load\n            module.set.initialLoad();\n            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\n              module.restore.remoteValues();\n            }\n            else {\n              module.set.selected();\n            }\n            module.remove.initialLoad();\n          },\n          remoteValues: function() {\n            var\n              values = module.get.remoteValues()\n            ;\n            module.debug('Recreating selected from session data', values);\n            if(values) {\n              if( module.is.single() ) {\n                $.each(values, function(value, name) {\n                  module.set.text(name);\n                });\n              }\n              else {\n                $.each(values, function(value, name) {\n                  module.add.label(value, name);\n                });\n              }\n            }\n          }\n        },\n\n        read: {\n          remoteData: function(value) {\n            var\n              name\n            ;\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            name = sessionStorage.getItem(value);\n            return (name !== undefined)\n              ? name\n              : false\n            ;\n          }\n        },\n\n        save: {\n          defaults: function() {\n            module.save.defaultText();\n            module.save.placeholderText();\n            module.save.defaultValue();\n          },\n          defaultValue: function() {\n            var\n              value = module.get.value()\n            ;\n            module.verbose('Saving default value as', value);\n            $module.data(metadata.defaultValue, value);\n          },\n          defaultText: function() {\n            var\n              text = module.get.text()\n            ;\n            module.verbose('Saving default text as', text);\n            $module.data(metadata.defaultText, text);\n          },\n          placeholderText: function() {\n            var\n              text\n            ;\n            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\n              text = module.get.text();\n              module.verbose('Saving placeholder text as', text);\n              $module.data(metadata.placeholderText, text);\n            }\n          },\n          remoteData: function(name, value) {\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            module.verbose('Saving remote data to session storage', value, name);\n            sessionStorage.setItem(value, name);\n          }\n        },\n\n        clear: function() {\n          if(module.is.multiple() && settings.useLabels) {\n            module.remove.labels();\n          }\n          else {\n            module.remove.activeItem();\n            module.remove.selectedItem();\n          }\n          module.set.placeholderText();\n          module.clearValue();\n        },\n\n        clearValue: function() {\n          module.set.value('');\n        },\n\n        scrollPage: function(direction, $selectedItem) {\n          var\n            $currentItem  = $selectedItem || module.get.selectedItem(),\n            $menu         = $currentItem.closest(selector.menu),\n            menuHeight    = $menu.outerHeight(),\n            currentScroll = $menu.scrollTop(),\n            itemHeight    = $item.eq(0).outerHeight(),\n            itemsPerPage  = Math.floor(menuHeight / itemHeight),\n            maxScroll     = $menu.prop('scrollHeight'),\n            newScroll     = (direction == 'up')\n              ? currentScroll - (itemHeight * itemsPerPage)\n              : currentScroll + (itemHeight * itemsPerPage),\n            $selectableItem = $item.not(selector.unselectable),\n            isWithinRange,\n            $nextSelectedItem,\n            elementIndex\n          ;\n          elementIndex      = (direction == 'up')\n            ? $selectableItem.index($currentItem) - itemsPerPage\n            : $selectableItem.index($currentItem) + itemsPerPage\n          ;\n          isWithinRange = (direction == 'up')\n            ? (elementIndex >= 0)\n            : (elementIndex < $selectableItem.length)\n          ;\n          $nextSelectedItem = (isWithinRange)\n            ? $selectableItem.eq(elementIndex)\n            : (direction == 'up')\n              ? $selectableItem.first()\n              : $selectableItem.last()\n          ;\n          if($nextSelectedItem.length > 0) {\n            module.debug('Scrolling page', direction, $nextSelectedItem);\n            $currentItem\n              .removeClass(className.selected)\n            ;\n            $nextSelectedItem\n              .addClass(className.selected)\n            ;\n            if(settings.selectOnKeydown && module.is.single()) {\n              module.set.selectedItem($nextSelectedItem);\n            }\n            $menu\n              .scrollTop(newScroll)\n            ;\n          }\n        },\n\n        set: {\n          filtered: function() {\n            var\n              isMultiple       = module.is.multiple(),\n              isSearch         = module.is.searchSelection(),\n              isSearchMultiple = (isMultiple && isSearch),\n              searchValue      = (isSearch)\n                ? module.get.query()\n                : '',\n              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\n              searchWidth      = module.get.searchWidth(),\n              valueIsSet       = searchValue !== ''\n            ;\n            if(isMultiple && hasSearchValue) {\n              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\n              $search.css('width', searchWidth);\n            }\n            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\n              module.verbose('Hiding placeholder text');\n              $text.addClass(className.filtered);\n            }\n            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\n              module.verbose('Showing placeholder text');\n              $text.removeClass(className.filtered);\n            }\n          },\n          empty: function() {\n            $module.addClass(className.empty);\n          },\n          loading: function() {\n            $module.addClass(className.loading);\n          },\n          placeholderText: function(text) {\n            text = text || module.get.placeholderText();\n            module.debug('Setting placeholder text', text);\n            module.set.text(text);\n            $text.addClass(className.placeholder);\n          },\n          tabbable: function() {\n            if( module.is.searchSelection() ) {\n              module.debug('Added tabindex to searchable dropdown');\n              $search\n                .val('')\n                .attr('tabindex', 0)\n              ;\n              $menu\n                .attr('tabindex', -1)\n              ;\n            }\n            else {\n              module.debug('Added tabindex to dropdown');\n              if( $module.attr('tabindex') === undefined) {\n                $module\n                  .attr('tabindex', 0)\n                ;\n                $menu\n                  .attr('tabindex', -1)\n                ;\n              }\n            }\n          },\n          initialLoad: function() {\n            module.verbose('Setting initial load');\n            initialLoad = true;\n          },\n          activeItem: function($item) {\n            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\n              $item.addClass(className.filtered);\n            }\n            else {\n              $item.addClass(className.active);\n            }\n          },\n          partialSearch: function(text) {\n            var\n              length = module.get.query().length\n            ;\n            $search.val( text.substr(0 , length));\n          },\n          scrollPosition: function($item, forceScroll) {\n            var\n              edgeTolerance = 5,\n              $menu,\n              hasActive,\n              offset,\n              itemHeight,\n              itemOffset,\n              menuOffset,\n              menuScroll,\n              menuHeight,\n              abovePage,\n              belowPage\n            ;\n\n            $item       = $item || module.get.selectedItem();\n            $menu       = $item.closest(selector.menu);\n            hasActive   = ($item && $item.length > 0);\n            forceScroll = (forceScroll !== undefined)\n              ? forceScroll\n              : false\n            ;\n            if($item && $menu.length > 0 && hasActive) {\n              itemOffset = $item.position().top;\n\n              $menu.addClass(className.loading);\n              menuScroll = $menu.scrollTop();\n              menuOffset = $menu.offset().top;\n              itemOffset = $item.offset().top;\n              offset     = menuScroll - menuOffset + itemOffset;\n              if(!forceScroll) {\n                menuHeight = $menu.height();\n                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\n                abovePage  = ((offset - edgeTolerance) < menuScroll);\n              }\n              module.debug('Scrolling to active item', offset);\n              if(forceScroll || abovePage || belowPage) {\n                $menu.scrollTop(offset);\n              }\n              $menu.removeClass(className.loading);\n            }\n          },\n          text: function(text) {\n            if(settings.action !== 'select') {\n              if(settings.action == 'combo') {\n                module.debug('Changing combo button text', text, $combo);\n                if(settings.preserveHTML) {\n                  $combo.html(text);\n                }\n                else {\n                  $combo.text(text);\n                }\n              }\n              else {\n                if(text !== module.get.placeholderText()) {\n                  $text.removeClass(className.placeholder);\n                }\n                module.debug('Changing text', text, $text);\n                $text\n                  .removeClass(className.filtered)\n                ;\n                if(settings.preserveHTML) {\n                  $text.html(text);\n                }\n                else {\n                  $text.text(text);\n                }\n              }\n            }\n          },\n          selectedItem: function($item) {\n            var\n              value      = module.get.choiceValue($item),\n              searchText = module.get.choiceText($item, false),\n              text       = module.get.choiceText($item, true)\n            ;\n            module.debug('Setting user selection to item', $item);\n            module.remove.activeItem();\n            module.set.partialSearch(searchText);\n            module.set.activeItem($item);\n            module.set.selected(value, $item);\n            module.set.text(text);\n          },\n          selectedLetter: function(letter) {\n            var\n              $selectedItem         = $item.filter('.' + className.selected),\n              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\n              $nextValue            = false,\n              $nextItem\n            ;\n            // check next of same letter\n            if(alreadySelectedLetter) {\n              $nextItem = $selectedItem.nextAll($item).eq(0);\n              if( module.has.firstLetter($nextItem, letter) ) {\n                $nextValue  = $nextItem;\n              }\n            }\n            // check all values\n            if(!$nextValue) {\n              $item\n                .each(function(){\n                  if(module.has.firstLetter($(this), letter)) {\n                    $nextValue = $(this);\n                    return false;\n                  }\n                })\n              ;\n            }\n            // set next value\n            if($nextValue) {\n              module.verbose('Scrolling to next value with letter', letter);\n              module.set.scrollPosition($nextValue);\n              $selectedItem.removeClass(className.selected);\n              $nextValue.addClass(className.selected);\n              if(settings.selectOnKeydown && module.is.single()) {\n                module.set.selectedItem($nextValue);\n              }\n            }\n          },\n          direction: function($menu) {\n            if(settings.direction == 'auto') {\n              if(module.is.onScreen($menu)) {\n                module.remove.upward($menu);\n              }\n              else {\n                module.set.upward($menu);\n              }\n            }\n            else if(settings.direction == 'upward') {\n              module.set.upward($menu);\n            }\n          },\n          upward: function($menu) {\n            var $element = $menu || $module;\n            $element.addClass(className.upward);\n          },\n          value: function(value, text, $selected) {\n            var\n              escapedValue = module.escape.value(value),\n              hasInput     = ($input.length > 0),\n              isAddition   = !module.has.value(value),\n              currentValue = module.get.values(),\n              stringValue  = (value !== undefined)\n                ? String(value)\n                : value,\n              newValue\n            ;\n            if(hasInput) {\n              if(!settings.allowReselection && stringValue == currentValue) {\n                module.verbose('Skipping value update already same value', value, currentValue);\n                if(!module.is.initialLoad()) {\n                  return;\n                }\n              }\n\n              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\n                module.debug('Adding user option', value);\n                module.add.optionValue(value);\n              }\n              module.debug('Updating input value', escapedValue, currentValue);\n              internalChange = true;\n              $input\n                .val(escapedValue)\n              ;\n              if(settings.fireOnInit === false && module.is.initialLoad()) {\n                module.debug('Input native change event ignored on initial load');\n              }\n              else {\n                module.trigger.change();\n              }\n              internalChange = false;\n            }\n            else {\n              module.verbose('Storing value in metadata', escapedValue, $input);\n              if(escapedValue !== currentValue) {\n                $module.data(metadata.value, stringValue);\n              }\n            }\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('No callback on initial load', settings.onChange);\n            }\n            else {\n              settings.onChange.call(element, value, text, $selected);\n            }\n          },\n          active: function() {\n            $module\n              .addClass(className.active)\n            ;\n          },\n          multiple: function() {\n            $module.addClass(className.multiple);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          exactly: function(value, $selectedItem) {\n            module.debug('Setting selected to exact values');\n            module.clear();\n            module.set.selected(value, $selectedItem);\n          },\n          selected: function(value, $selectedItem) {\n            var\n              isMultiple = module.is.multiple(),\n              $userSelectedItem\n            ;\n            $selectedItem = (settings.allowAdditions)\n              ? $selectedItem || module.get.itemWithAdditions(value)\n              : $selectedItem || module.get.item(value)\n            ;\n            if(!$selectedItem) {\n              return;\n            }\n            module.debug('Setting selected menu item to', $selectedItem);\n            if(module.is.multiple()) {\n              module.remove.searchWidth();\n            }\n            if(module.is.single()) {\n              module.remove.activeItem();\n              module.remove.selectedItem();\n            }\n            else if(settings.useLabels) {\n              module.remove.selectedItem();\n            }\n            // select each item\n            $selectedItem\n              .each(function() {\n                var\n                  $selected      = $(this),\n                  selectedText   = module.get.choiceText($selected),\n                  selectedValue  = module.get.choiceValue($selected, selectedText),\n\n                  isFiltered     = $selected.hasClass(className.filtered),\n                  isActive       = $selected.hasClass(className.active),\n                  isUserValue    = $selected.hasClass(className.addition),\n                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\n                ;\n                if(isMultiple) {\n                  if(!isActive || isUserValue) {\n                    if(settings.apiSettings && settings.saveRemoteData) {\n                      module.save.remoteData(selectedText, selectedValue);\n                    }\n                    if(settings.useLabels) {\n                      module.add.value(selectedValue, selectedText, $selected);\n                      module.add.label(selectedValue, selectedText, shouldAnimate);\n                      module.set.activeItem($selected);\n                      module.filterActive();\n                      module.select.nextAvailable($selectedItem);\n                    }\n                    else {\n                      module.add.value(selectedValue, selectedText, $selected);\n                      module.set.text(module.add.variables(message.count));\n                      module.set.activeItem($selected);\n                    }\n                  }\n                  else if(!isFiltered) {\n                    module.debug('Selected active value, removing label');\n                    module.remove.selected(selectedValue);\n                  }\n                }\n                else {\n                  if(settings.apiSettings && settings.saveRemoteData) {\n                    module.save.remoteData(selectedText, selectedValue);\n                  }\n                  module.set.text(selectedText);\n                  module.set.value(selectedValue, selectedText, $selected);\n                  $selected\n                    .addClass(className.active)\n                    .addClass(className.selected)\n                  ;\n                }\n              })\n            ;\n          }\n        },\n\n        add: {\n          label: function(value, text, shouldAnimate) {\n            var\n              $next  = module.is.searchSelection()\n                ? $search\n                : $text,\n              escapedValue = module.escape.value(value),\n              $label\n            ;\n            $label =  $('<a />')\n              .addClass(className.label)\n              .attr('data-' + metadata.value, escapedValue)\n              .html(templates.label(escapedValue, text))\n            ;\n            $label = settings.onLabelCreate.call($label, escapedValue, text);\n\n            if(module.has.label(value)) {\n              module.debug('Label already exists, skipping', escapedValue);\n              return;\n            }\n            if(settings.label.variation) {\n              $label.addClass(settings.label.variation);\n            }\n            if(shouldAnimate === true) {\n              module.debug('Animating in label', $label);\n              $label\n                .addClass(className.hidden)\n                .insertBefore($next)\n                .transition(settings.label.transition, settings.label.duration)\n              ;\n            }\n            else {\n              module.debug('Adding selection label', $label);\n              $label\n                .insertBefore($next)\n              ;\n            }\n          },\n          message: function(message) {\n            var\n              $message = $menu.children(selector.message),\n              html     = settings.templates.message(module.add.variables(message))\n            ;\n            if($message.length > 0) {\n              $message\n                .html(html)\n              ;\n            }\n            else {\n              $message = $('<div/>')\n                .html(html)\n                .addClass(className.message)\n                .appendTo($menu)\n              ;\n            }\n          },\n          optionValue: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n              hasOption    = ($option.length > 0)\n            ;\n            if(hasOption) {\n              return;\n            }\n            // temporarily disconnect observer\n            module.disconnect.selectObserver();\n            if( module.is.single() ) {\n              module.verbose('Removing previous user addition');\n              $input.find('option.' + className.addition).remove();\n            }\n            $('<option/>')\n              .prop('value', escapedValue)\n              .addClass(className.addition)\n              .html(value)\n              .appendTo($input)\n            ;\n            module.verbose('Adding user addition as an <option>', value);\n            module.observe.select();\n          },\n          userSuggestion: function(value) {\n            var\n              $addition         = $menu.children(selector.addition),\n              $existingItem     = module.get.item(value),\n              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\n              hasUserSuggestion = $addition.length > 0,\n              html\n            ;\n            if(settings.useLabels && module.has.maxSelections()) {\n              return;\n            }\n            if(value === '' || alreadyHasValue) {\n              $addition.remove();\n              return;\n            }\n            if(hasUserSuggestion) {\n              $addition\n                .data(metadata.value, value)\n                .data(metadata.text, value)\n                .attr('data-' + metadata.value, value)\n                .attr('data-' + metadata.text, value)\n                .removeClass(className.filtered)\n              ;\n              if(!settings.hideAdditions) {\n                html = settings.templates.addition( module.add.variables(message.addResult, value) );\n                $addition\n                  .html(html)\n                ;\n              }\n              module.verbose('Replacing user suggestion with new value', $addition);\n            }\n            else {\n              $addition = module.create.userChoice(value);\n              $addition\n                .prependTo($menu)\n              ;\n              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\n            }\n            if(!settings.hideAdditions || module.is.allFiltered()) {\n              $addition\n                .addClass(className.selected)\n                .siblings()\n                .removeClass(className.selected)\n              ;\n            }\n            module.refreshItems();\n          },\n          variables: function(message, term) {\n            var\n              hasCount    = (message.search('{count}') !== -1),\n              hasMaxCount = (message.search('{maxCount}') !== -1),\n              hasTerm     = (message.search('{term}') !== -1),\n              values,\n              count,\n              query\n            ;\n            module.verbose('Adding templated variables to message', message);\n            if(hasCount) {\n              count  = module.get.selectionCount();\n              message = message.replace('{count}', count);\n            }\n            if(hasMaxCount) {\n              count  = module.get.selectionCount();\n              message = message.replace('{maxCount}', settings.maxSelections);\n            }\n            if(hasTerm) {\n              query   = term || module.get.query();\n              message = message.replace('{term}', query);\n            }\n            return message;\n          },\n          value: function(addedValue, addedText, $selectedItem) {\n            var\n              currentValue = module.get.values(),\n              newValue\n            ;\n            if(addedValue === '') {\n              module.debug('Cannot select blank values from multiselect');\n              return;\n            }\n            // extend current array\n            if($.isArray(currentValue)) {\n              newValue = currentValue.concat([addedValue]);\n              newValue = module.get.uniqueArray(newValue);\n            }\n            else {\n              newValue = [addedValue];\n            }\n            // add values\n            if( module.has.selectInput() ) {\n              if(module.can.extendSelect()) {\n                module.debug('Adding value to select', addedValue, newValue, $input);\n                module.add.optionValue(addedValue);\n              }\n            }\n            else {\n              newValue = newValue.join(settings.delimiter);\n              module.debug('Setting hidden input to delimited value', newValue, $input);\n            }\n\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\n            }\n            else {\n              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\n            }\n            module.set.value(newValue, addedValue, addedText, $selectedItem);\n            module.check.maxSelections();\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          activeLabel: function() {\n            $module.find(selector.label).removeClass(className.active);\n          },\n          empty: function() {\n            $module.removeClass(className.empty);\n          },\n          loading: function() {\n            $module.removeClass(className.loading);\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          },\n          upward: function($menu) {\n            var $element = $menu || $module;\n            $element.removeClass(className.upward);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          activeItem: function() {\n            $item.removeClass(className.active);\n          },\n          filteredItem: function() {\n            if(settings.useLabels && module.has.maxSelections() ) {\n              return;\n            }\n            if(settings.useLabels && module.is.multiple()) {\n              $item.not('.' + className.active).removeClass(className.filtered);\n            }\n            else {\n              $item.removeClass(className.filtered);\n            }\n            module.remove.empty();\n          },\n          optionValue: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n              hasOption    = ($option.length > 0)\n            ;\n            if(!hasOption || !$option.hasClass(className.addition)) {\n              return;\n            }\n            // temporarily disconnect observer\n            if(selectObserver) {\n              selectObserver.disconnect();\n              module.verbose('Temporarily disconnecting mutation observer');\n            }\n            $option.remove();\n            module.verbose('Removing user addition as an <option>', escapedValue);\n            if(selectObserver) {\n              selectObserver.observe($input[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          },\n          message: function() {\n            $menu.children(selector.message).remove();\n          },\n          searchWidth: function() {\n            $search.css('width', '');\n          },\n          searchTerm: function() {\n            module.verbose('Cleared search term');\n            $search.val('');\n            module.set.filtered();\n          },\n          userAddition: function() {\n            $item.filter(selector.addition).remove();\n          },\n          selected: function(value, $selectedItem) {\n            $selectedItem = (settings.allowAdditions)\n              ? $selectedItem || module.get.itemWithAdditions(value)\n              : $selectedItem || module.get.item(value)\n            ;\n\n            if(!$selectedItem) {\n              return false;\n            }\n\n            $selectedItem\n              .each(function() {\n                var\n                  $selected     = $(this),\n                  selectedText  = module.get.choiceText($selected),\n                  selectedValue = module.get.choiceValue($selected, selectedText)\n                ;\n                if(module.is.multiple()) {\n                  if(settings.useLabels) {\n                    module.remove.value(selectedValue, selectedText, $selected);\n                    module.remove.label(selectedValue);\n                  }\n                  else {\n                    module.remove.value(selectedValue, selectedText, $selected);\n                    if(module.get.selectionCount() === 0) {\n                      module.set.placeholderText();\n                    }\n                    else {\n                      module.set.text(module.add.variables(message.count));\n                    }\n                  }\n                }\n                else {\n                  module.remove.value(selectedValue, selectedText, $selected);\n                }\n                $selected\n                  .removeClass(className.filtered)\n                  .removeClass(className.active)\n                ;\n                if(settings.useLabels) {\n                  $selected.removeClass(className.selected);\n                }\n              })\n            ;\n          },\n          selectedItem: function() {\n            $item.removeClass(className.selected);\n          },\n          value: function(removedValue, removedText, $removedItem) {\n            var\n              values = module.get.values(),\n              newValue\n            ;\n            if( module.has.selectInput() ) {\n              module.verbose('Input is <select> removing selected option', removedValue);\n              newValue = module.remove.arrayValue(removedValue, values);\n              module.remove.optionValue(removedValue);\n            }\n            else {\n              module.verbose('Removing from delimited values', removedValue);\n              newValue = module.remove.arrayValue(removedValue, values);\n              newValue = newValue.join(settings.delimiter);\n            }\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('No callback on initial load', settings.onRemove);\n            }\n            else {\n              settings.onRemove.call(element, removedValue, removedText, $removedItem);\n            }\n            module.set.value(newValue, removedText, $removedItem);\n            module.check.maxSelections();\n          },\n          arrayValue: function(removedValue, values) {\n            if( !$.isArray(values) ) {\n              values = [values];\n            }\n            values = $.grep(values, function(value){\n              return (removedValue != value);\n            });\n            module.verbose('Removed value from delimited string', removedValue, values);\n            return values;\n          },\n          label: function(value, shouldAnimate) {\n            var\n              $labels       = $module.find(selector.label),\n              $removedLabel = $labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(value) +'\"]')\n            ;\n            module.verbose('Removing label', $removedLabel);\n            $removedLabel.remove();\n          },\n          activeLabels: function($activeLabels) {\n            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\n            module.verbose('Removing active label selections', $activeLabels);\n            module.remove.labels($activeLabels);\n          },\n          labels: function($labels) {\n            $labels = $labels || $module.find(selector.label);\n            module.verbose('Removing labels', $labels);\n            $labels\n              .each(function(){\n                var\n                  $label      = $(this),\n                  value       = $label.data(metadata.value),\n                  stringValue = (value !== undefined)\n                    ? String(value)\n                    : value,\n                  isUserValue = module.is.userValue(stringValue)\n                ;\n                if(settings.onLabelRemove.call($label, value) === false) {\n                  module.debug('Label remove callback cancelled removal');\n                  return;\n                }\n                module.remove.message();\n                if(isUserValue) {\n                  module.remove.value(stringValue);\n                  module.remove.label(stringValue);\n                }\n                else {\n                  // selected will also remove label\n                  module.remove.selected(stringValue);\n                }\n              })\n            ;\n          },\n          tabbable: function() {\n            if( module.is.searchSelection() ) {\n              module.debug('Searchable dropdown initialized');\n              $search\n                .removeAttr('tabindex')\n              ;\n              $menu\n                .removeAttr('tabindex')\n              ;\n            }\n            else {\n              module.debug('Simple selection dropdown initialized');\n              $module\n                .removeAttr('tabindex')\n              ;\n              $menu\n                .removeAttr('tabindex')\n              ;\n            }\n          }\n        },\n\n        has: {\n          menuSearch: function() {\n            return (module.has.search() && $search.closest($menu).length > 0);\n          },\n          search: function() {\n            return ($search.length > 0);\n          },\n          sizer: function() {\n            return ($sizer.length > 0);\n          },\n          selectInput: function() {\n            return ( $input.is('select') );\n          },\n          minCharacters: function(searchTerm) {\n            if(settings.minCharacters) {\n              searchTerm = (searchTerm !== undefined)\n                ? String(searchTerm)\n                : String(module.get.query())\n              ;\n              return (searchTerm.length >= settings.minCharacters);\n            }\n            return true;\n          },\n          firstLetter: function($item, letter) {\n            var\n              text,\n              firstLetter\n            ;\n            if(!$item || $item.length === 0 || typeof letter !== 'string') {\n              return false;\n            }\n            text        = module.get.choiceText($item, false);\n            letter      = letter.toLowerCase();\n            firstLetter = String(text).charAt(0).toLowerCase();\n            return (letter == firstLetter);\n          },\n          input: function() {\n            return ($input.length > 0);\n          },\n          items: function() {\n            return ($item.length > 0);\n          },\n          menu: function() {\n            return ($menu.length > 0);\n          },\n          message: function() {\n            return ($menu.children(selector.message).length !== 0);\n          },\n          label: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $labels      = $module.find(selector.label)\n            ;\n            return ($labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(escapedValue) +'\"]').length > 0);\n          },\n          maxSelections: function() {\n            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\n          },\n          allResultsFiltered: function() {\n            var\n              $normalResults = $item.not(selector.addition)\n            ;\n            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\n          },\n          userSuggestion: function() {\n            return ($menu.children(selector.addition).length > 0);\n          },\n          query: function() {\n            return (module.get.query() !== '');\n          },\n          value: function(value) {\n            var\n              values   = module.get.values(),\n              hasValue = $.isArray(values)\n               ? values && ($.inArray(value, values) !== -1)\n               : (values == value)\n            ;\n            return (hasValue)\n              ? true\n              : false\n            ;\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          bubbledLabelClick: function(event) {\n            return $(event.target).is('select, input') && $module.closest('label').length > 0;\n          },\n          bubbledIconClick: function(event) {\n            return $(event.target).closest($icon).length > 0;\n          },\n          alreadySetup: function() {\n            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\n          },\n          animating: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.transition && $subMenu.transition('is animating')\n              : $menu.transition    && $menu.transition('is animating')\n            ;\n          },\n          disabled: function() {\n            return $module.hasClass(className.disabled);\n          },\n          focused: function() {\n            return (document.activeElement === $module[0]);\n          },\n          focusedOnSearch: function() {\n            return (document.activeElement === $search[0]);\n          },\n          allFiltered: function() {\n            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\n          },\n          hidden: function($subMenu) {\n            return !module.is.visible($subMenu);\n          },\n          initialLoad: function() {\n            return initialLoad;\n          },\n          onScreen: function($subMenu) {\n            var\n              $currentMenu   = $subMenu || $menu,\n              canOpenDownward = true,\n              onScreen = {},\n              calculations\n            ;\n            $currentMenu.addClass(className.loading);\n            calculations = {\n              context: {\n                scrollTop : $context.scrollTop(),\n                height    : $context.outerHeight()\n              },\n              menu : {\n                offset: $currentMenu.offset(),\n                height: $currentMenu.outerHeight()\n              }\n            };\n            if(module.is.verticallyScrollableContext()) {\n              calculations.menu.offset.top += calculations.context.scrollTop;\n            }\n            onScreen = {\n              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\n              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\n            };\n            if(onScreen.below) {\n              module.verbose('Dropdown can fit in context downward', onScreen);\n              canOpenDownward = true;\n            }\n            else if(!onScreen.below && !onScreen.above) {\n              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\n              canOpenDownward = true;\n            }\n            else {\n              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\n              canOpenDownward = false;\n            }\n            $currentMenu.removeClass(className.loading);\n            return canOpenDownward;\n          },\n          inObject: function(needle, object) {\n            var\n              found = false\n            ;\n            $.each(object, function(index, property) {\n              if(property == needle) {\n                found = true;\n                return true;\n              }\n            });\n            return found;\n          },\n          multiple: function() {\n            return $module.hasClass(className.multiple);\n          },\n          remote: function() {\n            return settings.apiSettings && module.can.useAPI();\n          },\n          single: function() {\n            return !module.is.multiple();\n          },\n          selectMutation: function(mutations) {\n            var\n              selectChanged = false\n            ;\n            $.each(mutations, function(index, mutation) {\n              if(mutation.target && $(mutation.target).is('select')) {\n                selectChanged = true;\n                return true;\n              }\n            });\n            return selectChanged;\n          },\n          search: function() {\n            return $module.hasClass(className.search);\n          },\n          searchSelection: function() {\n            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\n          },\n          selection: function() {\n            return $module.hasClass(className.selection);\n          },\n          userValue: function(value) {\n            return ($.inArray(value, module.get.userValues()) !== -1);\n          },\n          upward: function($menu) {\n            var $element = $menu || $module;\n            return $element.hasClass(className.upward);\n          },\n          visible: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.hasClass(className.visible)\n              : $menu.hasClass(className.visible)\n            ;\n          },\n          verticallyScrollableContext: function() {\n            var\n              overflowY = ($context.get(0) !== window)\n                ? $context.css('overflow-y')\n                : false\n            ;\n            return (overflowY == 'auto' || overflowY == 'scroll');\n          }\n        },\n\n        can: {\n          activate: function($item) {\n            if(settings.useLabels) {\n              return true;\n            }\n            if(!module.has.maxSelections()) {\n              return true;\n            }\n            if(module.has.maxSelections() && $item.hasClass(className.active)) {\n              return true;\n            }\n            return false;\n          },\n          click: function() {\n            return (hasTouch || settings.on == 'click');\n          },\n          extendSelect: function() {\n            return settings.allowAdditions || settings.apiSettings;\n          },\n          show: function() {\n            return !module.is.disabled() && (module.has.items() || module.has.message());\n          },\n          useAPI: function() {\n            return $.fn.api !== undefined;\n          }\n        },\n\n        animate: {\n          show: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu,\n              start = ($subMenu)\n                ? function() {}\n                : function() {\n                  module.hideSubMenus();\n                  module.hideOthers();\n                  module.set.active();\n                },\n              transition\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            module.verbose('Doing menu show animation', $currentMenu);\n            module.set.direction($subMenu);\n            transition = module.get.transition($subMenu);\n            if( module.is.selection() ) {\n              module.set.scrollPosition(module.get.selectedItem(), true);\n            }\n            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\n              if(transition == 'none') {\n                start();\n                $currentMenu.transition('show');\n                callback.call(element);\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu\n                  .transition({\n                    animation  : transition + ' in',\n                    debug      : settings.debug,\n                    verbose    : settings.verbose,\n                    duration   : settings.duration,\n                    queue      : true,\n                    onStart    : start,\n                    onComplete : function() {\n                      callback.call(element);\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.noTransition, transition);\n              }\n            }\n          },\n          hide: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu,\n              duration = ($subMenu)\n                ? (settings.duration * 0.9)\n                : settings.duration,\n              start = ($subMenu)\n                ? function() {}\n                : function() {\n                  if( module.can.click() ) {\n                    module.unbind.intent();\n                  }\n                  module.remove.active();\n                },\n              transition = module.get.transition($subMenu)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\n              module.verbose('Doing menu hide animation', $currentMenu);\n\n              if(transition == 'none') {\n                start();\n                $currentMenu.transition('hide');\n                callback.call(element);\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu\n                  .transition({\n                    animation  : transition + ' out',\n                    duration   : settings.duration,\n                    debug      : settings.debug,\n                    verbose    : settings.verbose,\n                    queue      : true,\n                    onStart    : start,\n                    onComplete : function() {\n                      if(settings.direction == 'auto') {\n                        module.remove.upward($subMenu);\n                      }\n                      callback.call(element);\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.transition);\n              }\n            }\n          }\n        },\n\n        hideAndClear: function() {\n          module.remove.searchTerm();\n          if( module.has.maxSelections() ) {\n            return;\n          }\n          if(module.has.search()) {\n            module.hide(function() {\n              module.remove.filteredItem();\n            });\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        delay: {\n          show: function() {\n            module.verbose('Delaying show event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.show, settings.delay.show);\n          },\n          hide: function() {\n            module.verbose('Delaying hide event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.hide, settings.delay.hide);\n          }\n        },\n\n        escape: {\n          value: function(value) {\n            var\n              multipleValues = $.isArray(value),\n              stringValue    = (typeof value === 'string'),\n              isUnparsable   = (!stringValue && !multipleValues),\n              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\n              values         = []\n            ;\n            if(isUnparsable || !hasQuotes) {\n              return value;\n            }\n            module.debug('Encoding quote values for use in select', value);\n            if(multipleValues) {\n              $.each(value, function(index, value){\n                values.push(value.replace(regExp.quote, '&quot;'));\n              });\n              return values;\n            }\n            return value.replace(regExp.quote, '&quot;');\n          },\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : $allModules\n  ;\n};\n\n$.fn.dropdown.settings = {\n\n  silent                 : false,\n  debug                  : false,\n  verbose                : false,\n  performance            : true,\n\n  on                     : 'click',    // what event should show menu action on item selection\n  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\n\n\n  apiSettings            : false,\n  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\n  minCharacters          : 0,          // Minimum characters required to trigger API call\n\n  filterRemoteData       : false,      // Whether API results should be filtered after being returned for query term\n  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\n\n  throttle               : 200,        // How long to wait after last user input to search remotely\n\n  context                : window,     // Context to use when determining if on screen\n  direction              : 'auto',     // Whether dropdown should always open in one direction\n  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\n\n  match                  : 'both',     // what to match against with search selection (both, text, or label)\n  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\n\n  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\n  preserveHTML           : true,       // preserve html when selecting value\n  sortSelect             : false,      // sort selection on init\n\n  forceSelection         : true,       // force a choice on blur with search selection\n\n  allowAdditions         : false,      // whether multiple select should allow user added values\n  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\n\n  maxSelections          : false,      // When set to a number limits the number of selections to this count\n  useLabels              : true,       // whether multiple select should filter currently active selections from choices\n  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\n\n  showOnFocus            : true,       // show menu on focus\n  allowReselection       : false,      // whether current value should trigger callbacks when reselected\n  allowTab               : true,       // add tabindex to element\n  allowCategorySelection : false,      // allow elements with sub-menus to be selected\n\n  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\n\n  transition             : 'auto',     // auto transition will slide down or up based on direction\n  duration               : 200,        // duration of transition\n\n  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\n\n  // label settings on multi-select\n  label: {\n    transition : 'scale',\n    duration   : 200,\n    variation  : false\n  },\n\n  // delay before event\n  delay : {\n    hide   : 300,\n    show   : 200,\n    search : 20,\n    touch  : 50\n  },\n\n  /* Callbacks */\n  onChange      : function(value, text, $selected){},\n  onAdd         : function(value, text, $selected){},\n  onRemove      : function(value, text, $selected){},\n\n  onLabelSelect : function($selectedLabels){},\n  onLabelCreate : function(value, text) { return $(this); },\n  onLabelRemove : function(value) { return true; },\n  onNoResults   : function(searchTerm) { return true; },\n  onShow        : function(){},\n  onHide        : function(){},\n\n  /* Component */\n  name           : 'Dropdown',\n  namespace      : 'dropdown',\n\n  message: {\n    addResult     : 'Add <b>{term}</b>',\n    count         : '{count} selected',\n    maxSelections : 'Max {maxCount} selections',\n    noResults     : 'No results found.',\n    serverError   : 'There was an error contacting the server'\n  },\n\n  error : {\n    action          : 'You called a dropdown action that was not defined',\n    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\n    labels          : 'Allowing user additions currently requires the use of labels.',\n    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\n    method          : 'The method you called is not defined.',\n    noAPI           : 'The API module is required to load resources remotely',\n    noStorage       : 'Saving remote data requires session storage',\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\n  },\n\n  regExp : {\n    escape   : /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n    quote    : /\"/g\n  },\n\n  metadata : {\n    defaultText     : 'defaultText',\n    defaultValue    : 'defaultValue',\n    placeholderText : 'placeholder',\n    text            : 'text',\n    value           : 'value'\n  },\n\n  // property names for remote query\n  fields: {\n    remoteValues : 'results',  // grouping for api results\n    values       : 'values',   // grouping for all dropdown values\n    disabled     : 'disabled', // whether value should be disabled\n    name         : 'name',     // displayed dropdown text\n    value        : 'value',    // actual dropdown value\n    text         : 'text'      // displayed text when selected\n  },\n\n  keys : {\n    backspace  : 8,\n    delimiter  : 188, // comma\n    deleteKey  : 46,\n    enter      : 13,\n    escape     : 27,\n    pageUp     : 33,\n    pageDown   : 34,\n    leftArrow  : 37,\n    upArrow    : 38,\n    rightArrow : 39,\n    downArrow  : 40\n  },\n\n  selector : {\n    addition     : '.addition',\n    dropdown     : '.ui.dropdown',\n    hidden       : '.hidden',\n    icon         : '> .dropdown.icon',\n    input        : '> input[type=\"hidden\"], > select',\n    item         : '.item',\n    label        : '> .label',\n    remove       : '> .label > .delete.icon',\n    siblingLabel : '.label',\n    menu         : '.menu',\n    message      : '.message',\n    menuIcon     : '.dropdown.icon',\n    search       : 'input.search, .menu > .search > input, .menu input.search',\n    sizer        : '> input.sizer',\n    text         : '> .text:not(.icon)',\n    unselectable : '.disabled, .filtered'\n  },\n\n  className : {\n    active      : 'active',\n    addition    : 'addition',\n    animating   : 'animating',\n    disabled    : 'disabled',\n    empty       : 'empty',\n    dropdown    : 'ui dropdown',\n    filtered    : 'filtered',\n    hidden      : 'hidden transition',\n    item        : 'item',\n    label       : 'ui label',\n    loading     : 'loading',\n    menu        : 'menu',\n    message     : 'message',\n    multiple    : 'multiple',\n    placeholder : 'default',\n    sizer       : 'sizer',\n    search      : 'search',\n    selected    : 'selected',\n    selection   : 'selection',\n    upward      : 'upward',\n    visible     : 'visible'\n  }\n\n};\n\n/* Templates */\n$.fn.dropdown.settings.templates = {\n\n  // generates dropdown from select values\n  dropdown: function(select) {\n    var\n      placeholder = select.placeholder || false,\n      values      = select.values || {},\n      html        = ''\n    ;\n    html +=  '<i class=\"dropdown icon\"></i>';\n    if(select.placeholder) {\n      html += '<div class=\"default text\">' + placeholder + '</div>';\n    }\n    else {\n      html += '<div class=\"text\"></div>';\n    }\n    html += '<div class=\"menu\">';\n    $.each(select.values, function(index, option) {\n      html += (option.disabled)\n        ? '<div class=\"disabled item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n        : '<div class=\"item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n      ;\n    });\n    html += '</div>';\n    return html;\n  },\n\n  // generates just menu from select\n  menu: function(response, fields) {\n    var\n      values = response[fields.values] || {},\n      html   = ''\n    ;\n    $.each(values, function(index, option) {\n      var\n        maybeText = (option[fields.text])\n          ? 'data-text=\"' + option[fields.text] + '\"'\n          : '',\n        maybeDisabled = (option[fields.disabled])\n          ? 'disabled '\n          : ''\n      ;\n      html += '<div class=\"'+ maybeDisabled +'item\" data-value=\"' + option[fields.value] + '\"' + maybeText + '>'\n      html +=   option[fields.name];\n      html += '</div>';\n    });\n    return html;\n  },\n\n  // generates label for multiselect\n  label: function(value, text) {\n    return text + '<i class=\"delete icon\"></i>';\n  },\n\n\n  // generates messages like \"No results\"\n  message: function(message) {\n    return message;\n  },\n\n  // generates user addition to selection menu\n  addition: function(choice) {\n    return choice;\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Embed\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.embed = function(parameters) {\n\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.embed.settings, parameters)\n          : $.extend({}, $.fn.embed.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        sources         = settings.sources,\n        error           = settings.error,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        templates       = settings.templates,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $window         = $(window),\n        $module         = $(this),\n        $placeholder    = $module.find(selector.placeholder),\n        $icon           = $module.find(selector.icon),\n        $embed          = $module.find(selector.embed),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing embed');\n          module.determine.autoplay();\n          module.create();\n          module.bind.events();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance of embed');\n          module.reset();\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $placeholder = $module.find(selector.placeholder);\n          $icon        = $module.find(selector.icon);\n          $embed       = $module.find(selector.embed);\n        },\n\n        bind: {\n          events: function() {\n            if( module.has.placeholder() ) {\n              module.debug('Adding placeholder events');\n              $module\n                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\n                .on('click' + eventNamespace, selector.icon, module.createAndShow)\n              ;\n            }\n          }\n        },\n\n        create: function() {\n          var\n            placeholder = module.get.placeholder()\n          ;\n          if(placeholder) {\n            module.createPlaceholder();\n          }\n          else {\n            module.createAndShow();\n          }\n        },\n\n        createPlaceholder: function(placeholder) {\n          var\n            icon  = module.get.icon(),\n            url   = module.get.url(),\n            embed = module.generate.embed(url)\n          ;\n          placeholder = placeholder || module.get.placeholder();\n          $module.html( templates.placeholder(placeholder, icon) );\n          module.debug('Creating placeholder for embed', placeholder, icon);\n        },\n\n        createEmbed: function(url) {\n          module.refresh();\n          url = url || module.get.url();\n          $embed = $('<div/>')\n            .addClass(className.embed)\n            .html( module.generate.embed(url) )\n            .appendTo($module)\n          ;\n          settings.onCreate.call(element, url);\n          module.debug('Creating embed object', $embed);\n        },\n\n        changeEmbed: function(url) {\n          $embed\n            .html( module.generate.embed(url) )\n          ;\n        },\n\n        createAndShow: function() {\n          module.createEmbed();\n          module.show();\n        },\n\n        // sets new embed\n        change: function(source, id, url) {\n          module.debug('Changing video to ', source, id, url);\n          $module\n            .data(metadata.source, source)\n            .data(metadata.id, id)\n          ;\n          if(url) {\n            $module.data(metadata.url, url);\n          }\n          else {\n            $module.removeData(metadata.url);\n          }\n          if(module.has.embed()) {\n            module.changeEmbed();\n          }\n          else {\n            module.create();\n          }\n        },\n\n        // clears embed\n        reset: function() {\n          module.debug('Clearing embed and showing placeholder');\n          module.remove.active();\n          module.remove.embed();\n          module.showPlaceholder();\n          settings.onReset.call(element);\n        },\n\n        // shows current embed\n        show: function() {\n          module.debug('Showing embed');\n          module.set.active();\n          settings.onDisplay.call(element);\n        },\n\n        hide: function() {\n          module.debug('Hiding embed');\n          module.showPlaceholder();\n        },\n\n        showPlaceholder: function() {\n          module.debug('Showing placeholder image');\n          module.remove.active();\n          settings.onPlaceholderDisplay.call(element);\n        },\n\n        get: {\n          id: function() {\n            return settings.id || $module.data(metadata.id);\n          },\n          placeholder: function() {\n            return settings.placeholder || $module.data(metadata.placeholder);\n          },\n          icon: function() {\n            return (settings.icon)\n              ? settings.icon\n              : ($module.data(metadata.icon) !== undefined)\n                ? $module.data(metadata.icon)\n                : module.determine.icon()\n            ;\n          },\n          source: function(url) {\n            return (settings.source)\n              ? settings.source\n              : ($module.data(metadata.source) !== undefined)\n                ? $module.data(metadata.source)\n                : module.determine.source()\n            ;\n          },\n          type: function() {\n            var source = module.get.source();\n            return (sources[source] !== undefined)\n              ? sources[source].type\n              : false\n            ;\n          },\n          url: function() {\n            return (settings.url)\n              ? settings.url\n              : ($module.data(metadata.url) !== undefined)\n                ? $module.data(metadata.url)\n                : module.determine.url()\n            ;\n          }\n        },\n\n        determine: {\n          autoplay: function() {\n            if(module.should.autoplay()) {\n              settings.autoplay = true;\n            }\n          },\n          source: function(url) {\n            var\n              matchedSource = false\n            ;\n            url = url || module.get.url();\n            if(url) {\n              $.each(sources, function(name, source) {\n                if(url.search(source.domain) !== -1) {\n                  matchedSource = name;\n                  return false;\n                }\n              });\n            }\n            return matchedSource;\n          },\n          icon: function() {\n            var\n              source = module.get.source()\n            ;\n            return (sources[source] !== undefined)\n              ? sources[source].icon\n              : false\n            ;\n          },\n          url: function() {\n            var\n              id     = settings.id     || $module.data(metadata.id),\n              source = settings.source || $module.data(metadata.source),\n              url\n            ;\n            url = (sources[source] !== undefined)\n              ? sources[source].url.replace('{id}', id)\n              : false\n            ;\n            if(url) {\n              $module.data(metadata.url, url);\n            }\n            return url;\n          }\n        },\n\n\n        set: {\n          active: function() {\n            $module.addClass(className.active);\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          embed: function() {\n            $embed.empty();\n          }\n        },\n\n        encode: {\n          parameters: function(parameters) {\n            var\n              urlString = [],\n              index\n            ;\n            for (index in parameters) {\n              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\n            }\n            return urlString.join('&amp;');\n          }\n        },\n\n        generate: {\n          embed: function(url) {\n            module.debug('Generating embed html');\n            var\n              source = module.get.source(),\n              html,\n              parameters\n            ;\n            url = module.get.url(url);\n            if(url) {\n              parameters = module.generate.parameters(source);\n              html       = templates.iframe(url, parameters);\n            }\n            else {\n              module.error(error.noURL, $module);\n            }\n            return html;\n          },\n          parameters: function(source, extraParameters) {\n            var\n              parameters = (sources[source] && sources[source].parameters !== undefined)\n                ? sources[source].parameters(settings)\n                : {}\n            ;\n            extraParameters = extraParameters || settings.parameters;\n            if(extraParameters) {\n              parameters = $.extend({}, parameters, extraParameters);\n            }\n            parameters = settings.onEmbed(parameters);\n            return module.encode.parameters(parameters);\n          }\n        },\n\n        has: {\n          embed: function() {\n            return ($embed.length > 0);\n          },\n          placeholder: function() {\n            return settings.placeholder || $module.data(metadata.placeholder);\n          }\n        },\n\n        should: {\n          autoplay: function() {\n            return (settings.autoplay === 'auto')\n              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\n              : settings.autoplay\n            ;\n          }\n        },\n\n        is: {\n          video: function() {\n            return module.get.type() == 'video';\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.embed.settings = {\n\n  name        : 'Embed',\n  namespace   : 'embed',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  icon     : false,\n  source   : false,\n  url      : false,\n  id       : false,\n\n  // standard video settings\n  autoplay  : 'auto',\n  color     : '#444444',\n  hd        : true,\n  brandedUI : false,\n\n  // additional parameters to include with the embed\n  parameters: false,\n\n  onDisplay            : function() {},\n  onPlaceholderDisplay : function() {},\n  onReset              : function() {},\n  onCreate             : function(url) {},\n  onEmbed              : function(parameters) {\n    return parameters;\n  },\n\n  metadata    : {\n    id          : 'id',\n    icon        : 'icon',\n    placeholder : 'placeholder',\n    source      : 'source',\n    url         : 'url'\n  },\n\n  error : {\n    noURL  : 'No URL specified',\n    method : 'The method you called is not defined'\n  },\n\n  className : {\n    active : 'active',\n    embed  : 'embed'\n  },\n\n  selector : {\n    embed       : '.embed',\n    placeholder : '.placeholder',\n    icon        : '.icon'\n  },\n\n  sources: {\n    youtube: {\n      name   : 'youtube',\n      type   : 'video',\n      icon   : 'video play',\n      domain : 'youtube.com',\n      url    : '//www.youtube.com/embed/{id}',\n      parameters: function(settings) {\n        return {\n          autohide       : !settings.brandedUI,\n          autoplay       : settings.autoplay,\n          color          : settings.color || undefined,\n          hq             : settings.hd,\n          jsapi          : settings.api,\n          modestbranding : !settings.brandedUI\n        };\n      }\n    },\n    vimeo: {\n      name   : 'vimeo',\n      type   : 'video',\n      icon   : 'video play',\n      domain : 'vimeo.com',\n      url    : '//player.vimeo.com/video/{id}',\n      parameters: function(settings) {\n        return {\n          api      : settings.api,\n          autoplay : settings.autoplay,\n          byline   : settings.brandedUI,\n          color    : settings.color || undefined,\n          portrait : settings.brandedUI,\n          title    : settings.brandedUI\n        };\n      }\n    }\n  },\n\n  templates: {\n    iframe : function(url, parameters) {\n      var src = url;\n      if (parameters) {\n          src += '?' + parameters;\n      }\n      return ''\n        + '<iframe src=\"' + src + '\"'\n        + ' width=\"100%\" height=\"100%\"'\n        + ' frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n      ;\n    },\n    placeholder : function(image, icon) {\n      var\n        html = ''\n      ;\n      if(icon) {\n        html += '<i class=\"' + icon + ' icon\"></i>';\n      }\n      if(image) {\n        html += '<img class=\"placeholder\" src=\"' + image + '\">';\n      }\n      return html;\n    }\n  },\n\n  // NOT YET IMPLEMENTED\n  api     : false,\n  onPause : function() {},\n  onPlay  : function() {},\n  onStop  : function() {}\n\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Modal\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.modal = function(parameters) {\n  var\n    $allModules    = $(this),\n    $window        = $(window),\n    $document      = $(document),\n    $body          = $('body'),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings    = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\n          : $.extend({}, $.fn.modal.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $close          = $module.find(selector.close),\n\n        $allModals,\n        $otherModals,\n        $focusedElement,\n        $dimmable,\n        $dimmer,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        ignoreRepeatedEvents = false,\n\n        elementEventNamespace,\n        id,\n        observer,\n        module\n      ;\n      module  = {\n\n        initialize: function() {\n          module.verbose('Initializing dimmer', $context);\n\n          module.create.id();\n          module.create.dimmer();\n          module.refreshModals();\n\n          module.bind.events();\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of modal');\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        create: {\n          dimmer: function() {\n            var\n              defaultSettings = {\n                debug      : settings.debug,\n                dimmerName : 'modals',\n                duration   : {\n                  show     : settings.duration,\n                  hide     : settings.duration\n                }\n              },\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\n            ;\n            if(settings.inverted) {\n              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\n                ? dimmerSettings.variation + ' inverted'\n                : 'inverted'\n              ;\n            }\n            if($.fn.dimmer === undefined) {\n              module.error(error.dimmer);\n              return;\n            }\n            module.debug('Creating dimmer with settings', dimmerSettings);\n            $dimmable = $context.dimmer(dimmerSettings);\n            if(settings.detachable) {\n              module.verbose('Modal is detachable, moving content into dimmer');\n              $dimmable.dimmer('add content', $module);\n            }\n            else {\n              module.set.undetached();\n            }\n            if(settings.blurring) {\n              $dimmable.addClass(className.blurring);\n            }\n            $dimmer = $dimmable.dimmer('get dimmer');\n          },\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\n            elementEventNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous modal');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n          $window.off(elementEventNamespace);\n          $dimmer.off(elementEventNamespace);\n          $close.off(eventNamespace);\n          $context.dimmer('destroy');\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, refreshing');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        refresh: function() {\n          module.remove.scrolling();\n          module.cacheSizes();\n          module.set.screenHeight();\n          module.set.type();\n          module.set.position();\n        },\n\n        refreshModals: function() {\n          $otherModals = $module.siblings(selector.modal);\n          $allModals   = $otherModals.add($module);\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.length > 0) {\n            module.debug('Attaching modal events to element', selector, event);\n            $toggle\n              .off(eventNamespace)\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound, selector);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Attaching events');\n            $module\n              .on('click' + eventNamespace, selector.close, module.event.close)\n              .on('click' + eventNamespace, selector.approve, module.event.approve)\n              .on('click' + eventNamespace, selector.deny, module.event.deny)\n            ;\n            $window\n              .on('resize' + elementEventNamespace, module.event.resize)\n            ;\n          }\n        },\n\n        get: {\n          id: function() {\n            return (Math.random().toString(16) + '000000000').substr(2,8);\n          }\n        },\n\n        event: {\n          approve: function() {\n            if(ignoreRepeatedEvents || settings.onApprove.call(element, $(this)) === false) {\n              module.verbose('Approve callback returned false cancelling hide');\n              return;\n            }\n            ignoreRepeatedEvents = true;\n            module.hide(function() {\n              ignoreRepeatedEvents = false;\n            });\n          },\n          deny: function() {\n            if(ignoreRepeatedEvents || settings.onDeny.call(element, $(this)) === false) {\n              module.verbose('Deny callback returned false cancelling hide');\n              return;\n            }\n            ignoreRepeatedEvents = true;\n            module.hide(function() {\n              ignoreRepeatedEvents = false;\n            });\n          },\n          close: function() {\n            module.hide();\n          },\n          click: function(event) {\n            var\n              $target   = $(event.target),\n              isInModal = ($target.closest(selector.modal).length > 0),\n              isInDOM   = $.contains(document.documentElement, event.target)\n            ;\n            if(!isInModal && isInDOM) {\n              module.debug('Dimmer clicked, hiding all modals');\n              if( module.is.active() ) {\n                module.remove.clickaway();\n                if(settings.allowMultiple) {\n                  module.hide();\n                }\n                else {\n                  module.hideAll();\n                }\n              }\n            }\n          },\n          debounce: function(method, delay) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(method, delay);\n          },\n          keyboard: function(event) {\n            var\n              keyCode   = event.which,\n              escapeKey = 27\n            ;\n            if(keyCode == escapeKey) {\n              if(settings.closable) {\n                module.debug('Escape key pressed hiding modal');\n                module.hide();\n              }\n              else {\n                module.debug('Escape key pressed, but closable is set to false');\n              }\n              event.preventDefault();\n            }\n          },\n          resize: function() {\n            if( $dimmable.dimmer('is active') ) {\n              requestAnimationFrame(module.refresh);\n            }\n          }\n        },\n\n        toggle: function() {\n          if( module.is.active() || module.is.animating() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.refreshModals();\n          module.showModal(callback);\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.refreshModals();\n          module.hideModal(callback);\n        },\n\n        showModal: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.animating() || !module.is.active() ) {\n\n            module.showDimmer();\n            module.cacheSizes();\n            module.set.position();\n            module.set.screenHeight();\n            module.set.type();\n            module.set.clickaway();\n\n            if( !settings.allowMultiple && module.others.active() ) {\n              module.hideOthers(module.showModal);\n            }\n            else {\n              settings.onShow.call(element);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                module.debug('Showing modal with css animations');\n                $module\n                  .transition({\n                    debug       : settings.debug,\n                    animation   : settings.transition + ' in',\n                    queue       : settings.queue,\n                    duration    : settings.duration,\n                    useFailSafe : true,\n                    onComplete : function() {\n                      settings.onVisible.apply(element);\n                      if(settings.keyboardShortcuts) {\n                        module.add.keyboardShortcuts();\n                      }\n                      module.save.focus();\n                      module.set.active();\n                      if(settings.autofocus) {\n                        module.set.autofocus();\n                      }\n                      callback();\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.noTransition);\n              }\n            }\n          }\n          else {\n            module.debug('Modal is already visible');\n          }\n        },\n\n        hideModal: function(callback, keepDimmed) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Hiding modal');\n          if(settings.onHide.call(element, $(this)) === false) {\n            module.verbose('Hide callback returned false cancelling hide');\n            return;\n          }\n\n          if( module.is.animating() || module.is.active() ) {\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.remove.active();\n              $module\n                .transition({\n                  debug       : settings.debug,\n                  animation   : settings.transition + ' out',\n                  queue       : settings.queue,\n                  duration    : settings.duration,\n                  useFailSafe : true,\n                  onStart     : function() {\n                    if(!module.others.active() && !keepDimmed) {\n                      module.hideDimmer();\n                    }\n                    if(settings.keyboardShortcuts) {\n                      module.remove.keyboardShortcuts();\n                    }\n                  },\n                  onComplete : function() {\n                    settings.onHidden.call(element);\n                    module.restore.focus();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          }\n        },\n\n        showDimmer: function() {\n          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\n            module.debug('Showing dimmer');\n            $dimmable.dimmer('show');\n          }\n          else {\n            module.debug('Dimmer already visible');\n          }\n        },\n\n        hideDimmer: function() {\n          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\n            $dimmable.dimmer('hide', function() {\n              module.remove.clickaway();\n              module.remove.screenHeight();\n            });\n          }\n          else {\n            module.debug('Dimmer is not visible cannot hide');\n            return;\n          }\n        },\n\n        hideAll: function(callback) {\n          var\n            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $visibleModals.length > 0 ) {\n            module.debug('Hiding all visible modals');\n            module.hideDimmer();\n            $visibleModals\n              .modal('hide modal', callback)\n            ;\n          }\n        },\n\n        hideOthers: function(callback) {\n          var\n            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $visibleModals.length > 0 ) {\n            module.debug('Hiding other modals', $otherModals);\n            $visibleModals\n              .modal('hide modal', callback, true)\n            ;\n          }\n        },\n\n        others: {\n          active: function() {\n            return ($otherModals.filter('.' + className.active).length > 0);\n          },\n          animating: function() {\n            return ($otherModals.filter('.' + className.animating).length > 0);\n          }\n        },\n\n\n        add: {\n          keyboardShortcuts: function() {\n            module.verbose('Adding keyboard shortcuts');\n            $document\n              .on('keyup' + eventNamespace, module.event.keyboard)\n            ;\n          }\n        },\n\n        save: {\n          focus: function() {\n            $focusedElement = $(document.activeElement).blur();\n          }\n        },\n\n        restore: {\n          focus: function() {\n            if($focusedElement && $focusedElement.length > 0) {\n              $focusedElement.focus();\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          clickaway: function() {\n            if(settings.closable) {\n              $dimmer\n                .off('click' + elementEventNamespace)\n              ;\n            }\n          },\n          bodyStyle: function() {\n            if($body.attr('style') === '') {\n              module.verbose('Removing style attribute');\n              $body.removeAttr('style');\n            }\n          },\n          screenHeight: function() {\n            module.debug('Removing page height');\n            $body\n              .css('height', '')\n            ;\n          },\n          keyboardShortcuts: function() {\n            module.verbose('Removing keyboard shortcuts');\n            $document\n              .off('keyup' + eventNamespace)\n            ;\n          },\n          scrolling: function() {\n            $dimmable.removeClass(className.scrolling);\n            $module.removeClass(className.scrolling);\n          }\n        },\n\n        cacheSizes: function() {\n          var\n            modalHeight = $module.outerHeight()\n          ;\n          if(module.cache === undefined || modalHeight !== 0) {\n            module.cache = {\n              pageHeight    : $(document).outerHeight(),\n              height        : modalHeight + settings.offset,\n              contextHeight : (settings.context == 'body')\n                ? $(window).height()\n                : $dimmable.height()\n            };\n          }\n          module.debug('Caching modal and container sizes', module.cache);\n        },\n\n        can: {\n          fit: function() {\n            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          animating: function() {\n            return $module.transition('is supported')\n              ? $module.transition('is animating')\n              : $module.is(':visible')\n            ;\n          },\n          scrolling: function() {\n            return $dimmable.hasClass(className.scrolling);\n          },\n          modernBrowser: function() {\n            // appName for IE11 reports 'Netscape' can no longer use\n            return !(window.ActiveXObject || \"ActiveXObject\" in window);\n          }\n        },\n\n        set: {\n          autofocus: function() {\n            var\n              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\n              $autofocus = $inputs.filter('[autofocus]'),\n              $input     = ($autofocus.length > 0)\n                ? $autofocus.first()\n                : $inputs.first()\n            ;\n            if($input.length > 0) {\n              $input.focus();\n            }\n          },\n          clickaway: function() {\n            if(settings.closable) {\n              $dimmer\n                .on('click' + elementEventNamespace, module.event.click)\n              ;\n            }\n          },\n          screenHeight: function() {\n            if( module.can.fit() ) {\n              $body.css('height', '');\n            }\n            else {\n              module.debug('Modal is taller than page content, resizing page height');\n              $body\n                .css('height', module.cache.height + (settings.padding * 2) )\n              ;\n            }\n          },\n          active: function() {\n            $module.addClass(className.active);\n          },\n          scrolling: function() {\n            $dimmable.addClass(className.scrolling);\n            $module.addClass(className.scrolling);\n          },\n          type: function() {\n            if(module.can.fit()) {\n              module.verbose('Modal fits on screen');\n              if(!module.others.active() && !module.others.animating()) {\n                module.remove.scrolling();\n              }\n            }\n            else {\n              module.verbose('Modal cannot fit on screen setting to scrolling');\n              module.set.scrolling();\n            }\n          },\n          position: function() {\n            module.verbose('Centering modal on page', module.cache);\n            if(module.can.fit()) {\n              $module\n                .css({\n                  top: '',\n                  marginTop: -(module.cache.height / 2)\n                })\n              ;\n            }\n            else {\n              $module\n                .css({\n                  marginTop : '',\n                  top       : $document.scrollTop()\n                })\n              ;\n            }\n          },\n          undetached: function() {\n            $dimmable.addClass(className.undetached);\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.modal.settings = {\n\n  name           : 'Modal',\n  namespace      : 'modal',\n\n  silent         : false,\n  debug          : false,\n  verbose        : false,\n  performance    : true,\n\n  observeChanges : false,\n\n  allowMultiple  : false,\n  detachable     : true,\n  closable       : true,\n  autofocus      : true,\n\n  inverted       : false,\n  blurring       : false,\n\n  dimmerSettings : {\n    closable : false,\n    useCSS   : true\n  },\n\n  // whether to use keyboard shortcuts\n  keyboardShortcuts: true,\n\n  context    : 'body',\n\n  queue      : false,\n  duration   : 500,\n  offset     : 0,\n  transition : 'scale',\n\n  // padding with edge of page\n  padding    : 50,\n\n  // called before show animation\n  onShow     : function(){},\n\n  // called after show animation\n  onVisible  : function(){},\n\n  // called before hide animation\n  onHide     : function(){ return true; },\n\n  // called after hide animation\n  onHidden   : function(){},\n\n  // called after approve selector match\n  onApprove  : function(){ return true; },\n\n  // called after deny selector match\n  onDeny     : function(){ return true; },\n\n  selector    : {\n    close    : '> .close',\n    approve  : '.actions .positive, .actions .approve, .actions .ok',\n    deny     : '.actions .negative, .actions .deny, .actions .cancel',\n    modal    : '.ui.modal'\n  },\n  error : {\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\n    method    : 'The method you called is not defined.',\n    notFound  : 'The element you specified could not be found'\n  },\n  className : {\n    active     : 'active',\n    animating  : 'animating',\n    blurring   : 'blurring',\n    scrolling  : 'scrolling',\n    undetached : 'undetached'\n  }\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Nag\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.nag = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.nag.settings, parameters)\n          : $.extend({}, $.fn.nag.settings),\n\n        className       = settings.className,\n        selector        = settings.selector,\n        error           = settings.error,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        $close          = $module.find(selector.close),\n        $context        = (settings.context)\n          ? $(settings.context)\n          : $('body'),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        moduleOffset,\n        moduleHeight,\n\n        contextWidth,\n        contextHeight,\n        contextOffset,\n\n        yOffset,\n        yPosition,\n\n        timer,\n        module,\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); }\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing element');\n\n          $module\n            .on('click' + eventNamespace, selector.close, module.dismiss)\n            .data(moduleNamespace, module)\n          ;\n\n          if(settings.detachable && $module.parent()[0] !== $context[0]) {\n            $module\n              .detach()\n              .prependTo($context)\n            ;\n          }\n\n          if(settings.displayTime > 0) {\n            setTimeout(module.hide, settings.displayTime);\n          }\n          module.show();\n        },\n\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        show: function() {\n          if( module.should.show() && !$module.is(':visible') ) {\n            module.debug('Showing nag', settings.animation.show);\n            if(settings.animation.show == 'fade') {\n              $module\n                .fadeIn(settings.duration, settings.easing)\n              ;\n            }\n            else {\n              $module\n                .slideDown(settings.duration, settings.easing)\n              ;\n            }\n          }\n        },\n\n        hide: function() {\n          module.debug('Showing nag', settings.animation.hide);\n          if(settings.animation.show == 'fade') {\n            $module\n              .fadeIn(settings.duration, settings.easing)\n            ;\n          }\n          else {\n            $module\n              .slideUp(settings.duration, settings.easing)\n            ;\n          }\n        },\n\n        onHide: function() {\n          module.debug('Removing nag', settings.animation.hide);\n          $module.remove();\n          if (settings.onHide) {\n            settings.onHide();\n          }\n        },\n\n        dismiss: function(event) {\n          if(settings.storageMethod) {\n            module.storage.set(settings.key, settings.value);\n          }\n          module.hide();\n          event.stopImmediatePropagation();\n          event.preventDefault();\n        },\n\n        should: {\n          show: function() {\n            if(settings.persist) {\n              module.debug('Persistent nag is set, can show nag');\n              return true;\n            }\n            if( module.storage.get(settings.key) != settings.value.toString() ) {\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\n              return true;\n            }\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\n            return false;\n          }\n        },\n\n        get: {\n          storageOptions: function() {\n            var\n              options = {}\n            ;\n            if(settings.expires) {\n              options.expires = settings.expires;\n            }\n            if(settings.domain) {\n              options.domain = settings.domain;\n            }\n            if(settings.path) {\n              options.path = settings.path;\n            }\n            return options;\n          }\n        },\n\n        clear: function() {\n          module.storage.remove(settings.key);\n        },\n\n        storage: {\n          set: function(key, value) {\n            var\n              options = module.get.storageOptions()\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              window.localStorage.setItem(key, value);\n              module.debug('Value stored using local storage', key, value);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              window.sessionStorage.setItem(key, value);\n              module.debug('Value stored using session storage', key, value);\n            }\n            else if($.cookie !== undefined) {\n              $.cookie(key, value, options);\n              module.debug('Value stored using cookie', key, value, options);\n            }\n            else {\n              module.error(error.noCookieStorage);\n              return;\n            }\n          },\n          get: function(key, value) {\n            var\n              storedValue\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              storedValue = window.localStorage.getItem(key);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              storedValue = window.sessionStorage.getItem(key);\n            }\n            // get by cookie\n            else if($.cookie !== undefined) {\n              storedValue = $.cookie(key);\n            }\n            else {\n              module.error(error.noCookieStorage);\n            }\n            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\n              storedValue = undefined;\n            }\n            return storedValue;\n          },\n          remove: function(key) {\n            var\n              options = module.get.storageOptions()\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              window.localStorage.removeItem(key);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              window.sessionStorage.removeItem(key);\n            }\n            // store by cookie\n            else if($.cookie !== undefined) {\n              $.removeCookie(key, options);\n            }\n            else {\n              module.error(error.noStorage);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.nag.settings = {\n\n  name        : 'Nag',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  namespace   : 'Nag',\n\n  // allows cookie to be overridden\n  persist     : false,\n\n  // set to zero to require manually dismissal, otherwise hides on its own\n  displayTime : 0,\n\n  animation   : {\n    show : 'slide',\n    hide : 'slide'\n  },\n\n  context       : false,\n  detachable    : false,\n\n  expires       : 30,\n  domain        : false,\n  path          : '/',\n\n  // type of storage to use\n  storageMethod : 'cookie',\n\n  // value to store in dismissed localstorage/cookie\n  key           : 'nag',\n  value         : 'dismiss',\n\n  error: {\n    noCookieStorage : '$.cookie is not included. A storage solution is required.',\n    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\n    method          : 'The method you called is not defined.'\n  },\n\n  className     : {\n    bottom : 'bottom',\n    fixed  : 'fixed'\n  },\n\n  selector      : {\n    close : '.close.icon'\n  },\n\n  speed         : 500,\n  easing        : 'easeOutQuad',\n\n  onHide: function() {}\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  }\n});\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Popup\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.popup = function(parameters) {\n  var\n    $allModules    = $(this),\n    $document      = $(document),\n    $window        = $(window),\n    $body          = $('body'),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = (true),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\n          : $.extend({}, $.fn.popup.settings),\n\n        selector           = settings.selector,\n        className          = settings.className,\n        error              = settings.error,\n        metadata           = settings.metadata,\n        namespace          = settings.namespace,\n\n        eventNamespace     = '.' + settings.namespace,\n        moduleNamespace    = 'module-' + namespace,\n\n        $module            = $(this),\n        $context           = $(settings.context),\n        $scrollContext     = $(settings.scrollContext),\n        $boundary          = $(settings.boundary),\n        $target            = (settings.target)\n          ? $(settings.target)\n          : $module,\n\n        $popup,\n        $offsetParent,\n\n        searchDepth        = 0,\n        triedPositions     = false,\n        openedWithTouch    = false,\n\n        element            = this,\n        instance           = $module.data(moduleNamespace),\n\n        documentObserver,\n        elementNamespace,\n        id,\n        module\n      ;\n\n      module = {\n\n        // binds events\n        initialize: function() {\n          module.debug('Initializing', $module);\n          module.createID();\n          module.bind.events();\n          if(!module.exists() && settings.preserve) {\n            module.create();\n          }\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            documentObserver = new MutationObserver(module.event.documentChanged);\n            documentObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', documentObserver);\n          }\n        },\n\n        refresh: function() {\n          if(settings.popup) {\n            $popup = $(settings.popup).eq(0);\n          }\n          else {\n            if(settings.inline) {\n              $popup = $target.nextAll(selector.popup).eq(0);\n              settings.popup = $popup;\n            }\n          }\n          if(settings.popup) {\n            $popup.addClass(className.loading);\n            $offsetParent = module.get.offsetParent();\n            $popup.removeClass(className.loading);\n            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\n              module.debug('Moving popup to the same offset parent as activating element');\n              $popup\n                .detach()\n                .appendTo($offsetParent)\n              ;\n            }\n          }\n          else {\n            $offsetParent = (settings.inline)\n              ? module.get.offsetParent($target)\n              : module.has.popup()\n                ? module.get.offsetParent($popup)\n                : $body\n            ;\n          }\n          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\n            module.debug('Setting page as offset parent');\n            $offsetParent = $body;\n          }\n          if( module.get.variation() ) {\n            module.set.variation();\n          }\n        },\n\n        reposition: function() {\n          module.refresh();\n          module.set.position();\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous module');\n          if(documentObserver) {\n            documentObserver.disconnect();\n          }\n          // remove element only if was created dynamically\n          if($popup && !settings.preserve) {\n            module.removePopup();\n          }\n          // clear all timeouts\n          clearTimeout(module.hideTimer);\n          clearTimeout(module.showTimer);\n          // remove events\n          module.unbind.close();\n          module.unbind.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        event: {\n          start:  function(event) {\n            var\n              delay = ($.isPlainObject(settings.delay))\n                ? settings.delay.show\n                : settings.delay\n            ;\n            clearTimeout(module.hideTimer);\n            if(!openedWithTouch) {\n              module.showTimer = setTimeout(module.show, delay);\n            }\n          },\n          end:  function() {\n            var\n              delay = ($.isPlainObject(settings.delay))\n                ? settings.delay.hide\n                : settings.delay\n            ;\n            clearTimeout(module.showTimer);\n            module.hideTimer = setTimeout(module.hide, delay);\n          },\n          touchstart: function(event) {\n            openedWithTouch = true;\n            module.show();\n          },\n          resize: function() {\n            if( module.is.visible() ) {\n              module.set.position();\n            }\n          },\n          documentChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          hideGracefully: function(event) {\n            var\n              $target = $(event.target),\n              isInDOM = $.contains(document.documentElement, event.target),\n              inPopup = ($target.closest(selector.popup).length > 0)\n            ;\n            // don't close on clicks inside popup\n            if(event && !inPopup && isInDOM) {\n              module.debug('Click occurred outside popup hiding popup');\n              module.hide();\n            }\n            else {\n              module.debug('Click was inside popup, keeping popup open');\n            }\n          }\n        },\n\n        // generates popup html from metadata\n        create: function() {\n          var\n            html      = module.get.html(),\n            title     = module.get.title(),\n            content   = module.get.content()\n          ;\n\n          if(html || content || title) {\n            module.debug('Creating pop-up html');\n            if(!html) {\n              html = settings.templates.popup({\n                title   : title,\n                content : content\n              });\n            }\n            $popup = $('<div/>')\n              .addClass(className.popup)\n              .data(metadata.activator, $module)\n              .html(html)\n            ;\n            if(settings.inline) {\n              module.verbose('Inserting popup element inline', $popup);\n              $popup\n                .insertAfter($module)\n              ;\n            }\n            else {\n              module.verbose('Appending popup element to body', $popup);\n              $popup\n                .appendTo( $context )\n              ;\n            }\n            module.refresh();\n            module.set.variation();\n\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n            settings.onCreate.call($popup, element);\n          }\n          else if($target.next(selector.popup).length !== 0) {\n            module.verbose('Pre-existing popup found');\n            settings.inline = true;\n            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\n            module.refresh();\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n          }\n          else if(settings.popup) {\n            $(settings.popup).data(metadata.activator, $module);\n            module.verbose('Used popup specified in settings');\n            module.refresh();\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n          }\n          else {\n            module.debug('No content specified skipping display', element);\n          }\n        },\n\n        createID: function() {\n          id = (Math.random().toString(16) + '000000000').substr(2, 8);\n          elementNamespace = '.' + id;\n          module.verbose('Creating unique id for element', id);\n        },\n\n        // determines popup state\n        toggle: function() {\n          module.debug('Toggling pop-up');\n          if( module.is.hidden() ) {\n            module.debug('Popup is hidden, showing pop-up');\n            module.unbind.close();\n            module.show();\n          }\n          else {\n            module.debug('Popup is visible, hiding pop-up');\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = callback || function(){};\n          module.debug('Showing pop-up', settings.transition);\n          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\n            if( !module.exists() ) {\n              module.create();\n            }\n            if(settings.onShow.call($popup, element) === false) {\n              module.debug('onShow callback returned false, cancelling popup animation');\n              return;\n            }\n            else if(!settings.preserve && !settings.popup) {\n              module.refresh();\n            }\n            if( $popup && module.set.position() ) {\n              module.save.conditions();\n              if(settings.exclusive) {\n                module.hideAll();\n              }\n              module.animate.show(callback);\n            }\n          }\n        },\n\n\n        hide: function(callback) {\n          callback = callback || function(){};\n          if( module.is.visible() || module.is.animating() ) {\n            if(settings.onHide.call($popup, element) === false) {\n              module.debug('onHide callback returned false, cancelling popup animation');\n              return;\n            }\n            module.remove.visible();\n            module.unbind.close();\n            module.restore.conditions();\n            module.animate.hide(callback);\n          }\n        },\n\n        hideAll: function() {\n          $(selector.popup)\n            .filter('.' + className.visible)\n            .each(function() {\n              $(this)\n                .data(metadata.activator)\n                  .popup('hide')\n              ;\n            })\n          ;\n        },\n        exists: function() {\n          if(!$popup) {\n            return false;\n          }\n          if(settings.inline || settings.popup) {\n            return ( module.has.popup() );\n          }\n          else {\n            return ( $popup.closest($context).length >= 1 )\n              ? true\n              : false\n            ;\n          }\n        },\n\n        removePopup: function() {\n          if( module.has.popup() && !settings.popup) {\n            module.debug('Removing popup', $popup);\n            $popup.remove();\n            $popup = undefined;\n            settings.onRemove.call($popup, element);\n          }\n        },\n\n        save: {\n          conditions: function() {\n            module.cache = {\n              title: $module.attr('title')\n            };\n            if (module.cache.title) {\n              $module.removeAttr('title');\n            }\n            module.verbose('Saving original attributes', module.cache.title);\n          }\n        },\n        restore: {\n          conditions: function() {\n            if(module.cache && module.cache.title) {\n              $module.attr('title', module.cache.title);\n              module.verbose('Restoring original attributes', module.cache.title);\n            }\n            return true;\n          }\n        },\n        supports: {\n          svg: function() {\n            return (typeof SVGGraphicsElement === undefined);\n          }\n        },\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback) ? callback : function(){};\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.set.visible();\n              $popup\n                .transition({\n                  animation  : settings.transition + ' in',\n                  queue      : false,\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    module.bind.close();\n                    callback.call($popup, element);\n                    settings.onVisible.call($popup, element);\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback) ? callback : function(){};\n            module.debug('Hiding pop-up');\n            if(settings.onHide.call($popup, element) === false) {\n              module.debug('onHide callback returned false, cancelling popup animation');\n              return;\n            }\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $popup\n                .transition({\n                  animation  : settings.transition + ' out',\n                  queue      : false,\n                  duration   : settings.duration,\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  onComplete : function() {\n                    module.reset();\n                    callback.call($popup, element);\n                    settings.onHidden.call($popup, element);\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          }\n        },\n\n        change: {\n          content: function(html) {\n            $popup.html(html);\n          }\n        },\n\n        get: {\n          html: function() {\n            $module.removeData(metadata.html);\n            return $module.data(metadata.html) || settings.html;\n          },\n          title: function() {\n            $module.removeData(metadata.title);\n            return $module.data(metadata.title) || settings.title;\n          },\n          content: function() {\n            $module.removeData(metadata.content);\n            return $module.data(metadata.content) || $module.attr('title') || settings.content;\n          },\n          variation: function() {\n            $module.removeData(metadata.variation);\n            return $module.data(metadata.variation) || settings.variation;\n          },\n          popup: function() {\n            return $popup;\n          },\n          popupOffset: function() {\n            return $popup.offset();\n          },\n          calculations: function() {\n            var\n              targetElement    = $target[0],\n              isWindow         = ($boundary[0] == window),\n              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\n                ? $target.position()\n                : $target.offset(),\n              screenPosition = (isWindow)\n                ? { top: 0, left: 0 }\n                : $boundary.offset(),\n              calculations   = {},\n              scroll = (isWindow)\n                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\n                : { top: 0, left: 0},\n              screen\n            ;\n            calculations = {\n              // element which is launching popup\n              target : {\n                element : $target[0],\n                width   : $target.outerWidth(),\n                height  : $target.outerHeight(),\n                top     : targetPosition.top,\n                left    : targetPosition.left,\n                margin  : {}\n              },\n              // popup itself\n              popup : {\n                width  : $popup.outerWidth(),\n                height : $popup.outerHeight()\n              },\n              // offset container (or 3d context)\n              parent : {\n                width  : $offsetParent.outerWidth(),\n                height : $offsetParent.outerHeight()\n              },\n              // screen boundaries\n              screen : {\n                top  : screenPosition.top,\n                left : screenPosition.left,\n                scroll: {\n                  top  : scroll.top,\n                  left : scroll.left\n                },\n                width  : $boundary.width(),\n                height : $boundary.height()\n              }\n            };\n\n            // add in container calcs if fluid\n            if( settings.setFluidWidth && module.is.fluid() ) {\n              calculations.container = {\n                width: $popup.parent().outerWidth()\n              };\n              calculations.popup.width = calculations.container.width;\n            }\n\n            // add in margins if inline\n            calculations.target.margin.top = (settings.inline)\n              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\n              : 0\n            ;\n            calculations.target.margin.left = (settings.inline)\n              ? module.is.rtl()\n                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\n                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\n              : 0\n            ;\n            // calculate screen boundaries\n            screen = calculations.screen;\n            calculations.boundary = {\n              top    : screen.top + screen.scroll.top,\n              bottom : screen.top + screen.scroll.top + screen.height,\n              left   : screen.left + screen.scroll.left,\n              right  : screen.left + screen.scroll.left + screen.width\n            };\n            return calculations;\n          },\n          id: function() {\n            return id;\n          },\n          startEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseenter';\n            }\n            else if(settings.on == 'focus') {\n              return 'focus';\n            }\n            return false;\n          },\n          scrollEvent: function() {\n            return 'scroll';\n          },\n          endEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseleave';\n            }\n            else if(settings.on == 'focus') {\n              return 'blur';\n            }\n            return false;\n          },\n          distanceFromBoundary: function(offset, calculations) {\n            var\n              distanceFromBoundary = {},\n              popup,\n              boundary\n            ;\n            calculations = calculations || module.get.calculations();\n\n            // shorthand\n            popup        = calculations.popup;\n            boundary     = calculations.boundary;\n\n            if(offset) {\n              distanceFromBoundary = {\n                top    : (offset.top - boundary.top),\n                left   : (offset.left - boundary.left),\n                right  : (boundary.right - (offset.left + popup.width) ),\n                bottom : (boundary.bottom - (offset.top + popup.height) )\n              };\n              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\n            }\n            return distanceFromBoundary;\n          },\n          offsetParent: function($target) {\n            var\n              element = ($target !== undefined)\n                ? $target[0]\n                : $module[0],\n              parentNode = element.parentNode,\n              $node    = $(parentNode)\n            ;\n            if(parentNode) {\n              var\n                is2D     = ($node.css('transform') === 'none'),\n                isStatic = ($node.css('position') === 'static'),\n                isHTML   = $node.is('html')\n              ;\n              while(parentNode && !isHTML && isStatic && is2D) {\n                parentNode = parentNode.parentNode;\n                $node    = $(parentNode);\n                is2D     = ($node.css('transform') === 'none');\n                isStatic = ($node.css('position') === 'static');\n                isHTML   = $node.is('html');\n              }\n            }\n            return ($node && $node.length > 0)\n              ? $node\n              : $()\n            ;\n          },\n          positions: function() {\n            return {\n              'top left'      : false,\n              'top center'    : false,\n              'top right'     : false,\n              'bottom left'   : false,\n              'bottom center' : false,\n              'bottom right'  : false,\n              'left center'   : false,\n              'right center'  : false\n            };\n          },\n          nextPosition: function(position) {\n            var\n              positions          = position.split(' '),\n              verticalPosition   = positions[0],\n              horizontalPosition = positions[1],\n              opposite = {\n                top    : 'bottom',\n                bottom : 'top',\n                left   : 'right',\n                right  : 'left'\n              },\n              adjacent = {\n                left   : 'center',\n                center : 'right',\n                right  : 'left'\n              },\n              backup = {\n                'top left'      : 'top center',\n                'top center'    : 'top right',\n                'top right'     : 'right center',\n                'right center'  : 'bottom right',\n                'bottom right'  : 'bottom center',\n                'bottom center' : 'bottom left',\n                'bottom left'   : 'left center',\n                'left center'   : 'top left'\n              },\n              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\n              oppositeTried = false,\n              adjacentTried = false,\n              nextPosition  = false\n            ;\n            if(!triedPositions) {\n              module.verbose('All available positions available');\n              triedPositions = module.get.positions();\n            }\n\n            module.debug('Recording last position tried', position);\n            triedPositions[position] = true;\n\n            if(settings.prefer === 'opposite') {\n              nextPosition  = [opposite[verticalPosition], horizontalPosition];\n              nextPosition  = nextPosition.join(' ');\n              oppositeTried = (triedPositions[nextPosition] === true);\n              module.debug('Trying opposite strategy', nextPosition);\n            }\n            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\n              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\n              nextPosition  = nextPosition.join(' ');\n              adjacentTried = (triedPositions[nextPosition] === true);\n              module.debug('Trying adjacent strategy', nextPosition);\n            }\n            if(adjacentTried || oppositeTried) {\n              module.debug('Using backup position', nextPosition);\n              nextPosition = backup[position];\n            }\n            return nextPosition;\n          }\n        },\n\n        set: {\n          position: function(position, calculations) {\n\n            // exit conditions\n            if($target.length === 0 || $popup.length === 0) {\n              module.error(error.notFound);\n              return;\n            }\n            var\n              offset,\n              distanceAway,\n              target,\n              popup,\n              parent,\n              positioning,\n              popupOffset,\n              distanceFromBoundary\n            ;\n\n            calculations = calculations || module.get.calculations();\n            position     = position     || $module.data(metadata.position) || settings.position;\n\n            offset       = $module.data(metadata.offset) || settings.offset;\n            distanceAway = settings.distanceAway;\n\n            // shorthand\n            target = calculations.target;\n            popup  = calculations.popup;\n            parent = calculations.parent;\n\n            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\n              module.debug('Popup target is hidden, no action taken');\n              return false;\n            }\n\n            if(settings.inline) {\n              module.debug('Adding margin to calculation', target.margin);\n              if(position == 'left center' || position == 'right center') {\n                offset       +=  target.margin.top;\n                distanceAway += -target.margin.left;\n              }\n              else if (position == 'top left' || position == 'top center' || position == 'top right') {\n                offset       += target.margin.left;\n                distanceAway -= target.margin.top;\n              }\n              else {\n                offset       += target.margin.left;\n                distanceAway += target.margin.top;\n              }\n            }\n\n            module.debug('Determining popup position from calculations', position, calculations);\n\n            if (module.is.rtl()) {\n              position = position.replace(/left|right/g, function (match) {\n                return (match == 'left')\n                  ? 'right'\n                  : 'left'\n                ;\n              });\n              module.debug('RTL: Popup position updated', position);\n            }\n\n            // if last attempt use specified last resort position\n            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\n              position = settings.lastResort;\n            }\n\n            switch (position) {\n              case 'top left':\n                positioning = {\n                  top    : 'auto',\n                  bottom : parent.height - target.top + distanceAway,\n                  left   : target.left + offset,\n                  right  : 'auto'\n                };\n              break;\n              case 'top center':\n                positioning = {\n                  bottom : parent.height - target.top + distanceAway,\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n                  top    : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'top right':\n                positioning = {\n                  bottom :  parent.height - target.top + distanceAway,\n                  right  :  parent.width - target.left - target.width - offset,\n                  top    : 'auto',\n                  left   : 'auto'\n                };\n              break;\n              case 'left center':\n                positioning = {\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n                  right  : parent.width - target.left + distanceAway,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n              case 'right center':\n                positioning = {\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n                  left   : target.left + target.width + distanceAway,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom left':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  left   : target.left + offset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom center':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom right':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  right  : parent.width - target.left  - target.width - offset,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n            }\n            if(positioning === undefined) {\n              module.error(error.invalidPosition, position);\n            }\n\n            module.debug('Calculated popup positioning values', positioning);\n\n            // tentatively place on stage\n            $popup\n              .css(positioning)\n              .removeClass(className.position)\n              .addClass(position)\n              .addClass(className.loading)\n            ;\n\n            popupOffset = module.get.popupOffset();\n\n            // see if any boundaries are surpassed with this tentative position\n            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\n\n            if( module.is.offstage(distanceFromBoundary, position) ) {\n              module.debug('Position is outside viewport', position);\n              if(searchDepth < settings.maxSearchDepth) {\n                searchDepth++;\n                position = module.get.nextPosition(position);\n                module.debug('Trying new position', position);\n                return ($popup)\n                  ? module.set.position(position, calculations)\n                  : false\n                ;\n              }\n              else {\n                if(settings.lastResort) {\n                  module.debug('No position found, showing with last position');\n                }\n                else {\n                  module.debug('Popup could not find a position to display', $popup);\n                  module.error(error.cannotPlace, element);\n                  module.remove.attempts();\n                  module.remove.loading();\n                  module.reset();\n                  settings.onUnplaceable.call($popup, element);\n                  return false;\n                }\n              }\n            }\n            module.debug('Position is on stage', position);\n            module.remove.attempts();\n            module.remove.loading();\n            if( settings.setFluidWidth && module.is.fluid() ) {\n              module.set.fluidWidth(calculations);\n            }\n            return true;\n          },\n\n          fluidWidth: function(calculations) {\n            calculations = calculations || module.get.calculations();\n            module.debug('Automatically setting element width to parent width', calculations.parent.width);\n            $popup.css('width', calculations.container.width);\n          },\n\n          variation: function(variation) {\n            variation = variation || module.get.variation();\n            if(variation && module.has.popup() ) {\n              module.verbose('Adding variation to popup', variation);\n              $popup.addClass(variation);\n            }\n          },\n\n          visible: function() {\n            $module.addClass(className.visible);\n          }\n        },\n\n        remove: {\n          loading: function() {\n            $popup.removeClass(className.loading);\n          },\n          variation: function(variation) {\n            variation = variation || module.get.variation();\n            if(variation) {\n              module.verbose('Removing variation', variation);\n              $popup.removeClass(variation);\n            }\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          attempts: function() {\n            module.verbose('Resetting all searched positions');\n            searchDepth    = 0;\n            triedPositions = false;\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.debug('Binding popup events to module');\n            if(settings.on == 'click') {\n              $module\n                .on('click' + eventNamespace, module.toggle)\n              ;\n            }\n            if(settings.on == 'hover' && hasTouch) {\n              $module\n                .on('touchstart' + eventNamespace, module.event.touchstart)\n              ;\n            }\n            if( module.get.startEvent() ) {\n              $module\n                .on(module.get.startEvent() + eventNamespace, module.event.start)\n                .on(module.get.endEvent() + eventNamespace, module.event.end)\n              ;\n            }\n            if(settings.target) {\n              module.debug('Target set to element', $target);\n            }\n            $window.on('resize' + elementNamespace, module.event.resize);\n          },\n          popup: function() {\n            module.verbose('Allowing hover events on popup to prevent closing');\n            if( $popup && module.has.popup() ) {\n              $popup\n                .on('mouseenter' + eventNamespace, module.event.start)\n                .on('mouseleave' + eventNamespace, module.event.end)\n              ;\n            }\n          },\n          close: function() {\n            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\n              $scrollContext\n                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\n              ;\n            }\n            if(settings.on == 'hover' && openedWithTouch) {\n              module.verbose('Binding popup close event to document');\n              $document\n                .on('touchstart' + elementNamespace, function(event) {\n                  module.verbose('Touched away from popup');\n                  module.event.hideGracefully.call(element, event);\n                })\n              ;\n            }\n            if(settings.on == 'click' && settings.closable) {\n              module.verbose('Binding popup close event to document');\n              $document\n                .on('click' + elementNamespace, function(event) {\n                  module.verbose('Clicked away from popup');\n                  module.event.hideGracefully.call(element, event);\n                })\n              ;\n            }\n          }\n        },\n\n        unbind: {\n          events: function() {\n            $window\n              .off(elementNamespace)\n            ;\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          close: function() {\n            $document\n              .off(elementNamespace)\n            ;\n            $scrollContext\n              .off(elementNamespace)\n            ;\n          },\n        },\n\n        has: {\n          popup: function() {\n            return ($popup && $popup.length > 0);\n          }\n        },\n\n        is: {\n          offstage: function(distanceFromBoundary, position) {\n            var\n              offstage = []\n            ;\n            // return boundaries that have been surpassed\n            $.each(distanceFromBoundary, function(direction, distance) {\n              if(distance < -settings.jitter) {\n                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\n                offstage.push(direction);\n              }\n            });\n            if(offstage.length > 0) {\n              return true;\n            }\n            else {\n              return false;\n            }\n          },\n          svg: function(element) {\n            return module.supports.svg() && (element instanceof SVGGraphicsElement);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          animating: function() {\n            return ($popup !== undefined && $popup.hasClass(className.animating) );\n          },\n          fluid: function() {\n            return ($popup !== undefined && $popup.hasClass(className.fluid));\n          },\n          visible: function() {\n            return ($popup !== undefined && $popup.hasClass(className.visible));\n          },\n          dropdown: function() {\n            return $module.hasClass(className.dropdown);\n          },\n          hidden: function() {\n            return !module.is.visible();\n          },\n          rtl: function () {\n            return $module.css('direction') == 'rtl';\n          }\n        },\n\n        reset: function() {\n          module.remove.visible();\n          if(settings.preserve) {\n            if($.fn.transition !== undefined) {\n              $popup\n                .transition('remove transition')\n              ;\n            }\n          }\n          else {\n            module.removePopup();\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.popup.settings = {\n\n  name           : 'Popup',\n\n  // module settings\n  silent         : false,\n  debug          : false,\n  verbose        : false,\n  performance    : true,\n  namespace      : 'popup',\n\n  // whether it should use dom mutation observers\n  observeChanges : true,\n\n  // callback only when element added to dom\n  onCreate       : function(){},\n\n  // callback before element removed from dom\n  onRemove       : function(){},\n\n  // callback before show animation\n  onShow         : function(){},\n\n  // callback after show animation\n  onVisible      : function(){},\n\n  // callback before hide animation\n  onHide         : function(){},\n\n  // callback when popup cannot be positioned in visible screen\n  onUnplaceable  : function(){},\n\n  // callback after hide animation\n  onHidden       : function(){},\n\n  // when to show popup\n  on             : 'hover',\n\n  // element to use to determine if popup is out of boundary\n  boundary       : window,\n\n  // whether to add touchstart events when using hover\n  addTouchEvents : true,\n\n  // default position relative to element\n  position       : 'top left',\n\n  // name of variation to use\n  variation      : '',\n\n  // whether popup should be moved to context\n  movePopup      : true,\n\n  // element which popup should be relative to\n  target         : false,\n\n  // jq selector or element that should be used as popup\n  popup          : false,\n\n  // popup should remain inline next to activator\n  inline         : false,\n\n  // popup should be removed from page on hide\n  preserve       : false,\n\n  // popup should not close when being hovered on\n  hoverable      : false,\n\n  // explicitly set content\n  content        : false,\n\n  // explicitly set html\n  html           : false,\n\n  // explicitly set title\n  title          : false,\n\n  // whether automatically close on clickaway when on click\n  closable       : true,\n\n  // automatically hide on scroll\n  hideOnScroll   : 'auto',\n\n  // hide other popups on show\n  exclusive      : false,\n\n  // context to attach popups\n  context        : 'body',\n\n  // context for binding scroll events\n  scrollContext  : window,\n\n  // position to prefer when calculating new position\n  prefer         : 'opposite',\n\n  // specify position to appear even if it doesn't fit\n  lastResort     : false,\n\n  // delay used to prevent accidental refiring of animations due to user error\n  delay        : {\n    show : 50,\n    hide : 70\n  },\n\n  // whether fluid variation should assign width explicitly\n  setFluidWidth  : true,\n\n  // transition settings\n  duration       : 200,\n  transition     : 'scale',\n\n  // distance away from activating element in px\n  distanceAway   : 0,\n\n  // number of pixels an element is allowed to be \"offstage\" for a position to be chosen (allows for rounding)\n  jitter         : 2,\n\n  // offset on aligning axis from calculated position\n  offset         : 0,\n\n  // maximum times to look for a position before failing (9 positions total)\n  maxSearchDepth : 15,\n\n  error: {\n    invalidPosition : 'The position you specified is not a valid position',\n    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\n    method          : 'The method you called is not defined.',\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\n    notFound        : 'The target or popup you specified does not exist on the page'\n  },\n\n  metadata: {\n    activator : 'activator',\n    content   : 'content',\n    html      : 'html',\n    offset    : 'offset',\n    position  : 'position',\n    title     : 'title',\n    variation : 'variation'\n  },\n\n  className   : {\n    active    : 'active',\n    animating : 'animating',\n    dropdown  : 'dropdown',\n    fluid     : 'fluid',\n    loading   : 'loading',\n    popup     : 'ui popup',\n    position  : 'top left center bottom right',\n    visible   : 'visible'\n  },\n\n  selector    : {\n    popup    : '.ui.popup'\n  },\n\n  templates: {\n    escape: function(string) {\n      var\n        badChars     = /[&<>\"'`]/g,\n        shouldEscape = /[&<>\"'`]/,\n        escape       = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#x27;\",\n          \"`\": \"&#x60;\"\n        },\n        escapedChar  = function(chr) {\n          return escape[chr];\n        }\n      ;\n      if(shouldEscape.test(string)) {\n        return string.replace(badChars, escapedChar);\n      }\n      return string;\n    },\n    popup: function(text) {\n      var\n        html   = '',\n        escape = $.fn.popup.settings.templates.escape\n      ;\n      if(typeof text !== undefined) {\n        if(typeof text.title !== undefined && text.title) {\n          text.title = escape(text.title);\n          html += '<div class=\"header\">' + text.title + '</div>';\n        }\n        if(typeof text.content !== undefined && text.content) {\n          text.content = escape(text.content);\n          html += '<div class=\"content\">' + text.content + '</div>';\n        }\n      }\n      return html;\n    }\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Progress\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\nvar\n  global = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.fn.progress = function(parameters) {\n  var\n    $allModules    = $(this),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\n          : $.extend({}, $.fn.progress.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $bar            = $(this).find(selector.bar),\n        $progress       = $(this).find(selector.progress),\n        $label          = $(this).find(selector.label),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        animating = false,\n        transitionEnd,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing progress bar', settings);\n\n          module.set.duration();\n          module.set.transitionEvent();\n\n          module.read.metadata();\n          module.read.settings();\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n\n        reset: function() {\n          module.remove.nextValue();\n          module.update.progress(0);\n        },\n\n        complete: function() {\n          if(module.percent === undefined || module.percent < 100) {\n            module.remove.progressPoll();\n            module.set.percent(100);\n          }\n        },\n\n        read: {\n          metadata: function() {\n            var\n              data = {\n                percent : $module.data(metadata.percent),\n                total   : $module.data(metadata.total),\n                value   : $module.data(metadata.value)\n              }\n            ;\n            if(data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n            if(data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n            if(data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function() {\n            if(settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n            if(settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n            if(settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n\n        bind: {\n          transitionEnd: function(callback) {\n            var\n              transitionEnd = module.get.transitionEnd()\n            ;\n            $bar\n              .one(transitionEnd + eventNamespace, function(event) {\n                clearTimeout(module.failSafeTimer);\n                callback.call(this, event);\n              })\n            ;\n            module.failSafeTimer = setTimeout(function() {\n              $bar.triggerHandler(transitionEnd);\n            }, settings.duration + settings.failSafeDelay);\n            module.verbose('Adding fail safe timer', module.timer);\n          }\n        },\n\n        increment: function(incrementValue) {\n          var\n            maxValue,\n            startValue,\n            newValue\n          ;\n          if( module.has.total() ) {\n            startValue     = module.get.value();\n            incrementValue = incrementValue || 1;\n            newValue       = startValue + incrementValue;\n          }\n          else {\n            startValue     = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n\n            newValue       = startValue + incrementValue;\n            maxValue       = 100;\n            module.debug('Incrementing percentage by', startValue, newValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n        decrement: function(decrementValue) {\n          var\n            total     = module.get.total(),\n            startValue,\n            newValue\n          ;\n          if(total) {\n            startValue     =  module.get.value();\n            decrementValue =  decrementValue || 1;\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          }\n          else {\n            startValue     =  module.get.percent();\n            decrementValue =  decrementValue || module.get.randomValue();\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n\n        has: {\n          progressPoll: function() {\n            return module.progressPoll;\n          },\n          total: function() {\n            return (module.get.total() !== false);\n          }\n        },\n\n        get: {\n          text: function(templateText) {\n            var\n              value   = module.value                || 0,\n              total   = module.total                || 0,\n              percent = (animating)\n                ? module.get.displayPercent()\n                : module.percent || 0,\n              left = (module.total > 0)\n                ? (total - value)\n                : (100 - percent)\n            ;\n            templateText = templateText || '';\n            templateText = templateText\n              .replace('{value}', value)\n              .replace('{total}', total)\n              .replace('{left}', left)\n              .replace('{percent}', percent)\n            ;\n            module.verbose('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n\n          normalizedValue: function(value) {\n            if(value < 0) {\n              module.debug('Value cannot decrement below 0');\n              return 0;\n            }\n            if(module.has.total()) {\n              if(value > module.total) {\n                module.debug('Value cannot increment above total', module.total);\n                return module.total;\n              }\n            }\n            else if(value > 100 ) {\n              module.debug('Value cannot increment above 100 percent');\n              return 100;\n            }\n            return value;\n          },\n\n          updateInterval: function() {\n            if(settings.updateInterval == 'auto') {\n              return settings.duration;\n            }\n            return settings.updateInterval;\n          },\n\n          randomValue: function() {\n            module.debug('Generating random increment percentage');\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\n          },\n\n          numericValue: function(value) {\n            return (typeof value === 'string')\n              ? (value.replace(/[^\\d.]/g, '') !== '')\n                ? +(value.replace(/[^\\d.]/g, ''))\n                : false\n              : value\n            ;\n          },\n\n          transitionEnd: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function() {\n            var\n              barWidth       = $bar.width(),\n              totalWidth     = $module.width(),\n              minDisplay     = parseInt($bar.css('min-width'), 10),\n              displayPercent = (barWidth > minDisplay)\n                ? (barWidth / totalWidth * 100)\n                : module.percent\n            ;\n            return (settings.precision > 0)\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(displayPercent)\n            ;\n          },\n\n          percent: function() {\n            return module.percent || 0;\n          },\n          value: function() {\n            return module.nextValue || module.value || 0;\n          },\n          total: function() {\n            return module.total || false;\n          }\n        },\n\n        create: {\n          progressPoll: function() {\n            module.progressPoll = setTimeout(function() {\n              module.update.toNextValue();\n              module.remove.progressPoll();\n            }, module.get.updateInterval());\n          },\n        },\n\n        is: {\n          complete: function() {\n            return module.is.success() || module.is.warning() || module.is.error();\n          },\n          success: function() {\n            return $module.hasClass(className.success);\n          },\n          warning: function() {\n            return $module.hasClass(className.warning);\n          },\n          error: function() {\n            return $module.hasClass(className.error);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          visible: function() {\n            return $module.is(':visible');\n          }\n        },\n\n        remove: {\n          progressPoll: function() {\n            module.verbose('Removing progress poll timer');\n            if(module.progressPoll) {\n              clearTimeout(module.progressPoll);\n              delete module.progressPoll;\n            }\n          },\n          nextValue: function() {\n            module.verbose('Removing progress value stored for next update');\n            delete module.nextValue;\n          },\n          state: function() {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function() {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function() {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function() {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function() {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n\n        set: {\n          barWidth: function(value) {\n            if(value > 100) {\n              module.error(error.tooHigh, value);\n            }\n            else if (value < 0) {\n              module.error(error.tooLow, value);\n            }\n            else {\n              $bar\n                .css('width', value + '%')\n              ;\n              $module\n                .attr('data-percent', parseInt(value, 10))\n              ;\n            }\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar\n              .css({\n                'transition-duration':  duration\n              })\n            ;\n          },\n          percent: function(percent) {\n            percent = (typeof percent == 'string')\n              ? +(percent.replace('%', ''))\n              : percent\n            ;\n            // round display percentage\n            percent = (settings.precision > 0)\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(percent)\n            ;\n            module.percent = percent;\n            if( !module.has.total() ) {\n              module.value = (settings.precision > 0)\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\n                : Math.round( (percent / 100) * module.total * 10) / 10\n              ;\n              if(settings.limitValues) {\n                module.value = (module.value > 100)\n                  ? 100\n                  : (module.value < 0)\n                    ? 0\n                    : module.value\n                ;\n              }\n            }\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function() {\n            var\n              animationCallback = function() {\n                module.verbose('Bar finished animating, removing continuous label updates');\n                clearInterval(module.interval);\n                animating = false;\n                module.set.labels();\n              }\n            ;\n            clearInterval(module.interval);\n            module.bind.transitionEnd(animationCallback);\n            animating = true;\n            module.interval = setInterval(function() {\n              var\n                isInDOM = $.contains(document.documentElement, element)\n              ;\n              if(!isInDOM) {\n                clearInterval(module.interval);\n                animating = false;\n              }\n              module.set.labels();\n            }, settings.framerate);\n          },\n          labels: function() {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function(text) {\n            text = text || '';\n            if(text) {\n              text = module.get.text(text);\n              module.verbose('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function(percent) {\n            percent = (percent !== undefined)\n              ? percent\n              : module.percent\n            ;\n            if(percent === 100) {\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              }\n              else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n                module.remove.progressPoll();\n              }\n            }\n            else if(percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            }\n            else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function(text) {\n            if(text !== undefined) {\n              $progress.text( module.get.text(text) );\n            }\n            else if(settings.label == 'ratio' && module.total) {\n              module.verbose('Adding ratio to bar label');\n              $progress.text( module.get.text(settings.text.ratio) );\n            }\n            else if(settings.label == 'percent') {\n              module.verbose('Adding percentage to bar label');\n              $progress.text( module.get.text(settings.text.percent) );\n            }\n          },\n          active: function(text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n            if(settings.showActivity && !module.is.active() ) {\n              $module.addClass(className.active);\n            }\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onActive.call(element, module.value, module.total);\n            });\n          },\n          success : function(text) {\n            text = text || settings.text.success || settings.text.active;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n            if(settings.text.success) {\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\n              module.set.label(text);\n            }\n            else {\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onSuccess.call(element, module.total);\n            });\n          },\n          warning : function(text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onWarning.call(element, module.value, module.total);\n            });\n          },\n          error : function(text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onError.call(element, module.value, module.total);\n            });\n          },\n          transitionEvent: function() {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function(totalValue) {\n            module.total = totalValue;\n          },\n          value: function(value) {\n            module.value = value;\n          },\n          progress: function(value) {\n            if(!module.has.progressPoll()) {\n              module.debug('First update in progress update interval, immediately updating', value);\n              module.update.progress(value);\n              module.create.progressPoll();\n            }\n            else {\n              module.debug('Updated within interval, setting next update to use new value', value);\n              module.set.nextValue(value);\n            }\n          },\n          nextValue: function(value) {\n            module.nextValue = value;\n          }\n        },\n\n        update: {\n          toNextValue: function() {\n            var\n              nextValue = module.nextValue\n            ;\n            if(nextValue) {\n              module.debug('Update interval complete using last updated value', nextValue);\n              module.update.progress(nextValue);\n              module.remove.nextValue();\n            }\n          },\n          progress: function(value) {\n            var\n              percentComplete\n            ;\n            value = module.get.numericValue(value);\n            if(value === false) {\n              module.error(error.nonNumeric, value);\n            }\n            value = module.get.normalizedValue(value);\n            if( module.has.total() ) {\n              module.set.value(value);\n              percentComplete = (value / module.total) * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent( percentComplete );\n            }\n            else {\n              percentComplete = value;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent( percentComplete );\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.progress.settings = {\n\n  name         : 'Progress',\n  namespace    : 'progress',\n\n  silent       : false,\n  debug        : false,\n  verbose      : false,\n  performance  : true,\n\n  random       : {\n    min : 2,\n    max : 5\n  },\n\n  duration       : 300,\n\n  updateInterval : 'auto',\n\n  autoSuccess    : true,\n  showActivity   : true,\n  limitValues    : true,\n\n  label          : 'percent',\n  precision      : 0,\n  framerate      : (1000 / 30), /// 30 fps\n\n  percent        : false,\n  total          : false,\n  value          : false,\n\n  // delay in ms for fail safe animation callback\n  failSafeDelay : 100,\n\n  onLabelUpdate : function(state, text, value, total){\n    return text;\n  },\n  onChange      : function(percent, value, total){},\n  onSuccess     : function(total){},\n  onActive      : function(value, total){},\n  onError       : function(value, total){},\n  onWarning     : function(value, total){},\n\n  error    : {\n    method     : 'The method you called is not defined.',\n    nonNumeric : 'Progress value is non numeric',\n    tooHigh    : 'Value specified is above 100%',\n    tooLow     : 'Value specified is below 0%'\n  },\n\n  regExp: {\n    variable: /\\{\\$*[A-z0-9]+\\}/g\n  },\n\n  metadata: {\n    percent : 'percent',\n    total   : 'total',\n    value   : 'value'\n  },\n\n  selector : {\n    bar      : '> .bar',\n    label    : '> .label',\n    progress : '.bar > .progress'\n  },\n\n  text : {\n    active  : false,\n    error   : false,\n    success : false,\n    warning : false,\n    percent : '{percent}%',\n    ratio   : '{value} of {total}'\n  },\n\n  className : {\n    active  : 'active',\n    error   : 'error',\n    success : 'success',\n    warning : 'warning'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        initialLoad,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n          module.set.initialLoad();\n          module.set.rating( module.get.initialRating() );\n          module.remove.initialLoad();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $icon   = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function() {\n            var\n              maxRating = module.get.maxRating(),\n              html      = $.fn.rating.settings.templates.icon(maxRating)\n            ;\n            module.debug('Generating icon html dynamically');\n            $module\n              .html(html)\n            ;\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.selected)\n            ;\n            $module\n              .addClass(className.selected)\n            ;\n            $activeIcon\n              .addClass(className.selected)\n                .prevAll()\n                .addClass(className.selected)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.get.rating(),\n              rating        = $icon.index($activeIcon) + 1,\n              canClear      = (settings.clearable == 'auto')\n               ? ($icon.length === 1)\n               : settings.clearable\n            ;\n            if(canClear && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.set.rating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events');\n            $module\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\n            ;\n          }\n        },\n\n        remove: {\n          events: function() {\n            module.verbose('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          }\n        },\n\n        get: {\n          initialRating: function() {\n            if($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function() {\n            if($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function() {\n            var\n              currentRating = $icon.filter('.' + className.active).length\n            ;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function(rating) {\n            var\n              ratingIndex = (rating - 1 >= 0)\n                ? (rating - 1)\n                : 0,\n              $activeIcon = $icon.eq(ratingIndex)\n            ;\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n              .removeClass(className.active)\n            ;\n            if(rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon\n                .prevAll()\n                .addBack()\n                  .addClass(className.active)\n              ;\n            }\n            if(!module.is.initialLoad()) {\n              settings.onRate.call(element, rating);\n            }\n          },\n          initialLoad: function() {\n            initialLoad = true;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  slent         : false,\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  maxRating     : 4,\n  clearable     : 'auto',\n\n  fireOnInit    : false,\n\n  onRate        : function(rating){},\n\n  error         : {\n    method    : 'The method you called is not defined',\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n  },\n\n\n  metadata: {\n    rating    : 'rating',\n    maxRating : 'maxRating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    selected : 'selected',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  },\n\n  templates: {\n    icon: function(maxRating) {\n      var\n        icon = 1,\n        html = ''\n      ;\n      while(icon <= maxRating) {\n        html += '<i class=\"icon\"></i>';\n        icon++;\n      }\n      return html;\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Search\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.search = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $(this)\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.search.settings, parameters)\n          : $.extend({}, $.fn.search.settings),\n\n        className        = settings.className,\n        metadata         = settings.metadata,\n        regExp           = settings.regExp,\n        fields           = settings.fields,\n        selector         = settings.selector,\n        error            = settings.error,\n        namespace        = settings.namespace,\n\n        eventNamespace   = '.' + namespace,\n        moduleNamespace  = namespace + '-module',\n\n        $module          = $(this),\n        $prompt          = $module.find(selector.prompt),\n        $searchButton    = $module.find(selector.searchButton),\n        $results         = $module.find(selector.results),\n        $result          = $module.find(selector.result),\n        $category        = $module.find(selector.category),\n\n        element          = this,\n        instance         = $module.data(moduleNamespace),\n\n        disabledBubbled  = false,\n        resultsDismissed = false,\n\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n          module.determine.searchFields();\n          module.bind.events();\n          module.set.type();\n          module.create.results();\n          module.instantiate();\n        },\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.debug('Refreshing selector cache');\n          $prompt         = $module.find(selector.prompt);\n          $searchButton   = $module.find(selector.searchButton);\n          $category       = $module.find(selector.category);\n          $results        = $module.find(selector.results);\n          $result         = $module.find(selector.result);\n        },\n\n        refreshResults: function() {\n          $results = $module.find(selector.results);\n          $result  = $module.find(selector.result);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events to search');\n            if(settings.automatic) {\n              $module\n                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\n              ;\n              $prompt\n                .attr('autocomplete', 'off')\n              ;\n            }\n            $module\n              // prompt\n              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\n              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\n              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\n              // search button\n              .on('click'     + eventNamespace, selector.searchButton, module.query)\n              // results\n              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\n              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\n              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\n            ;\n          }\n        },\n\n        determine: {\n          searchFields: function() {\n            // this makes sure $.extend does not add specified search fields to default fields\n            // this is the only setting which should not extend defaults\n            if(parameters && parameters.searchFields !== undefined) {\n              settings.searchFields = parameters.searchFields;\n            }\n          }\n        },\n\n        event: {\n          input: function() {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.query, settings.searchDelay);\n          },\n          focus: function() {\n            module.set.focus();\n            if(settings.searchOnFocus && module.has.minimumCharacters() ) {\n              module.query(function() {\n                if(module.can.show() ) {\n                  module.showResults();\n                }\n              });\n            }\n          },\n          blur: function(event) {\n            var\n              pageLostFocus = (document.activeElement === this),\n              callback      = function() {\n                module.cancel.query();\n                module.remove.focus();\n                module.timer = setTimeout(module.hideResults, settings.hideDelay);\n              }\n            ;\n            if(pageLostFocus) {\n              return;\n            }\n            resultsDismissed = false;\n            if(module.resultsClicked) {\n              module.debug('Determining if user action caused search to close');\n              $module\n                .one('click.close' + eventNamespace, selector.results, function(event) {\n                  if(module.is.inMessage(event) || disabledBubbled) {\n                    $prompt.focus();\n                    return;\n                  }\n                  disabledBubbled = false;\n                  if( !module.is.animating() && !module.is.hidden()) {\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.debug('Input blurred without user action, closing results');\n              callback();\n            }\n          },\n          result: {\n            mousedown: function() {\n              module.resultsClicked = true;\n            },\n            mouseup: function() {\n              module.resultsClicked = false;\n            },\n            click: function(event) {\n              module.debug('Search result selected');\n              var\n                $result = $(this),\n                $title  = $result.find(selector.title).eq(0),\n                $link   = $result.is('a[href]')\n                  ? $result\n                  : $result.find('a[href]').eq(0),\n                href    = $link.attr('href')   || false,\n                target  = $link.attr('target') || false,\n                title   = $title.html(),\n                // title is used for result lookup\n                value   = ($title.length > 0)\n                  ? $title.text()\n                  : false,\n                results = module.get.results(),\n                result  = $result.data(metadata.result) || module.get.result(value, results),\n                returnedValue\n              ;\n              if( $.isFunction(settings.onSelect) ) {\n                if(settings.onSelect.call(element, result, results) === false) {\n                  module.debug('Custom onSelect callback cancelled default select action');\n                  disabledBubbled = true;\n                  return;\n                }\n              }\n              module.hideResults();\n              if(value) {\n                module.set.value(value);\n              }\n              if(href) {\n                module.verbose('Opening search link found in result', $link);\n                if(target == '_blank' || event.ctrlKey) {\n                  window.open(href);\n                }\n                else {\n                  window.location.href = (href);\n                }\n              }\n            }\n          }\n        },\n        handleKeyboard: function(event) {\n          var\n            // force selector refresh\n            $result         = $module.find(selector.result),\n            $category       = $module.find(selector.category),\n            $activeResult   = $result.filter('.' + className.active),\n            currentIndex    = $result.index( $activeResult ),\n            resultSize      = $result.length,\n            hasActiveResult = $activeResult.length > 0,\n\n            keyCode         = event.which,\n            keys            = {\n              backspace : 8,\n              enter     : 13,\n              escape    : 27,\n              upArrow   : 38,\n              downArrow : 40\n            },\n            newIndex\n          ;\n          // search shortcuts\n          if(keyCode == keys.escape) {\n            module.verbose('Escape key pressed, blurring search field');\n            module.hideResults();\n            resultsDismissed = true;\n          }\n          if( module.is.visible() ) {\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, selecting active result');\n              if( $result.filter('.' + className.active).length > 0 ) {\n                module.event.result.click.call($result.filter('.' + className.active), event);\n                event.preventDefault();\n                return false;\n              }\n            }\n            else if(keyCode == keys.upArrow && hasActiveResult) {\n              module.verbose('Up key pressed, changing active result');\n              newIndex = (currentIndex - 1 < 0)\n                ? currentIndex\n                : currentIndex - 1\n              ;\n              $category\n                .removeClass(className.active)\n              ;\n              $result\n                .removeClass(className.active)\n                .eq(newIndex)\n                  .addClass(className.active)\n                  .closest($category)\n                    .addClass(className.active)\n              ;\n              event.preventDefault();\n            }\n            else if(keyCode == keys.downArrow) {\n              module.verbose('Down key pressed, changing active result');\n              newIndex = (currentIndex + 1 >= resultSize)\n                ? currentIndex\n                : currentIndex + 1\n              ;\n              $category\n                .removeClass(className.active)\n              ;\n              $result\n                .removeClass(className.active)\n                .eq(newIndex)\n                  .addClass(className.active)\n                  .closest($category)\n                    .addClass(className.active)\n              ;\n              event.preventDefault();\n            }\n          }\n          else {\n            // query shortcuts\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, executing query');\n              module.query();\n              module.set.buttonPressed();\n              $prompt.one('keyup', module.remove.buttonFocus);\n            }\n          }\n        },\n\n        setup: {\n          api: function(searchTerm, callback) {\n            var\n              apiSettings = {\n                debug             : settings.debug,\n                on                : false,\n                cache             : true,\n                action            : 'search',\n                urlData           : {\n                  query : searchTerm\n                },\n                onSuccess         : function(response) {\n                  module.parse.response.call(element, response, searchTerm);\n                  callback();\n                },\n                onFailure         : function() {\n                  module.displayMessage(error.serverError);\n                  callback();\n                },\n                onAbort : function(response) {\n                },\n                onError           : module.error\n              },\n              searchHTML\n            ;\n            $.extend(true, apiSettings, settings.apiSettings);\n            module.verbose('Setting up API request', apiSettings);\n            $module.api(apiSettings);\n          }\n        },\n\n        can: {\n          useAPI: function() {\n            return $.fn.api !== undefined;\n          },\n          show: function() {\n            return module.is.focused() && !module.is.visible() && !module.is.empty();\n          },\n          transition: function() {\n            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\n          }\n        },\n\n        is: {\n          animating: function() {\n            return $results.hasClass(className.animating);\n          },\n          hidden: function() {\n            return $results.hasClass(className.hidden);\n          },\n          inMessage: function(event) {\n            if(!event.target) {\n              return;\n            }\n            var\n              $target = $(event.target),\n              isInDOM = $.contains(document.documentElement, event.target)\n            ;\n            return (isInDOM && $target.closest(selector.message).length > 0);\n          },\n          empty: function() {\n            return ($results.html() === '');\n          },\n          visible: function() {\n            return ($results.filter(':visible').length > 0);\n          },\n          focused: function() {\n            return ($prompt.filter(':focus').length > 0);\n          }\n        },\n\n        get: {\n          inputEvent: function() {\n            var\n              prompt = $prompt[0],\n              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\n                ? 'input'\n                : (prompt !== undefined && prompt.onpropertychange !== undefined)\n                  ? 'propertychange'\n                  : 'keyup'\n            ;\n            return inputEvent;\n          },\n          value: function() {\n            return $prompt.val();\n          },\n          results: function() {\n            var\n              results = $module.data(metadata.results)\n            ;\n            return results;\n          },\n          result: function(value, results) {\n            var\n              lookupFields = ['title', 'id'],\n              result       = false\n            ;\n            value = (value !== undefined)\n              ? value\n              : module.get.value()\n            ;\n            results = (results !== undefined)\n              ? results\n              : module.get.results()\n            ;\n            if(settings.type === 'category') {\n              module.debug('Finding result that matches', value);\n              $.each(results, function(index, category) {\n                if($.isArray(category.results)) {\n                  result = module.search.object(value, category.results, lookupFields)[0];\n                  // don't continue searching if a result is found\n                  if(result) {\n                    return false;\n                  }\n                }\n              });\n            }\n            else {\n              module.debug('Finding result in results object', value);\n              result = module.search.object(value, results, lookupFields)[0];\n            }\n            return result || false;\n          },\n        },\n\n        select: {\n          firstResult: function() {\n            module.verbose('Selecting first result');\n            $result.first().addClass(className.active);\n          }\n        },\n\n        set: {\n          focus: function() {\n            $module.addClass(className.focus);\n          },\n          loading: function() {\n            $module.addClass(className.loading);\n          },\n          value: function(value) {\n            module.verbose('Setting search input value', value);\n            $prompt\n              .val(value)\n            ;\n          },\n          type: function(type) {\n            type = type || settings.type;\n            if(settings.type == 'category') {\n              $module.addClass(settings.type);\n            }\n          },\n          buttonPressed: function() {\n            $searchButton.addClass(className.pressed);\n          }\n        },\n\n        remove: {\n          loading: function() {\n            $module.removeClass(className.loading);\n          },\n          focus: function() {\n            $module.removeClass(className.focus);\n          },\n          buttonPressed: function() {\n            $searchButton.removeClass(className.pressed);\n          }\n        },\n\n        query: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          var\n            searchTerm = module.get.value(),\n            cache = module.read.cache(searchTerm)\n          ;\n          callback = callback || function() {};\n          if( module.has.minimumCharacters() )  {\n            if(cache) {\n              module.debug('Reading result from cache', searchTerm);\n              module.save.results(cache.results);\n              module.addResults(cache.html);\n              module.inject.id(cache.results);\n              callback();\n            }\n            else {\n              module.debug('Querying for', searchTerm);\n              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\n                module.search.local(searchTerm);\n                callback();\n              }\n              else if( module.can.useAPI() ) {\n                module.search.remote(searchTerm, callback);\n              }\n              else {\n                module.error(error.source);\n                callback();\n              }\n            }\n            settings.onSearchQuery.call(element, searchTerm);\n          }\n          else {\n            module.hideResults();\n          }\n        },\n\n        search: {\n          local: function(searchTerm) {\n            var\n              results = module.search.object(searchTerm, settings.content),\n              searchHTML\n            ;\n            module.set.loading();\n            module.save.results(results);\n            module.debug('Returned local search results', results);\n\n            searchHTML = module.generateResults({\n              results: results\n            });\n            module.remove.loading();\n            module.addResults(searchHTML);\n            module.inject.id(results);\n            module.write.cache(searchTerm, {\n              html    : searchHTML,\n              results : results\n            });\n          },\n          remote: function(searchTerm, callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if($module.api('is loading')) {\n              $module.api('abort');\n            }\n            module.setup.api(searchTerm, callback);\n            $module\n              .api('query')\n            ;\n          },\n          object: function(searchTerm, source, searchFields) {\n            var\n              results      = [],\n              fuzzyResults = [],\n              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\$&'),\n              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\n\n              // avoid duplicates when pushing results\n              addResult = function(array, result) {\n                var\n                  notResult      = ($.inArray(result, results) == -1),\n                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\n                ;\n                if(notResult && notFuzzyResult) {\n                  array.push(result);\n                }\n              }\n            ;\n            source = source || settings.source;\n            searchFields = (searchFields !== undefined)\n              ? searchFields\n              : settings.searchFields\n            ;\n\n            // search fields should be array to loop correctly\n            if(!$.isArray(searchFields)) {\n              searchFields = [searchFields];\n            }\n\n            // exit conditions if no source\n            if(source === undefined || source === false) {\n              module.error(error.source);\n              return [];\n            }\n\n            // iterate through search fields looking for matches\n            $.each(searchFields, function(index, field) {\n              $.each(source, function(label, content) {\n                var\n                  fieldExists = (typeof content[field] == 'string')\n                ;\n                if(fieldExists) {\n                  if( content[field].search(matchRegExp) !== -1) {\n                    // content starts with value (first in results)\n                    addResult(results, content);\n                  }\n                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\n                    // content fuzzy matches (last in results)\n                    addResult(fuzzyResults, content);\n                  }\n                }\n              });\n            });\n            return $.merge(results, fuzzyResults);\n          }\n        },\n\n        fuzzySearch: function(query, term) {\n          var\n            termLength  = term.length,\n            queryLength = query.length\n          ;\n          if(typeof query !== 'string') {\n            return false;\n          }\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(queryLength > termLength) {\n            return false;\n          }\n          if(queryLength === termLength) {\n            return (query === term);\n          }\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n            var\n              queryCharacter = query.charCodeAt(characterIndex)\n            ;\n            while(nextCharacterIndex < termLength) {\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n                continue search;\n              }\n            }\n            return false;\n          }\n          return true;\n        },\n\n        parse: {\n          response: function(response, searchTerm) {\n            var\n              searchHTML = module.generateResults(response)\n            ;\n            module.verbose('Parsing server response', response);\n            if(response !== undefined) {\n              if(searchTerm !== undefined && response[fields.results] !== undefined) {\n                module.addResults(searchHTML);\n                module.inject.id(response[fields.results]);\n                module.write.cache(searchTerm, {\n                  html    : searchHTML,\n                  results : response[fields.results]\n                });\n                module.save.results(response[fields.results]);\n              }\n            }\n          }\n        },\n\n        cancel: {\n          query: function() {\n            if( module.can.useAPI() ) {\n              $module.api('abort');\n            }\n          }\n        },\n\n        has: {\n          minimumCharacters: function() {\n            var\n              searchTerm    = module.get.value(),\n              numCharacters = searchTerm.length\n            ;\n            return (numCharacters >= settings.minCharacters);\n          },\n          results: function() {\n            if($results.length === 0) {\n              return false;\n            }\n            var\n              html = $results.html()\n            ;\n            return html != '';\n          }\n        },\n\n        clear: {\n          cache: function(value) {\n            var\n              cache = $module.data(metadata.cache)\n            ;\n            if(!value) {\n              module.debug('Clearing cache', value);\n              $module.removeData(metadata.cache);\n            }\n            else if(value && cache && cache[value]) {\n              module.debug('Removing value from cache', value);\n              delete cache[value];\n              $module.data(metadata.cache, cache);\n            }\n          }\n        },\n\n        read: {\n          cache: function(name) {\n            var\n              cache = $module.data(metadata.cache)\n            ;\n            if(settings.cache) {\n              module.verbose('Checking cache for generated html for query', name);\n              return (typeof cache == 'object') && (cache[name] !== undefined)\n                ? cache[name]\n                : false\n              ;\n            }\n            return false;\n          }\n        },\n\n        create: {\n          id: function(resultIndex, categoryIndex) {\n            var\n              resultID      = (resultIndex + 1), // not zero indexed\n              categoryID    = (categoryIndex + 1),\n              firstCharCode,\n              letterID,\n              id\n            ;\n            if(categoryIndex !== undefined) {\n              // start char code for \"A\"\n              letterID = String.fromCharCode(97 + categoryIndex);\n              id          = letterID + resultID;\n              module.verbose('Creating category result id', id);\n            }\n            else {\n              id = resultID;\n              module.verbose('Creating result id', id);\n            }\n            return id;\n          },\n          results: function() {\n            if($results.length === 0) {\n              $results = $('<div />')\n                .addClass(className.results)\n                .appendTo($module)\n              ;\n            }\n          }\n        },\n\n        inject: {\n          result: function(result, resultIndex, categoryIndex) {\n            module.verbose('Injecting result into results');\n            var\n              $selectedResult = (categoryIndex !== undefined)\n                ? $results\n                    .children().eq(categoryIndex)\n                      .children(selector.result).eq(resultIndex)\n                : $results\n                    .children(selector.result).eq(resultIndex)\n            ;\n            module.verbose('Injecting results metadata', $selectedResult);\n            $selectedResult\n              .data(metadata.result, result)\n            ;\n          },\n          id: function(results) {\n            module.debug('Injecting unique ids into results');\n            var\n              // since results may be object, we must use counters\n              categoryIndex = 0,\n              resultIndex   = 0\n            ;\n            if(settings.type === 'category') {\n              // iterate through each category result\n              $.each(results, function(index, category) {\n                resultIndex = 0;\n                $.each(category.results, function(index, value) {\n                  var\n                    result = category.results[index]\n                  ;\n                  if(result.id === undefined) {\n                    result.id = module.create.id(resultIndex, categoryIndex);\n                  }\n                  module.inject.result(result, resultIndex, categoryIndex);\n                  resultIndex++;\n                });\n                categoryIndex++;\n              });\n            }\n            else {\n              // top level\n              $.each(results, function(index, value) {\n                var\n                  result = results[index]\n                ;\n                if(result.id === undefined) {\n                  result.id = module.create.id(resultIndex);\n                }\n                module.inject.result(result, resultIndex);\n                resultIndex++;\n              });\n            }\n            return results;\n          }\n        },\n\n        save: {\n          results: function(results) {\n            module.verbose('Saving current search results to metadata', results);\n            $module.data(metadata.results, results);\n          }\n        },\n\n        write: {\n          cache: function(name, value) {\n            var\n              cache = ($module.data(metadata.cache) !== undefined)\n                ? $module.data(metadata.cache)\n                : {}\n            ;\n            if(settings.cache) {\n              module.verbose('Writing generated html to cache', name, value);\n              cache[name] = value;\n              $module\n                .data(metadata.cache, cache)\n              ;\n            }\n          }\n        },\n\n        addResults: function(html) {\n          if( $.isFunction(settings.onResultsAdd) ) {\n            if( settings.onResultsAdd.call($results, html) === false ) {\n              module.debug('onResultsAdd callback cancelled default action');\n              return false;\n            }\n          }\n          if(html) {\n            $results\n              .html(html)\n            ;\n            module.refreshResults();\n            if(settings.selectFirstResult) {\n              module.select.firstResult();\n            }\n            module.showResults();\n          }\n          else {\n            module.hideResults(function() {\n              $results.empty();\n            });\n          }\n        },\n\n        showResults: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(resultsDismissed) {\n            return;\n          }\n          if(!module.is.visible() && module.has.results()) {\n            if( module.can.transition() ) {\n              module.debug('Showing results with css animations');\n              $results\n                .transition({\n                  animation  : settings.transition + ' in',\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    callback();\n                  },\n                  queue      : true\n                })\n              ;\n            }\n            else {\n              module.debug('Showing results with javascript');\n              $results\n                .stop()\n                .fadeIn(settings.duration, settings.easing)\n              ;\n            }\n            settings.onResultsOpen.call($results);\n          }\n        },\n        hideResults: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.visible() ) {\n            if( module.can.transition() ) {\n              module.debug('Hiding results with css animations');\n              $results\n                .transition({\n                  animation  : settings.transition + ' out',\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    callback();\n                  },\n                  queue      : true\n                })\n              ;\n            }\n            else {\n              module.debug('Hiding results with javascript');\n              $results\n                .stop()\n                .fadeOut(settings.duration, settings.easing)\n              ;\n            }\n            settings.onResultsClose.call($results);\n          }\n        },\n\n        generateResults: function(response) {\n          module.debug('Generating html from response', response);\n          var\n            template       = settings.templates[settings.type],\n            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\n            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\n            html           = ''\n          ;\n          if(isProperObject || isProperArray ) {\n            if(settings.maxResults > 0) {\n              if(isProperObject) {\n                if(settings.type == 'standard') {\n                  module.error(error.maxResults);\n                }\n              }\n              else {\n                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\n              }\n            }\n            if($.isFunction(template)) {\n              html = template(response, fields);\n            }\n            else {\n              module.error(error.noTemplate, false);\n            }\n          }\n          else if(settings.showNoResults) {\n            html = module.displayMessage(error.noResults, 'empty');\n          }\n          settings.onResults.call(element, response);\n          return html;\n        },\n\n        displayMessage: function(text, type) {\n          type = type || 'standard';\n          module.debug('Displaying message', text, type);\n          module.addResults( settings.templates.message(text, type) );\n          return settings.templates.message(text, type);\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.search.settings = {\n\n  name              : 'Search',\n  namespace         : 'search',\n\n  silent            : false,\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  // template to use (specified in settings.templates)\n  type              : 'standard',\n\n  // minimum characters required to search\n  minCharacters     : 1,\n\n  // whether to select first result after searching automatically\n  selectFirstResult : false,\n\n  // API config\n  apiSettings       : false,\n\n  // object to search\n  source            : false,\n\n  // Whether search should query current term on focus\n  searchOnFocus     : true,\n\n  // fields to search\n  searchFields   : [\n    'title',\n    'description'\n  ],\n\n  // field to display in standard results template\n  displayField   : '',\n\n  // whether to include fuzzy results in local search\n  searchFullText : true,\n\n  // whether to add events to prompt automatically\n  automatic      : true,\n\n  // delay before hiding menu after blur\n  hideDelay      : 0,\n\n  // delay before searching\n  searchDelay    : 200,\n\n  // maximum results returned from local\n  maxResults     : 7,\n\n  // whether to store lookups in local cache\n  cache          : true,\n\n  // whether no results errors should be shown\n  showNoResults  : true,\n\n  // transition settings\n  transition     : 'scale',\n  duration       : 200,\n  easing         : 'easeOutExpo',\n\n  // callbacks\n  onSelect       : false,\n  onResultsAdd   : false,\n\n  onSearchQuery  : function(query){},\n  onResults      : function(response){},\n\n  onResultsOpen  : function(){},\n  onResultsClose : function(){},\n\n  className: {\n    animating : 'animating',\n    active    : 'active',\n    empty     : 'empty',\n    focus     : 'focus',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    results   : 'results',\n    pressed   : 'down'\n  },\n\n  error : {\n    source      : 'Cannot search. No source used, and Semantic API module was not included',\n    noResults   : 'Your search returned no results',\n    logging     : 'Error in debug logging, exiting.',\n    noEndpoint  : 'No search endpoint was specified',\n    noTemplate  : 'A valid template name was not specified.',\n    serverError : 'There was an issue querying the server.',\n    maxResults  : 'Results must be an array to use maxResults setting',\n    method      : 'The method you called is not defined.'\n  },\n\n  metadata: {\n    cache   : 'cache',\n    results : 'results',\n    result  : 'result'\n  },\n\n  regExp: {\n    escape     : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    beginsWith : '(?:\\s|^)'\n  },\n\n  // maps api response attributes to internal representation\n  fields: {\n    categories      : 'results',     // array of categories (category view)\n    categoryName    : 'name',        // name of category (category view)\n    categoryResults : 'results',     // array of results (category view)\n    description     : 'description', // result description\n    image           : 'image',       // result image\n    price           : 'price',       // result price\n    results         : 'results',     // array of results (standard)\n    title           : 'title',       // result title\n    url             : 'url',         // result url\n    action          : 'action',      // \"view more\" object name\n    actionText      : 'text',        // \"view more\" text\n    actionURL       : 'url'          // \"view more\" url\n  },\n\n  selector : {\n    prompt       : '.prompt',\n    searchButton : '.search.button',\n    results      : '.results',\n    message      : '.results > .message',\n    category     : '.category',\n    result       : '.result',\n    title        : '.title, .name'\n  },\n\n  templates: {\n    escape: function(string) {\n      var\n        badChars     = /[&<>\"'`]/g,\n        shouldEscape = /[&<>\"'`]/,\n        escape       = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#x27;\",\n          \"`\": \"&#x60;\"\n        },\n        escapedChar  = function(chr) {\n          return escape[chr];\n        }\n      ;\n      if(shouldEscape.test(string)) {\n        return string.replace(badChars, escapedChar);\n      }\n      return string;\n    },\n    message: function(message, type) {\n      var\n        html = ''\n      ;\n      if(message !== undefined && type !== undefined) {\n        html +=  ''\n          + '<div class=\"message ' + type + '\">'\n        ;\n        // message type\n        if(type == 'empty') {\n          html += ''\n            + '<div class=\"header\">No Results</div class=\"header\">'\n            + '<div class=\"description\">' + message + '</div class=\"description\">'\n          ;\n        }\n        else {\n          html += ' <div class=\"description\">' + message + '</div>';\n        }\n        html += '</div>';\n      }\n      return html;\n    },\n    category: function(response, fields) {\n      var\n        html = '',\n        escape = $.fn.search.settings.templates.escape\n      ;\n      if(response[fields.categoryResults] !== undefined) {\n\n        // each category\n        $.each(response[fields.categoryResults], function(index, category) {\n          if(category[fields.results] !== undefined && category.results.length > 0) {\n\n            html  += '<div class=\"category\">';\n\n            if(category[fields.categoryName] !== undefined) {\n              html += '<div class=\"name\">' + category[fields.categoryName] + '</div>';\n            }\n\n            // each item inside category\n            $.each(category.results, function(index, result) {\n              if(result[fields.url]) {\n                html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n              }\n              else {\n                html  += '<a class=\"result\">';\n              }\n              if(result[fields.image] !== undefined) {\n                html += ''\n                  + '<div class=\"image\">'\n                  + ' <img src=\"' + result[fields.image] + '\">'\n                  + '</div>'\n                ;\n              }\n              html += '<div class=\"content\">';\n              if(result[fields.price] !== undefined) {\n                html += '<div class=\"price\">' + result[fields.price] + '</div>';\n              }\n              if(result[fields.title] !== undefined) {\n                html += '<div class=\"title\">' + result[fields.title] + '</div>';\n              }\n              if(result[fields.description] !== undefined) {\n                html += '<div class=\"description\">' + result[fields.description] + '</div>';\n              }\n              html  += ''\n                + '</div>'\n              ;\n              html += '</a>';\n            });\n            html  += ''\n              + '</div>'\n            ;\n          }\n        });\n        if(response[fields.action]) {\n          html += ''\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n          +   response[fields.action][fields.actionText]\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    },\n    standard: function(response, fields) {\n      var\n        html = ''\n      ;\n      if(response[fields.results] !== undefined) {\n\n        // each result\n        $.each(response[fields.results], function(index, result) {\n          if(result[fields.url]) {\n            html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n          }\n          else {\n            html  += '<a class=\"result\">';\n          }\n          if(result[fields.image] !== undefined) {\n            html += ''\n              + '<div class=\"image\">'\n              + ' <img src=\"' + result[fields.image] + '\">'\n              + '</div>'\n            ;\n          }\n          html += '<div class=\"content\">';\n          if(result[fields.price] !== undefined) {\n            html += '<div class=\"price\">' + result[fields.price] + '</div>';\n          }\n          if(result[fields.title] !== undefined) {\n            html += '<div class=\"title\">' + result[fields.title] + '</div>';\n          }\n          if(result[fields.description] !== undefined) {\n            html += '<div class=\"description\">' + result[fields.description] + '</div>';\n          }\n          html  += ''\n            + '</div>'\n          ;\n          html += '</a>';\n        });\n\n        if(response[fields.action]) {\n          html += ''\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n          +   response[fields.action][fields.actionText]\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    }\n  }\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Shape\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.shape = function(parameters) {\n  var\n    $allModules     = $(this),\n    $body           = $('body'),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        moduleSelector = $allModules.selector || '',\n        settings       = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.shape.settings, parameters)\n          : $.extend({}, $.fn.shape.settings),\n\n        // internal aliases\n        namespace     = settings.namespace,\n        selector      = settings.selector,\n        error         = settings.error,\n        className     = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // selector cache\n        $module       = $(this),\n        $sides        = $module.find(selector.sides),\n        $side         = $module.find(selector.side),\n\n        // private variables\n        nextIndex = false,\n        $activeSide,\n        $nextSide,\n\n        // standard module\n        element       = this,\n        instance      = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module for', element);\n          module.set.defaultSide();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache for', element);\n          $module = $(element);\n          $sides  = $(this).find(selector.shape);\n          $side   = $(this).find(selector.side);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          var\n            shape          = $sides[0] || document.createElement('div'),\n            fakeAssignment = shape.offsetWidth\n          ;\n        },\n\n        animate: function(propertyObject, callback) {\n          module.verbose('Animating box with properties', propertyObject);\n          callback = callback || function(event) {\n            module.verbose('Executing animation callback');\n            if(event !== undefined) {\n              event.stopPropagation();\n            }\n            module.reset();\n            module.set.active();\n          };\n          settings.beforeChange.call($nextSide[0]);\n          if(module.get.transitionEvent()) {\n            module.verbose('Starting CSS animation');\n            $module\n              .addClass(className.animating)\n            ;\n            $sides\n              .css(propertyObject)\n              .one(module.get.transitionEvent(), callback)\n            ;\n            module.set.duration(settings.duration);\n            requestAnimationFrame(function() {\n              $module\n                .addClass(className.animating)\n              ;\n              $activeSide\n                .addClass(className.hidden)\n              ;\n            });\n          }\n          else {\n            callback();\n          }\n        },\n\n        queue: function(method) {\n          module.debug('Queueing animation of', method);\n          $sides\n            .one(module.get.transitionEvent(), function() {\n              module.debug('Executing queued animation');\n              setTimeout(function(){\n                $module.shape(method);\n              }, 0);\n            })\n          ;\n        },\n\n        reset: function() {\n          module.verbose('Animating states reset');\n          $module\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          // removeAttr style does not consistently work in safari\n          $sides\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          $side\n            .attr('style', '')\n            .removeAttr('style')\n            .removeClass(className.hidden)\n          ;\n          $nextSide\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n        },\n\n        is: {\n          complete: function() {\n            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\n          },\n          animating: function() {\n            return $module.hasClass(className.animating);\n          }\n        },\n\n        set: {\n\n          defaultSide: function() {\n            $activeSide = $module.find('.' + settings.className.active);\n            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n            nextIndex = false;\n            module.verbose('Active side set to', $activeSide);\n            module.verbose('Next side set to', $nextSide);\n          },\n\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting animation duration', duration);\n            if(settings.duration || settings.duration === 0) {\n              $sides.add($side)\n                .css({\n                  '-webkit-transition-duration': duration,\n                  '-moz-transition-duration': duration,\n                  '-ms-transition-duration': duration,\n                  '-o-transition-duration': duration,\n                  'transition-duration': duration\n                })\n              ;\n            }\n          },\n\n          currentStageSize: function() {\n            var\n              $activeSide = $module.find('.' + settings.className.active),\n              width       = $activeSide.outerWidth(true),\n              height      = $activeSide.outerHeight(true)\n            ;\n            $module\n              .css({\n                width: width,\n                height: height\n              })\n            ;\n          },\n\n          stageSize: function() {\n            var\n              $clone      = $module.clone().addClass(className.loading),\n              $activeSide = $clone.find('.' + settings.className.active),\n              $nextSide   = (nextIndex)\n                ? $clone.find(selector.side).eq(nextIndex)\n                : ( $activeSide.next(selector.side).length > 0 )\n                  ? $activeSide.next(selector.side)\n                  : $clone.find(selector.side).first(),\n              newWidth    = (settings.width == 'next')\n                ? $nextSide.outerWidth(true)\n                : (settings.width == 'initial')\n                  ? $module.width()\n                  : settings.width,\n              newHeight    = (settings.height == 'next')\n                ? $nextSide.outerHeight(true)\n                : (settings.height == 'initial')\n                  ? $module.height()\n                  : settings.height\n            ;\n            $activeSide.removeClass(className.active);\n            $nextSide.addClass(className.active);\n            $clone.insertAfter($module);\n            $clone.remove();\n            if(settings.width != 'auto') {\n              $module.css('width', newWidth + settings.jitter);\n              module.verbose('Specifying width during animation', newWidth);\n            }\n            if(settings.height != 'auto') {\n              $module.css('height', newHeight + settings.jitter);\n              module.verbose('Specifying height during animation', newHeight);\n            }\n          },\n\n          nextSide: function(selector) {\n            nextIndex = selector;\n            $nextSide = $side.filter(selector);\n            nextIndex = $side.index($nextSide);\n            if($nextSide.length === 0) {\n              module.set.defaultSide();\n              module.error(error.side);\n            }\n            module.verbose('Next side manually set to', $nextSide);\n          },\n\n          active: function() {\n            module.verbose('Setting new side to active', $nextSide);\n            $side\n              .removeClass(className.active)\n            ;\n            $nextSide\n              .addClass(className.active)\n            ;\n            settings.onChange.call($nextSide[0]);\n            module.set.defaultSide();\n          }\n        },\n\n        flip: {\n\n          up: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping up', $nextSide);\n              var\n                transform = module.get.transform.up()\n              ;\n              module.set.stageSize();\n              module.stage.above();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip up');\n            }\n          },\n\n          down: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping down', $nextSide);\n              var\n                transform = module.get.transform.down()\n              ;\n              module.set.stageSize();\n              module.stage.below();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip down');\n            }\n          },\n\n          left: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping left', $nextSide);\n              var\n                transform = module.get.transform.left()\n              ;\n              module.set.stageSize();\n              module.stage.left();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip left');\n            }\n          },\n\n          right: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping right', $nextSide);\n              var\n                transform = module.get.transform.right()\n              ;\n              module.set.stageSize();\n              module.stage.right();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip right');\n            }\n          },\n\n          over: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping over', $nextSide);\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.over() );\n            }\n            else {\n              module.queue('flip over');\n            }\n          },\n\n          back: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping back', $nextSide);\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.back() );\n            }\n            else {\n              module.queue('flip back');\n            }\n          }\n\n        },\n\n        get: {\n\n          transform: {\n            up: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                  z: -($activeSide.outerHeight(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\n              };\n            },\n\n            down: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                  z: -($activeSide.outerHeight(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\n              };\n            },\n\n            left: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n                  z : -($activeSide.outerWidth(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\n              };\n            },\n\n            right: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n                  z : -($activeSide.outerWidth(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\n              };\n            },\n\n            over: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\n              };\n            },\n\n            back: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\n              };\n            }\n          },\n\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          nextSide: function() {\n            return ( $activeSide.next(selector.side).length > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n          }\n\n        },\n\n        stage: {\n\n          above: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight(true) / 2),\n                  next   : ($activeSide.outerHeight(true) / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          below: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight(true) / 2),\n                  next   : ($activeSide.outerHeight(true) / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          left: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          right: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          behind: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-180deg)'\n              })\n            ;\n          }\n        },\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.shape.settings = {\n\n  // module info\n  name : 'Shape',\n\n  // hide all debug content\n  silent     : false,\n\n  // debug content outputted to console\n  debug      : false,\n\n  // verbose debug output\n  verbose    : false,\n\n  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\n  jitter     : 0,\n\n  // performance data output\n  performance: true,\n\n  // event namespace\n  namespace  : 'shape',\n\n  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\n  width: 'initial',\n\n  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\n  height: 'initial',\n\n  // callback occurs on side change\n  beforeChange : function() {},\n  onChange     : function() {},\n\n  // allow animation to same side\n  allowRepeats: false,\n\n  // animation duration\n  duration   : false,\n\n  // possible errors\n  error: {\n    side   : 'You tried to switch to a side that does not exist.',\n    method : 'The method you called is not defined'\n  },\n\n  // classnames used\n  className   : {\n    animating : 'animating',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    active    : 'active'\n  },\n\n  // selectors used\n  selector    : {\n    sides : '.sides',\n    side  : '.side'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Sidebar\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.sidebar = function(parameters) {\n  var\n    $allModules     = $(this),\n    $window         = $(window),\n    $document       = $(document),\n    $html           = $('html'),\n    $head           = $('head'),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\n          : $.extend({}, $.fn.sidebar.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        regExp          = settings.regExp,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n\n        $sidebars       = $module.children(selector.sidebar),\n        $fixed          = $context.children(selector.fixed),\n        $pusher         = $context.children(selector.pusher),\n        $style,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        elementNamespace,\n        id,\n        currentScroll,\n        transitionEvent,\n\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.debug('Initializing sidebar', parameters);\n\n          module.create.id();\n\n          transitionEvent = module.get.transitionEvent();\n\n          if(module.is.ios()) {\n            module.set.ios();\n          }\n\n          // avoids locking rendering if initialized in onReady\n          if(settings.delaySetup) {\n            requestAnimationFrame(module.setup.layout);\n          }\n          else {\n            module.setup.layout();\n          }\n\n          requestAnimationFrame(function() {\n            module.setup.cache();\n          });\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        create: {\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\n            elementNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n          if(module.is.ios()) {\n            module.remove.ios();\n          }\n          // bound by uuid\n          $context.off(elementNamespace);\n          $window.off(elementNamespace);\n          $document.off(elementNamespace);\n        },\n\n        event: {\n          clickaway: function(event) {\n            var\n              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\n              clickedContext  = ($context.is(event.target))\n            ;\n            if(clickedInPusher) {\n              module.verbose('User clicked on dimmed page');\n              module.hide();\n            }\n            if(clickedContext) {\n              module.verbose('User clicked on dimmable context (scaled out page)');\n              module.hide();\n            }\n          },\n          touch: function(event) {\n            //event.stopPropagation();\n          },\n          containScroll: function(event) {\n            if(element.scrollTop <= 0)  {\n              element.scrollTop = 1;\n            }\n            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\n              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\n            }\n          },\n          scroll: function(event) {\n            if( $(event.target).closest(selector.sidebar).length === 0 ) {\n              event.preventDefault();\n            }\n          }\n        },\n\n        bind: {\n          clickaway: function() {\n            module.verbose('Adding clickaway events to context', $context);\n            if(settings.closable) {\n              $context\n                .on('click'    + elementNamespace, module.event.clickaway)\n                .on('touchend' + elementNamespace, module.event.clickaway)\n              ;\n            }\n          },\n          scrollLock: function() {\n            if(settings.scrollLock) {\n              module.debug('Disabling page scroll');\n              $window\n                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\n              ;\n            }\n            module.verbose('Adding events to contain sidebar scroll');\n            $document\n              .on('touchmove' + elementNamespace, module.event.touch)\n            ;\n            $module\n              .on('scroll' + eventNamespace, module.event.containScroll)\n            ;\n          }\n        },\n        unbind: {\n          clickaway: function() {\n            module.verbose('Removing clickaway events from context', $context);\n            $context.off(elementNamespace);\n          },\n          scrollLock: function() {\n            module.verbose('Removing scroll lock from page');\n            $document.off(elementNamespace);\n            $window.off(elementNamespace);\n            $module.off('scroll' + eventNamespace);\n          }\n        },\n\n        add: {\n          inlineCSS: function() {\n            var\n              width     = module.cache.width  || $module.outerWidth(),\n              height    = module.cache.height || $module.outerHeight(),\n              isRTL     = module.is.rtl(),\n              direction = module.get.direction(),\n              distance  = {\n                left   : width,\n                right  : -width,\n                top    : height,\n                bottom : -height\n              },\n              style\n            ;\n\n            if(isRTL){\n              module.verbose('RTL detected, flipping widths');\n              distance.left = -width;\n              distance.right = width;\n            }\n\n            style  = '<style>';\n\n            if(direction === 'left' || direction === 'right') {\n              module.debug('Adding CSS rules for animation distance', width);\n              style  += ''\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                + ' }'\n              ;\n            }\n            else if(direction === 'top' || direction == 'bottom') {\n              style  += ''\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                + ' }'\n              ;\n            }\n\n            /* IE is only browser not to create context with transforms */\n            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\n            if( module.is.ie() ) {\n              if(direction === 'left' || direction === 'right') {\n                module.debug('Adding CSS rules for animation distance', width);\n                style  += ''\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                  + ' }'\n                ;\n              }\n              else if(direction === 'top' || direction == 'bottom') {\n                style  += ''\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                  + ' }'\n                ;\n              }\n              /* opposite sides visible forces content overlay */\n              style += ''\n                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\n                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\n                + '   -webkit-transform: translate3d(0px, 0, 0);'\n                + '           transform: translate3d(0px, 0, 0);'\n                + ' }'\n              ;\n            }\n            style += '</style>';\n            $style = $(style)\n              .appendTo($head)\n            ;\n            module.debug('Adding sizing css to head', $style);\n          }\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $context  = $(settings.context);\n          $sidebars = $context.children(selector.sidebar);\n          $pusher   = $context.children(selector.pusher);\n          $fixed    = $context.children(selector.fixed);\n          module.clear.cache();\n        },\n\n        refreshSidebars: function() {\n          module.verbose('Refreshing other sidebars');\n          $sidebars = $context.children(selector.sidebar);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          element.style.display = 'none';\n          var ignored = element.offsetHeight;\n          element.scrollTop = element.scrollTop;\n          element.style.display = '';\n        },\n\n        setup: {\n          cache: function() {\n            module.cache = {\n              width  : $module.outerWidth(),\n              height : $module.outerHeight(),\n              rtl    : ($module.css('direction') == 'rtl')\n            };\n          },\n          layout: function() {\n            if( $context.children(selector.pusher).length === 0 ) {\n              module.debug('Adding wrapper element for sidebar');\n              module.error(error.pusher);\n              $pusher = $('<div class=\"pusher\" />');\n              $context\n                .children()\n                  .not(selector.omitted)\n                  .not($sidebars)\n                  .wrapAll($pusher)\n              ;\n              module.refresh();\n            }\n            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\n              module.debug('Moved sidebar to correct parent element');\n              module.error(error.movedSidebar, element);\n              $module.detach().prependTo($context);\n              module.refresh();\n            }\n            module.clear.cache();\n            module.set.pushable();\n            module.set.direction();\n          }\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.length > 0) {\n            module.debug('Attaching sidebar events to element', selector, event);\n            $toggle\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound, selector);\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(module.is.hidden()) {\n            module.refreshSidebars();\n            if(settings.overlay)  {\n              module.error(error.overlay);\n              settings.transition = 'overlay';\n            }\n            module.refresh();\n            if(module.othersActive()) {\n              module.debug('Other sidebars currently visible');\n              if(settings.exclusive) {\n                // if not overlay queue animation after hide\n                if(settings.transition != 'overlay') {\n                  module.hideOthers(module.show);\n                  return;\n                }\n                else {\n                  module.hideOthers();\n                }\n              }\n              else {\n                settings.transition = 'overlay';\n              }\n            }\n            module.pushPage(function() {\n              callback.call(element);\n              settings.onShow.call(element);\n            });\n            settings.onChange.call(element);\n            settings.onVisible.call(element);\n          }\n          else {\n            module.debug('Sidebar is already visible');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(module.is.visible() || module.is.animating()) {\n            module.debug('Hiding sidebar', callback);\n            module.refreshSidebars();\n            module.pullPage(function() {\n              callback.call(element);\n              settings.onHidden.call(element);\n            });\n            settings.onChange.call(element);\n            settings.onHide.call(element);\n          }\n        },\n\n        othersAnimating: function() {\n          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\n        },\n        othersVisible: function() {\n          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\n        },\n        othersActive: function() {\n          return(module.othersVisible() || module.othersAnimating());\n        },\n\n        hideOthers: function(callback) {\n          var\n            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\n            sidebarCount   = $otherSidebars.length,\n            callbackCount  = 0\n          ;\n          callback = callback || function(){};\n          $otherSidebars\n            .sidebar('hide', function() {\n              callbackCount++;\n              if(callbackCount == sidebarCount) {\n                callback();\n              }\n            })\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Determining toggled direction');\n          if(module.is.hidden()) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        pushPage: function(callback) {\n          var\n            transition = module.get.transition(),\n            $transition = (transition === 'overlay' || module.othersActive())\n              ? $module\n              : $pusher,\n            animate,\n            dim,\n            transitionEnd\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(settings.transition == 'scale down') {\n            module.scrollToTop();\n          }\n          module.set.transition(transition);\n          module.repaint();\n          animate = function() {\n            module.bind.clickaway();\n            module.add.inlineCSS();\n            module.set.animating();\n            module.set.visible();\n          };\n          dim = function() {\n            module.set.dimmed();\n          };\n          transitionEnd = function(event) {\n            if( event.target == $transition[0] ) {\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n              module.remove.animating();\n              module.bind.scrollLock();\n              callback.call(element);\n            }\n          };\n          $transition.off(transitionEvent + elementNamespace);\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n          requestAnimationFrame(animate);\n          if(settings.dimPage && !module.othersVisible()) {\n            requestAnimationFrame(dim);\n          }\n        },\n\n        pullPage: function(callback) {\n          var\n            transition = module.get.transition(),\n            $transition = (transition == 'overlay' || module.othersActive())\n              ? $module\n              : $pusher,\n            animate,\n            transitionEnd\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.verbose('Removing context push state', module.get.direction());\n\n          module.unbind.clickaway();\n          module.unbind.scrollLock();\n\n          animate = function() {\n            module.set.transition(transition);\n            module.set.animating();\n            module.remove.visible();\n            if(settings.dimPage && !module.othersVisible()) {\n              $pusher.removeClass(className.dimmed);\n            }\n          };\n          transitionEnd = function(event) {\n            if( event.target == $transition[0] ) {\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n              module.remove.animating();\n              module.remove.transition();\n              module.remove.inlineCSS();\n              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\n                module.scrollBack();\n              }\n              callback.call(element);\n            }\n          };\n          $transition.off(transitionEvent + elementNamespace);\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n          requestAnimationFrame(animate);\n        },\n\n        scrollToTop: function() {\n          module.verbose('Scrolling to top of page to avoid animation issues');\n          currentScroll = $(window).scrollTop();\n          $module.scrollTop(0);\n          window.scrollTo(0, 0);\n        },\n\n        scrollBack: function() {\n          module.verbose('Scrolling back to original page position');\n          window.scrollTo(0, currentScroll);\n        },\n\n        clear: {\n          cache: function() {\n            module.verbose('Clearing cached dimensions');\n            module.cache = {};\n          }\n        },\n\n        set: {\n\n          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\n          ios: function() {\n            $html.addClass(className.ios);\n          },\n\n          // container\n          pushed: function() {\n            $context.addClass(className.pushed);\n          },\n          pushable: function() {\n            $context.addClass(className.pushable);\n          },\n\n          // pusher\n          dimmed: function() {\n            $pusher.addClass(className.dimmed);\n          },\n\n          // sidebar\n          active: function() {\n            $module.addClass(className.active);\n          },\n          animating: function() {\n            $module.addClass(className.animating);\n          },\n          transition: function(transition) {\n            transition = transition || module.get.transition();\n            $module.addClass(transition);\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            $module.addClass(className[direction]);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          overlay: function() {\n            $module.addClass(className.overlay);\n          }\n        },\n        remove: {\n\n          inlineCSS: function() {\n            module.debug('Removing inline css styles', $style);\n            if($style && $style.length > 0) {\n              $style.remove();\n            }\n          },\n\n          // ios scroll on html not document\n          ios: function() {\n            $html.removeClass(className.ios);\n          },\n\n          // context\n          pushed: function() {\n            $context.removeClass(className.pushed);\n          },\n          pushable: function() {\n            $context.removeClass(className.pushable);\n          },\n\n          // sidebar\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          animating: function() {\n            $module.removeClass(className.animating);\n          },\n          transition: function(transition) {\n            transition = transition || module.get.transition();\n            $module.removeClass(transition);\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            $module.removeClass(className[direction]);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          overlay: function() {\n            $module.removeClass(className.overlay);\n          }\n        },\n\n        get: {\n          direction: function() {\n            if($module.hasClass(className.top)) {\n              return className.top;\n            }\n            else if($module.hasClass(className.right)) {\n              return className.right;\n            }\n            else if($module.hasClass(className.bottom)) {\n              return className.bottom;\n            }\n            return className.left;\n          },\n          transition: function() {\n            var\n              direction = module.get.direction(),\n              transition\n            ;\n            transition = ( module.is.mobile() )\n              ? (settings.mobileTransition == 'auto')\n                ? settings.defaultTransition.mobile[direction]\n                : settings.mobileTransition\n              : (settings.transition == 'auto')\n                ? settings.defaultTransition.computer[direction]\n                : settings.transition\n            ;\n            module.verbose('Determined transition', transition);\n            return transition;\n          },\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          }\n        },\n\n        is: {\n\n          ie: function() {\n            var\n              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\n              isIE   = ('ActiveXObject' in window)\n            ;\n            return (isIE11 || isIE);\n          },\n\n          ios: function() {\n            var\n              userAgent      = navigator.userAgent,\n              isIOS          = userAgent.match(regExp.ios),\n              isMobileChrome = userAgent.match(regExp.mobileChrome)\n            ;\n            if(isIOS && !isMobileChrome) {\n              module.verbose('Browser was found to be iOS', userAgent);\n              return true;\n            }\n            else {\n              return false;\n            }\n          },\n          mobile: function() {\n            var\n              userAgent    = navigator.userAgent,\n              isMobile     = userAgent.match(regExp.mobile)\n            ;\n            if(isMobile) {\n              module.verbose('Browser was found to be mobile', userAgent);\n              return true;\n            }\n            else {\n              module.verbose('Browser is not mobile, using regular transition', userAgent);\n              return false;\n            }\n          },\n          hidden: function() {\n            return !module.is.visible();\n          },\n          visible: function() {\n            return $module.hasClass(className.visible);\n          },\n          // alias\n          open: function() {\n            return module.is.visible();\n          },\n          closed: function() {\n            return module.is.hidden();\n          },\n          vertical: function() {\n            return $module.hasClass(className.top);\n          },\n          animating: function() {\n            return $context.hasClass(className.animating);\n          },\n          rtl: function () {\n            if(module.cache.rtl === undefined) {\n              module.cache.rtl = ($module.css('direction') == 'rtl');\n            }\n            return module.cache.rtl;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      }\n    ;\n\n    if(methodInvoked) {\n      if(instance === undefined) {\n        module.initialize();\n      }\n      module.invoke(query);\n    }\n    else {\n      if(instance !== undefined) {\n        module.invoke('destroy');\n      }\n      module.initialize();\n    }\n  });\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sidebar.settings = {\n\n  name              : 'Sidebar',\n  namespace         : 'sidebar',\n\n  silent            : false,\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  transition        : 'auto',\n  mobileTransition  : 'auto',\n\n  defaultTransition : {\n    computer: {\n      left   : 'uncover',\n      right  : 'uncover',\n      top    : 'overlay',\n      bottom : 'overlay'\n    },\n    mobile: {\n      left   : 'uncover',\n      right  : 'uncover',\n      top    : 'overlay',\n      bottom : 'overlay'\n    }\n  },\n\n  context           : 'body',\n  exclusive         : false,\n  closable          : true,\n  dimPage           : true,\n  scrollLock        : false,\n  returnScroll      : false,\n  delaySetup        : false,\n\n  duration          : 500,\n\n  onChange          : function(){},\n  onShow            : function(){},\n  onHide            : function(){},\n\n  onHidden          : function(){},\n  onVisible         : function(){},\n\n  className         : {\n    active    : 'active',\n    animating : 'animating',\n    dimmed    : 'dimmed',\n    ios       : 'ios',\n    pushable  : 'pushable',\n    pushed    : 'pushed',\n    right     : 'right',\n    top       : 'top',\n    left      : 'left',\n    bottom    : 'bottom',\n    visible   : 'visible'\n  },\n\n  selector: {\n    fixed   : '.fixed',\n    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\n    pusher  : '.pusher',\n    sidebar : '.ui.sidebar'\n  },\n\n  regExp: {\n    ios          : /(iPad|iPhone|iPod)/g,\n    mobileChrome : /(CriOS)/g,\n    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\n  },\n\n  error   : {\n    method       : 'The method you called is not defined.',\n    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\n    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\n    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\n    notFound     : 'There were no elements that matched the specified selector'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Sticky\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.sticky = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings              = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\n          : $.extend({}, $.fn.sticky.settings),\n\n        className             = settings.className,\n        namespace             = settings.namespace,\n        error                 = settings.error,\n\n        eventNamespace        = '.' + namespace,\n        moduleNamespace       = 'module-' + namespace,\n\n        $module               = $(this),\n        $window               = $(window),\n        $scroll               = $(settings.scrollContext),\n        $container,\n        $context,\n\n        selector              = $module.selector || '',\n        instance              = $module.data(moduleNamespace),\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); },\n\n        element         = this,\n\n        documentObserver,\n        observer,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          module.determineContainer();\n          module.determineContext();\n          module.verbose('Initializing sticky', settings, $container);\n\n          module.save.positions();\n          module.checkErrors();\n          module.bind.events();\n\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance');\n          module.reset();\n          if(documentObserver) {\n            documentObserver.disconnect();\n          }\n          if(observer) {\n            observer.disconnect();\n          }\n          $window\n            .off('load' + eventNamespace, module.event.load)\n            .off('resize' + eventNamespace, module.event.resize)\n          ;\n          $scroll\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n          ;\n          $module.removeData(moduleNamespace);\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            documentObserver = new MutationObserver(module.event.documentChanged);\n            observer         = new MutationObserver(module.event.changed);\n            documentObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe($context[0], {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        determineContainer: function() {\n          if(settings.container) {\n            $container = $(settings.container);\n          }\n          else {\n            $container = $module.offsetParent();\n          }\n        },\n\n        determineContext: function() {\n          if(settings.context) {\n            $context = $(settings.context);\n          }\n          else {\n            $context = $container;\n          }\n          if($context.length === 0) {\n            module.error(error.invalidContext, settings.context, $module);\n            return;\n          }\n        },\n\n        checkErrors: function() {\n          if( module.is.hidden() ) {\n            module.error(error.visible, $module);\n          }\n          if(module.cache.element.height > module.cache.context.height) {\n            module.reset();\n            module.error(error.elementSize, $module);\n            return;\n          }\n        },\n\n        bind: {\n          events: function() {\n            $window\n              .on('load' + eventNamespace, module.event.load)\n              .on('resize' + eventNamespace, module.event.resize)\n            ;\n            // pub/sub pattern\n            $scroll\n              .off('scroll' + eventNamespace)\n              .on('scroll' + eventNamespace, module.event.scroll)\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n            ;\n          }\n        },\n\n        event: {\n          changed: function(mutations) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(function() {\n              module.verbose('DOM tree modified, updating sticky menu', mutations);\n              module.refresh();\n            }, 100);\n          },\n          documentChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          load: function() {\n            module.verbose('Page contents finished loading');\n            requestAnimationFrame(module.refresh);\n          },\n          resize: function() {\n            module.verbose('Window resized');\n            requestAnimationFrame(module.refresh);\n          },\n          scroll: function() {\n            requestAnimationFrame(function() {\n              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\n            });\n          },\n          scrollchange: function(event, scrollPosition) {\n            module.stick(scrollPosition);\n            settings.onScroll.call(element);\n          }\n        },\n\n        refresh: function(hardRefresh) {\n          module.reset();\n          if(!settings.context) {\n            module.determineContext();\n          }\n          if(hardRefresh) {\n            module.determineContainer();\n          }\n          module.save.positions();\n          module.stick();\n          settings.onReposition.call(element);\n        },\n\n        supports: {\n          sticky: function() {\n            var\n              $element = $('<div/>'),\n              element = $element[0]\n            ;\n            $element.addClass(className.supported);\n            return($element.css('position').match('sticky'));\n          }\n        },\n\n        save: {\n          lastScroll: function(scroll) {\n            module.lastScroll = scroll;\n          },\n          elementScroll: function(scroll) {\n            module.elementScroll = scroll;\n          },\n          positions: function() {\n            var\n              scrollContext = {\n                height : $scroll.height()\n              },\n              element = {\n                margin: {\n                  top    : parseInt($module.css('margin-top'), 10),\n                  bottom : parseInt($module.css('margin-bottom'), 10),\n                },\n                offset : $module.offset(),\n                width  : $module.outerWidth(),\n                height : $module.outerHeight()\n              },\n              context = {\n                offset : $context.offset(),\n                height : $context.outerHeight()\n              },\n              container = {\n                height: $container.outerHeight()\n              }\n            ;\n            if( !module.is.standardScroll() ) {\n              module.debug('Non-standard scroll. Removing scroll offset from element offset');\n\n              scrollContext.top  = $scroll.scrollTop();\n              scrollContext.left = $scroll.scrollLeft();\n\n              element.offset.top  += scrollContext.top;\n              context.offset.top  += scrollContext.top;\n              element.offset.left += scrollContext.left;\n              context.offset.left += scrollContext.left;\n            }\n            module.cache = {\n              fits : ( element.height < scrollContext.height ),\n              scrollContext : {\n                height : scrollContext.height\n              },\n              element: {\n                margin : element.margin,\n                top    : element.offset.top - element.margin.top,\n                left   : element.offset.left,\n                width  : element.width,\n                height : element.height,\n                bottom : element.offset.top + element.height\n              },\n              context: {\n                top           : context.offset.top,\n                height        : context.height,\n                bottom        : context.offset.top + context.height\n              }\n            };\n            module.set.containerSize();\n            module.set.size();\n            module.stick();\n            module.debug('Caching element positions', module.cache);\n          }\n        },\n\n        get: {\n          direction: function(scroll) {\n            var\n              direction = 'down'\n            ;\n            scroll = scroll || $scroll.scrollTop();\n            if(module.lastScroll !== undefined) {\n              if(module.lastScroll < scroll) {\n                direction = 'down';\n              }\n              else if(module.lastScroll > scroll) {\n                direction = 'up';\n              }\n            }\n            return direction;\n          },\n          scrollChange: function(scroll) {\n            scroll = scroll || $scroll.scrollTop();\n            return (module.lastScroll)\n              ? (scroll - module.lastScroll)\n              : 0\n            ;\n          },\n          currentElementScroll: function() {\n            if(module.elementScroll) {\n              return module.elementScroll;\n            }\n            return ( module.is.top() )\n              ? Math.abs(parseInt($module.css('top'), 10))    || 0\n              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\n            ;\n          },\n\n          elementScroll: function(scroll) {\n            scroll = scroll || $scroll.scrollTop();\n            var\n              element        = module.cache.element,\n              scrollContext  = module.cache.scrollContext,\n              delta          = module.get.scrollChange(scroll),\n              maxScroll      = (element.height - scrollContext.height + settings.offset),\n              elementScroll  = module.get.currentElementScroll(),\n              possibleScroll = (elementScroll + delta)\n            ;\n            if(module.cache.fits || possibleScroll < 0) {\n              elementScroll = 0;\n            }\n            else if(possibleScroll > maxScroll ) {\n              elementScroll = maxScroll;\n            }\n            else {\n              elementScroll = possibleScroll;\n            }\n            return elementScroll;\n          }\n        },\n\n        remove: {\n          lastScroll: function() {\n            delete module.lastScroll;\n          },\n          elementScroll: function(scroll) {\n            delete module.elementScroll;\n          },\n          offset: function() {\n            $module.css('margin-top', '');\n          }\n        },\n\n        set: {\n          offset: function() {\n            module.verbose('Setting offset on element', settings.offset);\n            $module\n              .css('margin-top', settings.offset)\n            ;\n          },\n          containerSize: function() {\n            var\n              tagName = $container.get(0).tagName\n            ;\n            if(tagName === 'HTML' || tagName == 'body') {\n              // this can trigger for too many reasons\n              //module.error(error.container, tagName, $module);\n              module.determineContainer();\n            }\n            else {\n              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\n                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\n                $container.css({\n                  height: module.cache.context.height\n                });\n              }\n            }\n          },\n          minimumSize: function() {\n            var\n              element   = module.cache.element\n            ;\n            $container\n              .css('min-height', element.height)\n            ;\n          },\n          scroll: function(scroll) {\n            module.debug('Setting scroll on element', scroll);\n            if(module.elementScroll == scroll) {\n              return;\n            }\n            if( module.is.top() ) {\n              $module\n                .css('bottom', '')\n                .css('top', -scroll)\n              ;\n            }\n            if( module.is.bottom() ) {\n              $module\n                .css('top', '')\n                .css('bottom', scroll)\n              ;\n            }\n          },\n          size: function() {\n            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\n              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\n              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\n            }\n          }\n        },\n\n        is: {\n          standardScroll: function() {\n            return ($scroll[0] == window);\n          },\n          top: function() {\n            return $module.hasClass(className.top);\n          },\n          bottom: function() {\n            return $module.hasClass(className.bottom);\n          },\n          initialPosition: function() {\n            return (!module.is.fixed() && !module.is.bound());\n          },\n          hidden: function() {\n            return (!$module.is(':visible'));\n          },\n          bound: function() {\n            return $module.hasClass(className.bound);\n          },\n          fixed: function() {\n            return $module.hasClass(className.fixed);\n          }\n        },\n\n        stick: function(scroll) {\n          var\n            cachedPosition = scroll || $scroll.scrollTop(),\n            cache          = module.cache,\n            fits           = cache.fits,\n            element        = cache.element,\n            scrollContext  = cache.scrollContext,\n            context        = cache.context,\n            offset         = (module.is.bottom() && settings.pushing)\n              ? settings.bottomOffset\n              : settings.offset,\n            scroll         = {\n              top    : cachedPosition + offset,\n              bottom : cachedPosition + offset + scrollContext.height\n            },\n            direction      = module.get.direction(scroll.top),\n            elementScroll  = (fits)\n              ? 0\n              : module.get.elementScroll(scroll.top),\n\n            // shorthand\n            doesntFit      = !fits,\n            elementVisible = (element.height !== 0)\n          ;\n\n          if(elementVisible) {\n\n            if( module.is.initialPosition() ) {\n              if(scroll.top >= context.bottom) {\n                module.debug('Initial element position is bottom of container');\n                module.bindBottom();\n              }\n              else if(scroll.top > element.top) {\n                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n                  module.debug('Initial element position is bottom of container');\n                  module.bindBottom();\n                }\n                else {\n                  module.debug('Initial element position is fixed');\n                  module.fixTop();\n                }\n              }\n\n            }\n            else if( module.is.fixed() ) {\n\n              // currently fixed top\n              if( module.is.top() ) {\n                if( scroll.top <= element.top ) {\n                  module.debug('Fixed element reached top of container');\n                  module.setInitialPosition();\n                }\n                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n                  module.debug('Fixed element reached bottom of container');\n                  module.bindBottom();\n                }\n                // scroll element if larger than screen\n                else if(doesntFit) {\n                  module.set.scroll(elementScroll);\n                  module.save.lastScroll(scroll.top);\n                  module.save.elementScroll(elementScroll);\n                }\n              }\n\n              // currently fixed bottom\n              else if(module.is.bottom() ) {\n\n                // top edge\n                if( (scroll.bottom - element.height) <= element.top) {\n                  module.debug('Bottom fixed rail has reached top of container');\n                  module.setInitialPosition();\n                }\n                // bottom edge\n                else if(scroll.bottom >= context.bottom) {\n                  module.debug('Bottom fixed rail has reached bottom of container');\n                  module.bindBottom();\n                }\n                // scroll element if larger than screen\n                else if(doesntFit) {\n                  module.set.scroll(elementScroll);\n                  module.save.lastScroll(scroll.top);\n                  module.save.elementScroll(elementScroll);\n                }\n\n              }\n            }\n            else if( module.is.bottom() ) {\n              if( scroll.top <= element.top ) {\n                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\n                module.setInitialPosition();\n              }\n              else {\n                if(settings.pushing) {\n                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\n                    module.debug('Fixing bottom attached element to bottom of browser.');\n                    module.fixBottom();\n                  }\n                }\n                else {\n                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\n                    module.debug('Fixing bottom attached element to top of browser.');\n                    module.fixTop();\n                  }\n                }\n              }\n            }\n          }\n        },\n\n        bindTop: function() {\n          module.debug('Binding element to top of parent container');\n          module.remove.offset();\n          $module\n            .css({\n              left         : '',\n              top          : '',\n              marginBottom : ''\n            })\n            .removeClass(className.fixed)\n            .removeClass(className.bottom)\n            .addClass(className.bound)\n            .addClass(className.top)\n          ;\n          settings.onTop.call(element);\n          settings.onUnstick.call(element);\n        },\n        bindBottom: function() {\n          module.debug('Binding element to bottom of parent container');\n          module.remove.offset();\n          $module\n            .css({\n              left         : '',\n              top          : ''\n            })\n            .removeClass(className.fixed)\n            .removeClass(className.top)\n            .addClass(className.bound)\n            .addClass(className.bottom)\n          ;\n          settings.onBottom.call(element);\n          settings.onUnstick.call(element);\n        },\n\n        setInitialPosition: function() {\n          module.debug('Returning to initial position');\n          module.unfix();\n          module.unbind();\n        },\n\n\n        fixTop: function() {\n          module.debug('Fixing element to top of page');\n          module.set.minimumSize();\n          module.set.offset();\n          $module\n            .css({\n              left         : module.cache.element.left,\n              bottom       : '',\n              marginBottom : ''\n            })\n            .removeClass(className.bound)\n            .removeClass(className.bottom)\n            .addClass(className.fixed)\n            .addClass(className.top)\n          ;\n          settings.onStick.call(element);\n        },\n\n        fixBottom: function() {\n          module.debug('Sticking element to bottom of page');\n          module.set.minimumSize();\n          module.set.offset();\n          $module\n            .css({\n              left         : module.cache.element.left,\n              bottom       : '',\n              marginBottom : ''\n            })\n            .removeClass(className.bound)\n            .removeClass(className.top)\n            .addClass(className.fixed)\n            .addClass(className.bottom)\n          ;\n          settings.onStick.call(element);\n        },\n\n        unbind: function() {\n          if( module.is.bound() ) {\n            module.debug('Removing container bound position on element');\n            module.remove.offset();\n            $module\n              .removeClass(className.bound)\n              .removeClass(className.top)\n              .removeClass(className.bottom)\n            ;\n          }\n        },\n\n        unfix: function() {\n          if( module.is.fixed() ) {\n            module.debug('Removing fixed position on element');\n            module.remove.offset();\n            $module\n              .removeClass(className.fixed)\n              .removeClass(className.top)\n              .removeClass(className.bottom)\n            ;\n            settings.onUnstick.call(element);\n          }\n        },\n\n        reset: function() {\n          module.debug('Resetting elements position');\n          module.unbind();\n          module.unfix();\n          module.resetCSS();\n          module.remove.offset();\n          module.remove.lastScroll();\n        },\n\n        resetCSS: function() {\n          $module\n            .css({\n              width  : '',\n              height : ''\n            })\n          ;\n          $container\n            .css({\n              height: ''\n            })\n          ;\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 0);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sticky.settings = {\n\n  name           : 'Sticky',\n  namespace      : 'sticky',\n\n  silent         : false,\n  debug          : false,\n  verbose        : true,\n  performance    : true,\n\n  // whether to stick in the opposite direction on scroll up\n  pushing        : false,\n\n  context        : false,\n  container      : false,\n\n  // Context to watch scroll events\n  scrollContext  : window,\n\n  // Offset to adjust scroll\n  offset         : 0,\n\n  // Offset to adjust scroll when attached to bottom of screen\n  bottomOffset   : 0,\n\n  jitter         : 5, // will only set container height if difference between context and container is larger than this number\n\n  // Whether to automatically observe changes with Mutation Observers\n  observeChanges : false,\n\n  // Called when position is recalculated\n  onReposition   : function(){},\n\n  // Called on each scroll\n  onScroll       : function(){},\n\n  // Called when element is stuck to viewport\n  onStick        : function(){},\n\n  // Called when element is unstuck from viewport\n  onUnstick      : function(){},\n\n  // Called when element reaches top of context\n  onTop          : function(){},\n\n  // Called when element reaches bottom of context\n  onBottom       : function(){},\n\n  error         : {\n    container      : 'Sticky element must be inside a relative container',\n    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\n    method         : 'The method you called is not defined.',\n    invalidContext : 'Context specified does not exist',\n    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\n  },\n\n  className : {\n    bound     : 'bound',\n    fixed     : 'fixed',\n    supported : 'native',\n    top       : 'top',\n    bottom    : 'bottom'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Tab\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.tab = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n\n    moduleSelector  = $allModules.selector || '',\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    initializedHistory = false,\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\n          : $.extend({}, $.fn.tab.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + settings.namespace,\n        moduleNamespace = 'module-' + settings.namespace,\n\n        $module         = $(this),\n        $context,\n        $tabs,\n\n        cache           = {},\n        firstLoad       = true,\n        recursionDepth  = 0,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        activeTabPath,\n        parameterArray,\n        module,\n\n        historyEvent\n\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing tab menu item', $module);\n          module.fix.callbacks();\n          module.determineTabs();\n\n          module.debug('Determining tabs', settings.context, $tabs);\n          // set up automatic routing\n          if(settings.auto) {\n            module.set.auto();\n          }\n          module.bind.events();\n\n          if(settings.history && !initializedHistory) {\n            module.initializeHistory();\n            initializedHistory = true;\n          }\n\n          module.instantiate();\n        },\n\n        instantiate: function () {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying tabs', $module);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            // if using $.tab don't add events\n            if( !$.isWindow( element ) ) {\n              module.debug('Attaching tab activation events to element', $module);\n              $module\n                .on('click' + eventNamespace, module.event.click)\n              ;\n            }\n          }\n        },\n\n        determineTabs: function() {\n          var\n            $reference\n          ;\n\n          // determine tab context\n          if(settings.context === 'parent') {\n            if($module.closest(selector.ui).length > 0) {\n              $reference = $module.closest(selector.ui);\n              module.verbose('Using closest UI element as parent', $reference);\n            }\n            else {\n              $reference = $module;\n            }\n            $context = $reference.parent();\n            module.verbose('Determined parent element for creating context', $context);\n          }\n          else if(settings.context) {\n            $context = $(settings.context);\n            module.verbose('Using selector for tab context', settings.context, $context);\n          }\n          else {\n            $context = $('body');\n          }\n          // find tabs\n          if(settings.childrenOnly) {\n            $tabs = $context.children(selector.tabs);\n            module.debug('Searching tab context children for tabs', $context, $tabs);\n          }\n          else {\n            $tabs = $context.find(selector.tabs);\n            module.debug('Searching tab context for tabs', $context, $tabs);\n          }\n        },\n\n        fix: {\n          callbacks: function() {\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\n              if(parameters.onTabLoad) {\n                parameters.onLoad = parameters.onTabLoad;\n                delete parameters.onTabLoad;\n                module.error(error.legacyLoad, parameters.onLoad);\n              }\n              if(parameters.onTabInit) {\n                parameters.onFirstLoad = parameters.onTabInit;\n                delete parameters.onTabInit;\n                module.error(error.legacyInit, parameters.onFirstLoad);\n              }\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\n            }\n          }\n        },\n\n        initializeHistory: function() {\n          module.debug('Initializing page state');\n          if( $.address === undefined ) {\n            module.error(error.state);\n            return false;\n          }\n          else {\n            if(settings.historyType == 'state') {\n              module.debug('Using HTML5 to manage state');\n              if(settings.path !== false) {\n                $.address\n                  .history(true)\n                  .state(settings.path)\n                ;\n              }\n              else {\n                module.error(error.path);\n                return false;\n              }\n            }\n            $.address\n              .bind('change', module.event.history.change)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              tabPath = $(this).data(metadata.tab)\n            ;\n            if(tabPath !== undefined) {\n              if(settings.history) {\n                module.verbose('Updating page state', event);\n                $.address.value(tabPath);\n              }\n              else {\n                module.verbose('Changing tab', event);\n                module.changeTab(tabPath);\n              }\n              event.preventDefault();\n            }\n            else {\n              module.debug('No tab specified');\n            }\n          },\n          history: {\n            change: function(event) {\n              var\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\n                pageTitle = settings.templates.determineTitle(tabPath) || false\n              ;\n              module.performance.display();\n              module.debug('History change event', tabPath, event);\n              historyEvent = event;\n              if(tabPath !== undefined) {\n                module.changeTab(tabPath);\n              }\n              if(pageTitle) {\n                $.address.title(pageTitle);\n              }\n            }\n          }\n        },\n\n        refresh: function() {\n          if(activeTabPath) {\n            module.debug('Refreshing tab', activeTabPath);\n            module.changeTab(activeTabPath);\n          }\n        },\n\n        cache: {\n\n          read: function(cacheKey) {\n            return (cacheKey !== undefined)\n              ? cache[cacheKey]\n              : false\n            ;\n          },\n          add: function(cacheKey, content) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Adding cached content for', cacheKey);\n            cache[cacheKey] = content;\n          },\n          remove: function(cacheKey) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Removing cached content for', cacheKey);\n            delete cache[cacheKey];\n          }\n        },\n\n        set: {\n          auto: function() {\n            var\n              url = (typeof settings.path == 'string')\n                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\n                : '/{$tab}'\n            ;\n            module.verbose('Setting up automatic tab retrieval from server', url);\n            if($.isPlainObject(settings.apiSettings)) {\n              settings.apiSettings.url = url;\n            }\n            else {\n              settings.apiSettings = {\n                url: url\n              };\n            }\n          },\n          loading: function(tabPath) {\n            var\n              $tab      = module.get.tabElement(tabPath),\n              isLoading = $tab.hasClass(className.loading)\n            ;\n            if(!isLoading) {\n              module.verbose('Setting loading state for', $tab);\n              $tab\n                .addClass(className.loading)\n                .siblings($tabs)\n                  .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onRequest.call($tab[0], tabPath);\n              }\n            }\n          },\n          state: function(state) {\n            $.address.value(state);\n          }\n        },\n\n        changeTab: function(tabPath) {\n          var\n            pushStateAvailable = (window.history && window.history.pushState),\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\n            // only add default path if not remote content\n            pathArray = (remoteContent && !shouldIgnoreLoad)\n              ? module.utilities.pathToArray(tabPath)\n              : module.get.defaultPathArray(tabPath)\n          ;\n          tabPath = module.utilities.arrayToPath(pathArray);\n          $.each(pathArray, function(index, tab) {\n            var\n              currentPathArray   = pathArray.slice(0, index + 1),\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\n\n              isTab              = module.is.tab(currentPath),\n              isLastIndex        = (index + 1 == pathArray.length),\n\n              $tab               = module.get.tabElement(currentPath),\n              $anchor,\n              nextPathArray,\n              nextPath,\n              isLastTab\n            ;\n            module.verbose('Looking for tab', tab);\n            if(isTab) {\n              module.verbose('Tab was found', tab);\n              // scope up\n              activeTabPath  = currentPath;\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\n\n              if(isLastIndex) {\n                isLastTab = true;\n              }\n              else {\n                nextPathArray = pathArray.slice(0, index + 2);\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\n                isLastTab     = ( !module.is.tab(nextPath) );\n                if(isLastTab) {\n                  module.verbose('Tab parameters found', nextPathArray);\n                }\n              }\n              if(isLastTab && remoteContent) {\n                if(!shouldIgnoreLoad) {\n                  module.activate.navigation(currentPath);\n                  module.fetch.content(currentPath, tabPath);\n                }\n                else {\n                  module.debug('Ignoring remote content on first tab load', currentPath);\n                  firstLoad = false;\n                  module.cache.add(tabPath, $tab.html());\n                  module.activate.all(currentPath);\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                return false;\n              }\n              else {\n                module.debug('Opened local tab', currentPath);\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n              }\n\n            }\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\n              // look for in page anchor\n              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\n              $tab        = module.get.tabElement(currentPath);\n              // if anchor exists use parent tab\n              if($anchor && $anchor.length > 0 && currentPath) {\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\n                if( !$tab.hasClass(className.active) ) {\n                  setTimeout(function() {\n                    module.scrollTo($anchor);\n                  }, 0);\n                }\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                return false;\n              }\n            }\n            else {\n              module.error(error.missingTab, $module, $context, currentPath);\n              return false;\n            }\n          });\n        },\n\n        scrollTo: function($element) {\n          var\n            scrollOffset = ($element && $element.length > 0)\n              ? $element.offset().top\n              : false\n          ;\n          if(scrollOffset !== false) {\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\n            $(document).scrollTop(scrollOffset);\n          }\n        },\n\n        update: {\n          content: function(tabPath, html, evaluateScripts) {\n            var\n              $tab = module.get.tabElement(tabPath),\n              tab  = $tab[0]\n            ;\n            evaluateScripts = (evaluateScripts !== undefined)\n              ? evaluateScripts\n              : settings.evaluateScripts\n            ;\n            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\n              $tab\n                .empty()\n                .append($(html).clone(true))\n              ;\n            }\n            else {\n              if(evaluateScripts) {\n                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\n                $tab.html(html);\n              }\n              else {\n                module.debug('Updating HTML', tabPath, html);\n                tab.innerHTML = html;\n              }\n            }\n          }\n        },\n\n        fetch: {\n\n          content: function(tabPath, fullTabPath) {\n            var\n              $tab        = module.get.tabElement(tabPath),\n              apiSettings = {\n                dataType         : 'html',\n                encodeParameters : false,\n                on               : 'now',\n                cache            : settings.alwaysRefresh,\n                headers          : {\n                  'X-Remote': true\n                },\n                onSuccess : function(response) {\n                  if(settings.cacheType == 'response') {\n                    module.cache.add(fullTabPath, response);\n                  }\n                  module.update.content(tabPath, response);\n                  if(tabPath == activeTabPath) {\n                    module.debug('Content loaded', tabPath);\n                    module.activate.tab(tabPath);\n                  }\n                  else {\n                    module.debug('Content loaded in background', tabPath);\n                  }\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\n                  if(settings.loadOnce) {\n                    module.cache.add(fullTabPath, true);\n                  }\n                  else if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\n                    setTimeout(function() {\n                      var\n                        $clone = $tab.children().clone(true)\n                      ;\n                      $clone = $clone.not('script');\n                      module.cache.add(fullTabPath, $clone);\n                    }, 0);\n                  }\n                  else {\n                    module.cache.add(fullTabPath, $tab.html());\n                  }\n                },\n                urlData: {\n                  tab: fullTabPath\n                }\n              },\n              request         = $tab.api('get request') || false,\n              existingRequest = ( request && request.state() === 'pending' ),\n              requestSettings,\n              cachedContent\n            ;\n\n            fullTabPath   = fullTabPath || tabPath;\n            cachedContent = module.cache.read(fullTabPath);\n\n\n            if(settings.cache && cachedContent) {\n              module.activate.tab(tabPath);\n              module.debug('Adding cached content', fullTabPath);\n              if(!settings.loadOnce) {\n                if(settings.evaluateScripts == 'once') {\n                  module.update.content(tabPath, cachedContent, false);\n                }\n                else {\n                  module.update.content(tabPath, cachedContent);\n                }\n              }\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n            }\n            else if(existingRequest) {\n              module.set.loading(tabPath);\n              module.debug('Content is already loading', fullTabPath);\n            }\n            else if($.api !== undefined) {\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\n              module.set.loading(tabPath);\n              $tab.api(requestSettings);\n            }\n            else {\n              module.error(error.api);\n            }\n          }\n        },\n\n        activate: {\n          all: function(tabPath) {\n            module.activate.tab(tabPath);\n            module.activate.navigation(tabPath);\n          },\n          tab: function(tabPath) {\n            var\n              $tab          = module.get.tabElement(tabPath),\n              $deactiveTabs = (settings.deactivate == 'siblings')\n                ? $tab.siblings($tabs)\n                : $tabs.not($tab),\n              isActive      = $tab.hasClass(className.active)\n            ;\n            module.verbose('Showing tab content for', $tab);\n            if(!isActive) {\n              $tab\n                .addClass(className.active)\n              ;\n              $deactiveTabs\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onVisible.call($tab[0], tabPath);\n              }\n            }\n          },\n          navigation: function(tabPath) {\n            var\n              $navigation         = module.get.navElement(tabPath),\n              $deactiveNavigation = (settings.deactivate == 'siblings')\n                ? $navigation.siblings($allModules)\n                : $allModules.not($navigation),\n              isActive    = $navigation.hasClass(className.active)\n            ;\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\n            if(!isActive) {\n              $navigation\n                .addClass(className.active)\n              ;\n              $deactiveNavigation\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n            }\n          }\n        },\n\n        deactivate: {\n          all: function() {\n            module.deactivate.navigation();\n            module.deactivate.tabs();\n          },\n          navigation: function() {\n            $allModules\n              .removeClass(className.active)\n            ;\n          },\n          tabs: function() {\n            $tabs\n              .removeClass(className.active + ' ' + className.loading)\n            ;\n          }\n        },\n\n        is: {\n          tab: function(tabName) {\n            return (tabName !== undefined)\n              ? ( module.get.tabElement(tabName).length > 0 )\n              : false\n            ;\n          }\n        },\n\n        get: {\n          initialPath: function() {\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\n          },\n          path: function() {\n            return $.address.value();\n          },\n          // adds default tabs to tab path\n          defaultPathArray: function(tabPath) {\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\n          },\n          defaultPath: function(tabPath) {\n            var\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\n              defaultTab  = $defaultNav.data(metadata.tab) || false\n            ;\n            if( defaultTab ) {\n              module.debug('Found default tab', defaultTab);\n              if(recursionDepth < settings.maxDepth) {\n                recursionDepth++;\n                return module.get.defaultPath(defaultTab);\n              }\n              module.error(error.recursion);\n            }\n            else {\n              module.debug('No default tabs found for', tabPath, $tabs);\n            }\n            recursionDepth = 0;\n            return tabPath;\n          },\n          navElement: function(tabPath) {\n            tabPath = tabPath || activeTabPath;\n            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n          },\n          tabElement: function(tabPath) {\n            var\n              $fullPathTab,\n              $simplePathTab,\n              tabPathArray,\n              lastTab\n            ;\n            tabPath        = tabPath || activeTabPath;\n            tabPathArray   = module.utilities.pathToArray(tabPath);\n            lastTab        = module.utilities.last(tabPathArray);\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\n            return ($fullPathTab.length > 0)\n              ? $fullPathTab\n              : $simplePathTab\n            ;\n          },\n          tab: function() {\n            return activeTabPath;\n          }\n        },\n\n        utilities: {\n          filterArray: function(keepArray, removeArray) {\n            return $.grep(keepArray, function(keepValue) {\n              return ( $.inArray(keepValue, removeArray) == -1);\n            });\n          },\n          last: function(array) {\n            return $.isArray(array)\n              ? array[ array.length - 1]\n              : false\n            ;\n          },\n          pathToArray: function(pathName) {\n            if(pathName === undefined) {\n              pathName = activeTabPath;\n            }\n            return typeof pathName == 'string'\n              ? pathName.split('/')\n              : [pathName]\n            ;\n          },\n          arrayToPath: function(pathArray) {\n            return $.isArray(pathArray)\n              ? pathArray.join('/')\n              : false\n            ;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n\n};\n\n// shortcut for tabbed content with no defined navigation\n$.tab = function() {\n  $(window).tab.apply(this, arguments);\n};\n\n$.fn.tab.settings = {\n\n  name            : 'Tab',\n  namespace       : 'tab',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\n  history         : false,      // use browser history\n  historyType     : 'hash',     // #/ or html5 state\n  path            : false,      // base path of url\n\n  context         : false,      // specify a context that tabs must appear inside\n  childrenOnly    : false,      // use only tabs that are children of context\n  maxDepth        : 25,         // max depth a tab can be nested\n\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\n\n  alwaysRefresh   : false,      // load tab content new every tab click\n  cache           : true,       // cache the content requests to pull locally\n  loadOnce        : false,      // Whether tab data should only be loaded once when using remote content\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\n  ignoreFirstLoad : false,      // don't load remote content on first load\n\n  apiSettings     : false,      // settings for api call\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\n\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\n\n  templates : {\n    determineTitle: function(tabArray) {} // returns page title for path\n  },\n\n  error: {\n    api        : 'You attempted to load content without API module',\n    method     : 'The method you called is not defined',\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\n    noContent  : 'The tab you specified is missing a content url.',\n    path       : 'History enabled, but no path was specified',\n    recursion  : 'Max recursive depth reached',\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\n    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\n  },\n\n  metadata : {\n    tab    : 'tab',\n    loaded : 'loaded',\n    promise: 'promise'\n  },\n\n  className   : {\n    loading : 'loading',\n    active  : 'active'\n  },\n\n  selector    : {\n    tabs : '.ui.tab',\n    ui   : '.ui'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Transition\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.transition = function() {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    moduleArguments = arguments,\n    query           = moduleArguments[0],\n    queryArguments  = [].slice.call(arguments, 1),\n    methodInvoked   = (typeof query === 'string'),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n  $allModules\n    .each(function(index) {\n      var\n        $module  = $(this),\n        element  = this,\n\n        // set at run time\n        settings,\n        instance,\n\n        error,\n        className,\n        metadata,\n        animationEnd,\n        animationName,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n\n          // get full settings\n          settings        = module.get.settings.apply(element, moduleArguments);\n\n          // shorthand\n          className       = settings.className;\n          error           = settings.error;\n          metadata        = settings.metadata;\n\n          // define namespace\n          eventNamespace  = '.' + settings.namespace;\n          moduleNamespace = 'module-' + settings.namespace;\n          instance        = $module.data(moduleNamespace) || module;\n\n          // get vendor specific events\n          animationEnd    = module.get.animationEndEvent();\n\n          if(methodInvoked) {\n            methodInvoked = module.invoke(query);\n          }\n\n          // method not invoked, lets run an animation\n          if(methodInvoked === false) {\n            module.verbose('Converted arguments into settings object', settings);\n            if(settings.interval) {\n              module.delay(settings.animate);\n            }\n            else  {\n              module.animate();\n            }\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing display type on next animation');\n          delete module.displayType;\n        },\n\n        forceRepaint: function() {\n          module.verbose('Forcing element repaint');\n          var\n            $parentElement = $module.parent(),\n            $nextElement = $module.next()\n          ;\n          if($nextElement.length === 0) {\n            $module.detach().appendTo($parentElement);\n          }\n          else {\n            $module.detach().insertBefore($nextElement);\n          }\n        },\n\n        repaint: function() {\n          module.verbose('Repainting element');\n          var\n            fakeAssignment = element.offsetWidth\n          ;\n        },\n\n        delay: function(interval) {\n          var\n            direction = module.get.animationDirection(),\n            shouldReverse,\n            delay\n          ;\n          if(!direction) {\n            direction = module.can.transition()\n              ? module.get.direction()\n              : 'static'\n            ;\n          }\n          interval = (interval !== undefined)\n            ? interval\n            : settings.interval\n          ;\n          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\n          delay = (shouldReverse || settings.reverse == true)\n            ? ($allModules.length - index) * settings.interval\n            : index * settings.interval\n          ;\n          module.debug('Delaying animation by', delay);\n          setTimeout(module.animate, delay);\n        },\n\n        animate: function(overrideSettings) {\n          settings = overrideSettings || settings;\n          if(!module.is.supported()) {\n            module.error(error.support);\n            return false;\n          }\n          module.debug('Preparing animation', settings.animation);\n          if(module.is.animating()) {\n            if(settings.queue) {\n              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\n                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\n              }\n              else {\n                module.queue(settings.animation);\n              }\n              return false;\n            }\n            else if(!settings.allowRepeats && module.is.occurring()) {\n              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\n              return false;\n            }\n            else {\n              module.debug('New animation started, completing previous early', settings.animation);\n              instance.complete();\n            }\n          }\n          if( module.can.animate() ) {\n            module.set.animating(settings.animation);\n          }\n          else {\n            module.error(error.noAnimation, settings.animation, element);\n          }\n        },\n\n        reset: function() {\n          module.debug('Resetting animation to beginning conditions');\n          module.remove.animationCallbacks();\n          module.restore.conditions();\n          module.remove.animating();\n        },\n\n        queue: function(animation) {\n          module.debug('Queueing animation of', animation);\n          module.queuing = true;\n          $module\n            .one(animationEnd + '.queue' + eventNamespace, function() {\n              module.queuing = false;\n              module.repaint();\n              module.animate.apply(this, settings);\n            })\n          ;\n        },\n\n        complete: function (event) {\n          module.debug('Animation complete', settings.animation);\n          module.remove.completeCallback();\n          module.remove.failSafe();\n          if(!module.is.looping()) {\n            if( module.is.outward() ) {\n              module.verbose('Animation is outward, hiding element');\n              module.restore.conditions();\n              module.hide();\n            }\n            else if( module.is.inward() ) {\n              module.verbose('Animation is outward, showing element');\n              module.restore.conditions();\n              module.show();\n            }\n            else {\n              module.verbose('Static animation completed');\n              module.restore.conditions();\n              settings.onComplete.call(element);\n            }\n          }\n        },\n\n        force: {\n          visible: function() {\n            var\n              style          = $module.attr('style'),\n              userStyle      = module.get.userStyle(),\n              displayType    = module.get.displayType(),\n              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\n              currentDisplay = $module.css('display'),\n              emptyStyle     = (style === undefined || style === '')\n            ;\n            if(currentDisplay !== displayType) {\n              module.verbose('Overriding default display to show element', displayType);\n              $module\n                .attr('style', overrideStyle)\n              ;\n            }\n            else if(emptyStyle) {\n              $module.removeAttr('style');\n            }\n          },\n          hidden: function() {\n            var\n              style          = $module.attr('style'),\n              currentDisplay = $module.css('display'),\n              emptyStyle     = (style === undefined || style === '')\n            ;\n            if(currentDisplay !== 'none' && !module.is.hidden()) {\n              module.verbose('Overriding default display to hide element');\n              $module\n                .css('display', 'none')\n              ;\n            }\n            else if(emptyStyle) {\n              $module\n                .removeAttr('style')\n              ;\n            }\n          }\n        },\n\n        has: {\n          direction: function(animation) {\n            var\n              hasDirection = false\n            ;\n            animation = animation || settings.animation;\n            if(typeof animation === 'string') {\n              animation = animation.split(' ');\n              $.each(animation, function(index, word){\n                if(word === className.inward || word === className.outward) {\n                  hasDirection = true;\n                }\n              });\n            }\n            return hasDirection;\n          },\n          inlineDisplay: function() {\n            var\n              style = $module.attr('style') || ''\n            ;\n            return $.isArray(style.match(/display.*?;/, ''));\n          }\n        },\n\n        set: {\n          animating: function(animation) {\n            var\n              animationClass,\n              direction\n            ;\n            // remove previous callbacks\n            module.remove.completeCallback();\n\n            // determine exact animation\n            animation      = animation || settings.animation;\n            animationClass = module.get.animationClass(animation);\n\n            // save animation class in cache to restore class names\n            module.save.animation(animationClass);\n\n            // override display if necessary so animation appears visibly\n            module.force.visible();\n\n            module.remove.hidden();\n            module.remove.direction();\n\n            module.start.animation(animationClass);\n\n          },\n          duration: function(animationName, duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            if(duration || duration === 0) {\n              module.verbose('Setting animation duration', duration);\n              $module\n                .css({\n                  'animation-duration':  duration\n                })\n              ;\n            }\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            if(direction == className.inward) {\n              module.set.inward();\n            }\n            else {\n              module.set.outward();\n            }\n          },\n          looping: function() {\n            module.debug('Transition set to loop');\n            $module\n              .addClass(className.looping)\n            ;\n          },\n          hidden: function() {\n            $module\n              .addClass(className.transition)\n              .addClass(className.hidden)\n            ;\n          },\n          inward: function() {\n            module.debug('Setting direction to inward');\n            $module\n              .removeClass(className.outward)\n              .addClass(className.inward)\n            ;\n          },\n          outward: function() {\n            module.debug('Setting direction to outward');\n            $module\n              .removeClass(className.inward)\n              .addClass(className.outward)\n            ;\n          },\n          visible: function() {\n            $module\n              .addClass(className.transition)\n              .addClass(className.visible)\n            ;\n          }\n        },\n\n        start: {\n          animation: function(animationClass) {\n            animationClass = animationClass || module.get.animationClass();\n            module.debug('Starting tween', animationClass);\n            $module\n              .addClass(animationClass)\n              .one(animationEnd + '.complete' + eventNamespace, module.complete)\n            ;\n            if(settings.useFailSafe) {\n              module.add.failSafe();\n            }\n            module.set.duration(settings.duration);\n            settings.onStart.call(element);\n          }\n        },\n\n        save: {\n          animation: function(animation) {\n            if(!module.cache) {\n              module.cache = {};\n            }\n            module.cache.animation = animation;\n          },\n          displayType: function(displayType) {\n            if(displayType !== 'none') {\n              $module.data(metadata.displayType, displayType);\n            }\n          },\n          transitionExists: function(animation, exists) {\n            $.fn.transition.exists[animation] = exists;\n            module.verbose('Saving existence of transition', animation, exists);\n          }\n        },\n\n        restore: {\n          conditions: function() {\n            var\n              animation = module.get.currentAnimation()\n            ;\n            if(animation) {\n              $module\n                .removeClass(animation)\n              ;\n              module.verbose('Removing animation class', module.cache);\n            }\n            module.remove.duration();\n          }\n        },\n\n        add: {\n          failSafe: function() {\n            var\n              duration = module.get.duration()\n            ;\n            module.timer = setTimeout(function() {\n              $module.triggerHandler(animationEnd);\n            }, duration + settings.failSafeDelay);\n            module.verbose('Adding fail safe timer', module.timer);\n          }\n        },\n\n        remove: {\n          animating: function() {\n            $module.removeClass(className.animating);\n          },\n          animationCallbacks: function() {\n            module.remove.queueCallback();\n            module.remove.completeCallback();\n          },\n          queueCallback: function() {\n            $module.off('.queue' + eventNamespace);\n          },\n          completeCallback: function() {\n            $module.off('.complete' + eventNamespace);\n          },\n          display: function() {\n            $module.css('display', '');\n          },\n          direction: function() {\n            $module\n              .removeClass(className.inward)\n              .removeClass(className.outward)\n            ;\n          },\n          duration: function() {\n            $module\n              .css('animation-duration', '')\n            ;\n          },\n          failSafe: function() {\n            module.verbose('Removing fail safe timer', module.timer);\n            if(module.timer) {\n              clearTimeout(module.timer);\n            }\n          },\n          hidden: function() {\n            $module.removeClass(className.hidden);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          looping: function() {\n            module.debug('Transitions are no longer looping');\n            if( module.is.looping() ) {\n              module.reset();\n              $module\n                .removeClass(className.looping)\n              ;\n            }\n          },\n          transition: function() {\n            $module\n              .removeClass(className.visible)\n              .removeClass(className.hidden)\n            ;\n          }\n        },\n        get: {\n          settings: function(animation, duration, onComplete) {\n            // single settings object\n            if(typeof animation == 'object') {\n              return $.extend(true, {}, $.fn.transition.settings, animation);\n            }\n            // all arguments provided\n            else if(typeof onComplete == 'function') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation  : animation,\n                onComplete : onComplete,\n                duration   : duration\n              });\n            }\n            // only duration provided\n            else if(typeof duration == 'string' || typeof duration == 'number') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation : animation,\n                duration  : duration\n              });\n            }\n            // duration is actually settings object\n            else if(typeof duration == 'object') {\n              return $.extend({}, $.fn.transition.settings, duration, {\n                animation : animation\n              });\n            }\n            // duration is actually callback\n            else if(typeof duration == 'function') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation  : animation,\n                onComplete : duration\n              });\n            }\n            // only animation provided\n            else {\n              return $.extend({}, $.fn.transition.settings, {\n                animation : animation\n              });\n            }\n          },\n          animationClass: function(animation) {\n            var\n              animationClass = animation || settings.animation,\n              directionClass = (module.can.transition() && !module.has.direction())\n                ? module.get.direction() + ' '\n                : ''\n            ;\n            return className.animating + ' '\n              + className.transition + ' '\n              + directionClass\n              + animationClass\n            ;\n          },\n          currentAnimation: function() {\n            return (module.cache && module.cache.animation !== undefined)\n              ? module.cache.animation\n              : false\n            ;\n          },\n          currentDirection: function() {\n            return module.is.inward()\n              ? className.inward\n              : className.outward\n            ;\n          },\n          direction: function() {\n            return module.is.hidden() || !module.is.visible()\n              ? className.inward\n              : className.outward\n            ;\n          },\n          animationDirection: function(animation) {\n            var\n              direction\n            ;\n            animation = animation || settings.animation;\n            if(typeof animation === 'string') {\n              animation = animation.split(' ');\n              // search animation name for out/in class\n              $.each(animation, function(index, word){\n                if(word === className.inward) {\n                  direction = className.inward;\n                }\n                else if(word === className.outward) {\n                  direction = className.outward;\n                }\n              });\n            }\n            // return found direction\n            if(direction) {\n              return direction;\n            }\n            return false;\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            if(duration === false) {\n              duration = $module.css('animation-duration') || 0;\n            }\n            return (typeof duration === 'string')\n              ? (duration.indexOf('ms') > -1)\n                ? parseFloat(duration)\n                : parseFloat(duration) * 1000\n              : duration\n            ;\n          },\n          displayType: function(shouldDetermine) {\n            shouldDetermine = (shouldDetermine !== undefined)\n              ? shouldDetermine\n              : true\n            ;\n            if(settings.displayType) {\n              return settings.displayType;\n            }\n            if(shouldDetermine && $module.data(metadata.displayType) === undefined) {\n              // create fake element to determine display state\n              module.can.transition(true);\n            }\n            return $module.data(metadata.displayType);\n          },\n          userStyle: function(style) {\n            style = style || $module.attr('style') || '';\n            return style.replace(/display.*?;/, '');\n          },\n          transitionExists: function(animation) {\n            return $.fn.transition.exists[animation];\n          },\n          animationStartEvent: function() {\n            var\n              element     = document.createElement('div'),\n              animations  = {\n                'animation'       :'animationstart',\n                'OAnimation'      :'oAnimationStart',\n                'MozAnimation'    :'mozAnimationStart',\n                'WebkitAnimation' :'webkitAnimationStart'\n              },\n              animation\n            ;\n            for(animation in animations){\n              if( element.style[animation] !== undefined ){\n                return animations[animation];\n              }\n            }\n            return false;\n          },\n          animationEndEvent: function() {\n            var\n              element     = document.createElement('div'),\n              animations  = {\n                'animation'       :'animationend',\n                'OAnimation'      :'oAnimationEnd',\n                'MozAnimation'    :'mozAnimationEnd',\n                'WebkitAnimation' :'webkitAnimationEnd'\n              },\n              animation\n            ;\n            for(animation in animations){\n              if( element.style[animation] !== undefined ){\n                return animations[animation];\n              }\n            }\n            return false;\n          }\n\n        },\n\n        can: {\n          transition: function(forced) {\n            var\n              animation         = settings.animation,\n              transitionExists  = module.get.transitionExists(animation),\n              displayType       = module.get.displayType(false),\n              elementClass,\n              tagName,\n              $clone,\n              currentAnimation,\n              inAnimation,\n              directionExists\n            ;\n            if( transitionExists === undefined || forced) {\n              module.verbose('Determining whether animation exists');\n              elementClass = $module.attr('class');\n              tagName      = $module.prop('tagName');\n\n              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\n              currentAnimation = $clone\n                .addClass(animation)\n                .removeClass(className.inward)\n                .removeClass(className.outward)\n                .addClass(className.animating)\n                .addClass(className.transition)\n                .css('animationName')\n              ;\n              inAnimation = $clone\n                .addClass(className.inward)\n                .css('animationName')\n              ;\n              if(!displayType) {\n                displayType = $clone\n                  .attr('class', elementClass)\n                  .removeAttr('style')\n                  .removeClass(className.hidden)\n                  .removeClass(className.visible)\n                  .show()\n                  .css('display')\n                ;\n                module.verbose('Determining final display state', displayType);\n                module.save.displayType(displayType);\n              }\n\n              $clone.remove();\n              if(currentAnimation != inAnimation) {\n                module.debug('Direction exists for animation', animation);\n                directionExists = true;\n              }\n              else if(currentAnimation == 'none' || !currentAnimation) {\n                module.debug('No animation defined in css', animation);\n                return;\n              }\n              else {\n                module.debug('Static animation found', animation, displayType);\n                directionExists = false;\n              }\n              module.save.transitionExists(animation, directionExists);\n            }\n            return (transitionExists !== undefined)\n              ? transitionExists\n              : directionExists\n            ;\n          },\n          animate: function() {\n            // can transition does not return a value if animation does not exist\n            return (module.can.transition() !== undefined);\n          }\n        },\n\n        is: {\n          animating: function() {\n            return $module.hasClass(className.animating);\n          },\n          inward: function() {\n            return $module.hasClass(className.inward);\n          },\n          outward: function() {\n            return $module.hasClass(className.outward);\n          },\n          looping: function() {\n            return $module.hasClass(className.looping);\n          },\n          occurring: function(animation) {\n            animation = animation || settings.animation;\n            animation = '.' + animation.replace(' ', '.');\n            return ( $module.filter(animation).length > 0 );\n          },\n          visible: function() {\n            return $module.is(':visible');\n          },\n          hidden: function() {\n            return $module.css('visibility') === 'hidden';\n          },\n          supported: function() {\n            return(animationEnd !== false);\n          }\n        },\n\n        hide: function() {\n          module.verbose('Hiding element');\n          if( module.is.animating() ) {\n            module.reset();\n          }\n          element.blur(); // IE will trigger focus change if element is not blurred before hiding\n          module.remove.display();\n          module.remove.visible();\n          module.set.hidden();\n          module.force.hidden();\n          settings.onHide.call(element);\n          settings.onComplete.call(element);\n          // module.repaint();\n        },\n\n        show: function(display) {\n          module.verbose('Showing element', display);\n          module.remove.hidden();\n          module.set.visible();\n          module.force.visible();\n          settings.onShow.call(element);\n          settings.onComplete.call(element);\n          // module.repaint();\n        },\n\n        toggle: function() {\n          if( module.is.visible() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        stop: function() {\n          module.debug('Stopping current animation');\n          $module.triggerHandler(animationEnd);\n        },\n\n        stopAll: function() {\n          module.debug('Stopping all animation');\n          module.remove.queueCallback();\n          $module.triggerHandler(animationEnd);\n        },\n\n        clear: {\n          queue: function() {\n            module.debug('Clearing animation queue');\n            module.remove.queueCallback();\n          }\n        },\n\n        enable: function() {\n          module.verbose('Starting animation');\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function() {\n          module.debug('Stopping animation');\n          $module.addClass(className.disabled);\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        // modified for transition to return invoke success\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return (found !== undefined)\n            ? found\n            : false\n          ;\n        }\n      };\n      module.initialize();\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n// Records if CSS transition is available\n$.fn.transition.exists = {};\n\n$.fn.transition.settings = {\n\n  // module info\n  name          : 'Transition',\n\n  // hide all output from this component regardless of other settings\n  silent        : false,\n\n  // debug content outputted to console\n  debug         : false,\n\n  // verbose debug output\n  verbose       : false,\n\n  // performance data output\n  performance   : true,\n\n  // event namespace\n  namespace     : 'transition',\n\n  // delay between animations in group\n  interval      : 0,\n\n  // whether group animations should be reversed\n  reverse       : 'auto',\n\n  // animation callback event\n  onStart       : function() {},\n  onComplete    : function() {},\n  onShow        : function() {},\n  onHide        : function() {},\n\n  // whether timeout should be used to ensure callback fires in cases animationend does not\n  useFailSafe   : true,\n\n  // delay in ms for fail safe\n  failSafeDelay : 100,\n\n  // whether EXACT animation can occur twice in a row\n  allowRepeats  : false,\n\n  // Override final display type on visible\n  displayType   : false,\n\n  // animation duration\n  animation     : 'fade',\n  duration      : false,\n\n  // new animations will occur after previous ones\n  queue         : true,\n\n  metadata : {\n    displayType: 'display'\n  },\n\n  className   : {\n    animating  : 'animating',\n    disabled   : 'disabled',\n    hidden     : 'hidden',\n    inward     : 'in',\n    loading    : 'loading',\n    looping    : 'looping',\n    outward    : 'out',\n    transition : 'transition',\n    visible    : 'visible'\n  },\n\n  // possible errors\n  error: {\n    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\n    repeated    : 'That animation is already occurring, cancelling repeated animation',\n    method      : 'The method you called is not defined',\n    support     : 'This browser does not support CSS animations'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - API\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nvar\n  window = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.api = $.fn.api = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n    moduleSelector = $allModules.selector || '',\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.api.settings, parameters)\n          : $.extend({}, $.fn.api.settings),\n\n        // internal aliases\n        namespace       = settings.namespace,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n        className       = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // element that creates request\n        $module         = $(this),\n        $form           = $module.closest(selector.form),\n\n        // context used for state\n        $context        = (settings.stateContext)\n          ? $(settings.stateContext)\n          : $module,\n\n        // request details\n        ajaxSettings,\n        requestSettings,\n        url,\n        data,\n        requestStartTime,\n\n        // standard module\n        element         = this,\n        context         = $context[0],\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          if(!methodInvoked) {\n            module.bind.events();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            var\n              triggerEvent = module.get.event()\n            ;\n            if( triggerEvent ) {\n              module.verbose('Attaching API events to element', triggerEvent);\n              $module\n                .on(triggerEvent + eventNamespace, module.event.trigger)\n              ;\n            }\n            else if(settings.on == 'now') {\n              module.debug('Querying API endpoint immediately');\n              module.query();\n            }\n          }\n        },\n\n        decode: {\n          json: function(response) {\n            if(response !== undefined && typeof response == 'string') {\n              try {\n               response = JSON.parse(response);\n              }\n              catch(e) {\n                // isnt json string\n              }\n            }\n            return response;\n          }\n        },\n\n        read: {\n          cachedResponse: function(url) {\n            var\n              response\n            ;\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            response = sessionStorage.getItem(url);\n            module.debug('Using cached response', url, response);\n            response = module.decode.json(response);\n            return response;\n          }\n        },\n        write: {\n          cachedResponse: function(url, response) {\n            if(response && response === '') {\n              module.debug('Response empty, not caching', response);\n              return;\n            }\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            if( $.isPlainObject(response) ) {\n              response = JSON.stringify(response);\n            }\n            sessionStorage.setItem(url, response);\n            module.verbose('Storing cached response for url', url, response);\n          }\n        },\n\n        query: function() {\n\n          if(module.is.disabled()) {\n            module.debug('Element is disabled API request aborted');\n            return;\n          }\n\n          if(module.is.loading()) {\n            if(settings.interruptRequests) {\n              module.debug('Interrupting previous request');\n              module.abort();\n            }\n            else {\n              module.debug('Cancelling request, previous request is still pending');\n              return;\n            }\n          }\n\n          // pass element metadata to url (value, text)\n          if(settings.defaultData) {\n            $.extend(true, settings.urlData, module.get.defaultData());\n          }\n\n          // Add form content\n          if(settings.serializeForm) {\n            settings.data = module.add.formData(settings.data);\n          }\n\n          // call beforesend and get any settings changes\n          requestSettings = module.get.settings();\n\n          // check if before send cancelled request\n          if(requestSettings === false) {\n            module.cancelled = true;\n            module.error(error.beforeSend);\n            return;\n          }\n          else {\n            module.cancelled = false;\n          }\n\n          // get url\n          url = module.get.templatedURL();\n\n          if(!url && !module.is.mocked()) {\n            module.error(error.missingURL);\n            return;\n          }\n\n          // replace variables\n          url = module.add.urlData( url );\n          // missing url parameters\n          if( !url && !module.is.mocked()) {\n            return;\n          }\n\n          requestSettings.url = settings.base + url;\n\n          // look for jQuery ajax parameters in settings\n          ajaxSettings = $.extend(true, {}, settings, {\n            type       : settings.method || settings.type,\n            data       : data,\n            url        : settings.base + url,\n            beforeSend : settings.beforeXHR,\n            success    : function() {},\n            failure    : function() {},\n            complete   : function() {}\n          });\n\n          module.debug('Querying URL', ajaxSettings.url);\n          module.verbose('Using AJAX settings', ajaxSettings);\n          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\n            module.debug('Response returned from local cache');\n            module.request = module.create.request();\n            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\n            return;\n          }\n\n          if( !settings.throttle ) {\n            module.debug('Sending request', data, ajaxSettings.method);\n            module.send.request();\n          }\n          else {\n            if(!settings.throttleFirstRequest && !module.timer) {\n              module.debug('Sending request', data, ajaxSettings.method);\n              module.send.request();\n              module.timer = setTimeout(function(){}, settings.throttle);\n            }\n            else {\n              module.debug('Throttling request', settings.throttle);\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                if(module.timer) {\n                  delete module.timer;\n                }\n                module.debug('Sending throttled request', data, ajaxSettings.method);\n                module.send.request();\n              }, settings.throttle);\n            }\n          }\n\n        },\n\n        should: {\n          removeError: function() {\n            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\n          }\n        },\n\n        is: {\n          disabled: function() {\n            return ($module.filter(selector.disabled).length > 0);\n          },\n          expectingJSON: function() {\n            return settings.dataType === 'json' || settings.dataType === 'jsonp';\n          },\n          form: function() {\n            return $module.is('form') || $context.is('form');\n          },\n          mocked: function() {\n            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\n          },\n          input: function() {\n            return $module.is('input');\n          },\n          loading: function() {\n            return (module.request)\n              ? (module.request.state() == 'pending')\n              : false\n            ;\n          },\n          abortedRequest: function(xhr) {\n            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\n              module.verbose('XHR request determined to be aborted');\n              return true;\n            }\n            else {\n              module.verbose('XHR request was not aborted');\n              return false;\n            }\n          },\n          validResponse: function(response) {\n            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\n              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\n              return true;\n            }\n            module.debug('Checking JSON returned success', settings.successTest, response);\n            if( settings.successTest(response) ) {\n              module.debug('Response passed success test', response);\n              return true;\n            }\n            else {\n              module.debug('Response failed success test', response);\n              return false;\n            }\n          }\n        },\n\n        was: {\n          cancelled: function() {\n            return (module.cancelled || false);\n          },\n          succesful: function() {\n            return (module.request && module.request.state() == 'resolved');\n          },\n          failure: function() {\n            return (module.request && module.request.state() == 'rejected');\n          },\n          complete: function() {\n            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\n          }\n        },\n\n        add: {\n          urlData: function(url, urlData) {\n            var\n              requiredVariables,\n              optionalVariables\n            ;\n            if(url) {\n              requiredVariables = url.match(settings.regExp.required);\n              optionalVariables = url.match(settings.regExp.optional);\n              urlData           = urlData || settings.urlData;\n              if(requiredVariables) {\n                module.debug('Looking for required URL variables', requiredVariables);\n                $.each(requiredVariables, function(index, templatedString) {\n                  var\n                    // allow legacy {$var} style\n                    variable = (templatedString.indexOf('$') !== -1)\n                      ? templatedString.substr(2, templatedString.length - 3)\n                      : templatedString.substr(1, templatedString.length - 2),\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n                      ? urlData[variable]\n                      : ($module.data(variable) !== undefined)\n                        ? $module.data(variable)\n                        : ($context.data(variable) !== undefined)\n                          ? $context.data(variable)\n                          : urlData[variable]\n                  ;\n                  // remove value\n                  if(value === undefined) {\n                    module.error(error.requiredParameter, variable, url);\n                    url = false;\n                    return false;\n                  }\n                  else {\n                    module.verbose('Found required variable', variable, value);\n                    value = (settings.encodeParameters)\n                      ? module.get.urlEncodedValue(value)\n                      : value\n                    ;\n                    url = url.replace(templatedString, value);\n                  }\n                });\n              }\n              if(optionalVariables) {\n                module.debug('Looking for optional URL variables', requiredVariables);\n                $.each(optionalVariables, function(index, templatedString) {\n                  var\n                    // allow legacy {/$var} style\n                    variable = (templatedString.indexOf('$') !== -1)\n                      ? templatedString.substr(3, templatedString.length - 4)\n                      : templatedString.substr(2, templatedString.length - 3),\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n                      ? urlData[variable]\n                      : ($module.data(variable) !== undefined)\n                        ? $module.data(variable)\n                        : ($context.data(variable) !== undefined)\n                          ? $context.data(variable)\n                          : urlData[variable]\n                  ;\n                  // optional replacement\n                  if(value !== undefined) {\n                    module.verbose('Optional variable Found', variable, value);\n                    url = url.replace(templatedString, value);\n                  }\n                  else {\n                    module.verbose('Optional variable not found', variable);\n                    // remove preceding slash if set\n                    if(url.indexOf('/' + templatedString) !== -1) {\n                      url = url.replace('/' + templatedString, '');\n                    }\n                    else {\n                      url = url.replace(templatedString, '');\n                    }\n                  }\n                });\n              }\n            }\n            return url;\n          },\n          formData: function(data) {\n            var\n              canSerialize = ($.fn.serializeObject !== undefined),\n              formData     = (canSerialize)\n                ? $form.serializeObject()\n                : $form.serialize(),\n              hasOtherData\n            ;\n            data         = data || settings.data;\n            hasOtherData = $.isPlainObject(data);\n\n            if(hasOtherData) {\n              if(canSerialize) {\n                module.debug('Extending existing data with form data', data, formData);\n                data = $.extend(true, {}, data, formData);\n              }\n              else {\n                module.error(error.missingSerialize);\n                module.debug('Cant extend data. Replacing data with form data', data, formData);\n                data = formData;\n              }\n            }\n            else {\n              module.debug('Adding form data', formData);\n              data = formData;\n            }\n            return data;\n          }\n        },\n\n        send: {\n          request: function() {\n            module.set.loading();\n            module.request = module.create.request();\n            if( module.is.mocked() ) {\n              module.mockedXHR = module.create.mockedXHR();\n            }\n            else {\n              module.xhr = module.create.xhr();\n            }\n            settings.onRequest.call(context, module.request, module.xhr);\n          }\n        },\n\n        event: {\n          trigger: function(event) {\n            module.query();\n            if(event.type == 'submit' || event.type == 'click') {\n              event.preventDefault();\n            }\n          },\n          xhr: {\n            always: function() {\n              // nothing special\n            },\n            done: function(response, textStatus, xhr) {\n              var\n                context            = this,\n                elapsedTime        = (new Date().getTime() - requestStartTime),\n                timeLeft           = (settings.loadingDuration - elapsedTime),\n                translatedResponse = ( $.isFunction(settings.onResponse) )\n                  ? module.is.expectingJSON()\n                    ? settings.onResponse.call(context, $.extend(true, {}, response))\n                    : settings.onResponse.call(context, response)\n                  : false\n              ;\n              timeLeft = (timeLeft > 0)\n                ? timeLeft\n                : 0\n              ;\n              if(translatedResponse) {\n                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\n                response = translatedResponse;\n              }\n              if(timeLeft > 0) {\n                module.debug('Response completed early delaying state change by', timeLeft);\n              }\n              setTimeout(function() {\n                if( module.is.validResponse(response) ) {\n                  module.request.resolveWith(context, [response, xhr]);\n                }\n                else {\n                  module.request.rejectWith(context, [xhr, 'invalid']);\n                }\n              }, timeLeft);\n            },\n            fail: function(xhr, status, httpMessage) {\n              var\n                context     = this,\n                elapsedTime = (new Date().getTime() - requestStartTime),\n                timeLeft    = (settings.loadingDuration - elapsedTime)\n              ;\n              timeLeft = (timeLeft > 0)\n                ? timeLeft\n                : 0\n              ;\n              if(timeLeft > 0) {\n                module.debug('Response completed early delaying state change by', timeLeft);\n              }\n              setTimeout(function() {\n                if( module.is.abortedRequest(xhr) ) {\n                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\n                }\n                else {\n                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\n                }\n              }, timeLeft);\n            }\n          },\n          request: {\n            done: function(response, xhr) {\n              module.debug('Successful API Response', response);\n              if(settings.cache === 'local' && url) {\n                module.write.cachedResponse(url, response);\n                module.debug('Saving server response locally', module.cache);\n              }\n              settings.onSuccess.call(context, response, $module, xhr);\n            },\n            complete: function(firstParameter, secondParameter) {\n              var\n                xhr,\n                response\n              ;\n              // have to guess callback parameters based on request success\n              if( module.was.succesful() ) {\n                response = firstParameter;\n                xhr      = secondParameter;\n              }\n              else {\n                xhr      = firstParameter;\n                response = module.get.responseFromXHR(xhr);\n              }\n              module.remove.loading();\n              settings.onComplete.call(context, response, $module, xhr);\n            },\n            fail: function(xhr, status, httpMessage) {\n              var\n                // pull response from xhr if available\n                response     = module.get.responseFromXHR(xhr),\n                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\n              ;\n              if(status == 'aborted') {\n                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\n                settings.onAbort.call(context, status, $module, xhr);\n                return true;\n              }\n              else if(status == 'invalid') {\n                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\n              }\n              else if(status == 'error') {\n                if(xhr !== undefined) {\n                  module.debug('XHR produced a server error', status, httpMessage);\n                  // make sure we have an error to display to console\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\n                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\n                  }\n                  settings.onError.call(context, errorMessage, $module, xhr);\n                }\n              }\n\n              if(settings.errorDuration && status !== 'aborted') {\n                module.debug('Adding error state');\n                module.set.error();\n                if( module.should.removeError() ) {\n                  setTimeout(module.remove.error, settings.errorDuration);\n                }\n              }\n              module.debug('API Request failed', errorMessage, xhr);\n              settings.onFailure.call(context, response, $module, xhr);\n            }\n          }\n        },\n\n        create: {\n\n          request: function() {\n            // api request promise\n            return $.Deferred()\n              .always(module.event.request.complete)\n              .done(module.event.request.done)\n              .fail(module.event.request.fail)\n            ;\n          },\n\n          mockedXHR: function () {\n            var\n              // xhr does not simulate these properties of xhr but must return them\n              textStatus     = false,\n              status         = false,\n              httpMessage    = false,\n              responder      = settings.mockResponse      || settings.response,\n              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\n              asyncCallback,\n              response,\n              mockedXHR\n            ;\n\n            mockedXHR = $.Deferred()\n              .always(module.event.xhr.complete)\n              .done(module.event.xhr.done)\n              .fail(module.event.xhr.fail)\n            ;\n\n            if(responder) {\n              if( $.isFunction(responder) ) {\n                module.debug('Using specified synchronous callback', responder);\n                response = responder.call(context, requestSettings);\n              }\n              else {\n                module.debug('Using settings specified response', responder);\n                response = responder;\n              }\n              // simulating response\n              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n            }\n            else if( $.isFunction(asyncResponder) ) {\n              asyncCallback = function(response) {\n                module.debug('Async callback returned response', response);\n\n                if(response) {\n                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n                }\n                else {\n                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\n                }\n              };\n              module.debug('Using specified async response callback', asyncResponder);\n              asyncResponder.call(context, requestSettings, asyncCallback);\n            }\n            return mockedXHR;\n          },\n\n          xhr: function() {\n            var\n              xhr\n            ;\n            // ajax request promise\n            xhr = $.ajax(ajaxSettings)\n              .always(module.event.xhr.always)\n              .done(module.event.xhr.done)\n              .fail(module.event.xhr.fail)\n            ;\n            module.verbose('Created server request', xhr, ajaxSettings);\n            return xhr;\n          }\n        },\n\n        set: {\n          error: function() {\n            module.verbose('Adding error state to element', $context);\n            $context.addClass(className.error);\n          },\n          loading: function() {\n            module.verbose('Adding loading state to element', $context);\n            $context.addClass(className.loading);\n            requestStartTime = new Date().getTime();\n          }\n        },\n\n        remove: {\n          error: function() {\n            module.verbose('Removing error state from element', $context);\n            $context.removeClass(className.error);\n          },\n          loading: function() {\n            module.verbose('Removing loading state from element', $context);\n            $context.removeClass(className.loading);\n          }\n        },\n\n        get: {\n          responseFromXHR: function(xhr) {\n            return $.isPlainObject(xhr)\n              ? (module.is.expectingJSON())\n                ? module.decode.json(xhr.responseText)\n                : xhr.responseText\n              : false\n            ;\n          },\n          errorFromRequest: function(response, status, httpMessage) {\n            return ($.isPlainObject(response) && response.error !== undefined)\n              ? response.error // use json error message\n              : (settings.error[status] !== undefined) // use server error message\n                ? settings.error[status]\n                : httpMessage\n            ;\n          },\n          request: function() {\n            return module.request || false;\n          },\n          xhr: function() {\n            return module.xhr || false;\n          },\n          settings: function() {\n            var\n              runSettings\n            ;\n            runSettings = settings.beforeSend.call(context, settings);\n            if(runSettings) {\n              if(runSettings.success !== undefined) {\n                module.debug('Legacy success callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.success);\n                runSettings.onSuccess = runSettings.success;\n              }\n              if(runSettings.failure !== undefined) {\n                module.debug('Legacy failure callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.failure);\n                runSettings.onFailure = runSettings.failure;\n              }\n              if(runSettings.complete !== undefined) {\n                module.debug('Legacy complete callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.complete);\n                runSettings.onComplete = runSettings.complete;\n              }\n            }\n            if(runSettings === undefined) {\n              module.error(error.noReturnedValue);\n            }\n            if(runSettings === false) {\n              return runSettings;\n            }\n            return (runSettings !== undefined)\n              ? $.extend(true, {}, runSettings)\n              : $.extend(true, {}, settings)\n            ;\n          },\n          urlEncodedValue: function(value) {\n            var\n              decodedValue   = window.decodeURIComponent(value),\n              encodedValue   = window.encodeURIComponent(value),\n              alreadyEncoded = (decodedValue !== value)\n            ;\n            if(alreadyEncoded) {\n              module.debug('URL value is already encoded, avoiding double encoding', value);\n              return value;\n            }\n            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\n            return encodedValue;\n          },\n          defaultData: function() {\n            var\n              data = {}\n            ;\n            if( !$.isWindow(element) ) {\n              if( module.is.input() ) {\n                data.value = $module.val();\n              }\n              else if( module.is.form() ) {\n\n              }\n              else {\n                data.text = $module.text();\n              }\n            }\n            return data;\n          },\n          event: function() {\n            if( $.isWindow(element) || settings.on == 'now' ) {\n              module.debug('API called without element, no events attached');\n              return false;\n            }\n            else if(settings.on == 'auto') {\n              if( $module.is('input') ) {\n                return (element.oninput !== undefined)\n                  ? 'input'\n                  : (element.onpropertychange !== undefined)\n                    ? 'propertychange'\n                    : 'keyup'\n                ;\n              }\n              else if( $module.is('form') ) {\n                return 'submit';\n              }\n              else {\n                return 'click';\n              }\n            }\n            else {\n              return settings.on;\n            }\n          },\n          templatedURL: function(action) {\n            action = action || $module.data(metadata.action) || settings.action || false;\n            url    = $module.data(metadata.url) || settings.url || false;\n            if(url) {\n              module.debug('Using specified url', url);\n              return url;\n            }\n            if(action) {\n              module.debug('Looking up url for action', action, settings.api);\n              if(settings.api[action] === undefined && !module.is.mocked()) {\n                module.error(error.missingAction, settings.action, settings.api);\n                return;\n              }\n              url = settings.api[action];\n            }\n            else if( module.is.form() ) {\n              url = $module.attr('action') || $context.attr('action') || false;\n              module.debug('No url or action specified, defaulting to form action', url);\n            }\n            return url;\n          }\n        },\n\n        abort: function() {\n          var\n            xhr = module.get.xhr()\n          ;\n          if( xhr && xhr.state() !== 'resolved') {\n            module.debug('Cancelling API request');\n            xhr.abort();\n          }\n        },\n\n        // reset state\n        reset: function() {\n          module.remove.error();\n          module.remove.loading();\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                //'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.api.settings = {\n\n  name              : 'API',\n  namespace         : 'api',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  // object containing all templates endpoints\n  api               : {},\n\n  // whether to cache responses\n  cache             : true,\n\n  // whether new requests should abort previous requests\n  interruptRequests : true,\n\n  // event binding\n  on                : 'auto',\n\n  // context for applying state classes\n  stateContext      : false,\n\n  // duration for loading state\n  loadingDuration   : 0,\n\n  // whether to hide errors after a period of time\n  hideError         : 'auto',\n\n  // duration for error state\n  errorDuration     : 2000,\n\n  // whether parameters should be encoded with encodeURIComponent\n  encodeParameters  : true,\n\n  // API action to use\n  action            : false,\n\n  // templated URL to use\n  url               : false,\n\n  // base URL to apply to all endpoints\n  base              : '',\n\n  // data that will\n  urlData           : {},\n\n  // whether to add default data to url data\n  defaultData          : true,\n\n  // whether to serialize closest form\n  serializeForm        : false,\n\n  // how long to wait before request should occur\n  throttle             : 0,\n\n  // whether to throttle first request or only repeated\n  throttleFirstRequest : true,\n\n  // standard ajax settings\n  method            : 'get',\n  data              : {},\n  dataType          : 'json',\n\n  // mock response\n  mockResponse      : false,\n  mockResponseAsync : false,\n\n  // aliases for mock\n  response          : false,\n  responseAsync     : false,\n\n  // callbacks before request\n  beforeSend  : function(settings) { return settings; },\n  beforeXHR   : function(xhr) {},\n  onRequest   : function(promise, xhr) {},\n\n  // after request\n  onResponse  : false, // function(response) { },\n\n  // response was successful, if JSON passed validation\n  onSuccess   : function(response, $module) {},\n\n  // request finished without aborting\n  onComplete  : function(response, $module) {},\n\n  // failed JSON success test\n  onFailure   : function(response, $module) {},\n\n  // server error\n  onError     : function(errorMessage, $module) {},\n\n  // request aborted\n  onAbort     : function(errorMessage, $module) {},\n\n  successTest : false,\n\n  // errors\n  error : {\n    beforeSend        : 'The before send function has aborted the request',\n    error             : 'There was an error with your request',\n    exitConditions    : 'API Request Aborted. Exit conditions met',\n    JSONParse         : 'JSON could not be parsed during error handling',\n    legacyParameters  : 'You are using legacy API success callback names',\n    method            : 'The method you called is not defined',\n    missingAction     : 'API action used but no url was defined',\n    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\n    missingURL        : 'No URL specified for api event',\n    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\n    noStorage         : 'Caching responses locally requires session storage',\n    parseError        : 'There was an error parsing your request',\n    requiredParameter : 'Missing a required URL parameter: ',\n    statusMessage     : 'Server gave an error: ',\n    timeout           : 'Your request timed out'\n  },\n\n  regExp  : {\n    required : /\\{\\$*[A-z0-9]+\\}/g,\n    optional : /\\{\\/\\$*[A-z0-9]+\\}/g,\n  },\n\n  className: {\n    loading : 'loading',\n    error   : 'error'\n  },\n\n  selector: {\n    disabled : '.disabled',\n    form      : 'form'\n  },\n\n  metadata: {\n    action  : 'action',\n    url     : 'url'\n  }\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - State\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.state = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    hasTouch        = ('ontouchstart' in document.documentElement),\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.state.settings, parameters)\n          : $.extend({}, $.fn.state.settings),\n\n        error           = settings.error,\n        metadata        = settings.metadata,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        states          = settings.states,\n        text            = settings.text,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        module\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n\n          // allow module to guess desired state based on element\n          if(settings.automatic) {\n            module.add.defaults();\n          }\n\n          // bind events with delegated events\n          if(settings.context && moduleSelector !== '') {\n            $(settings.context)\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          else {\n            $module\n              .on('mouseenter' + eventNamespace, module.change.text)\n              .on('mouseleave' + eventNamespace, module.reset.text)\n              .on('click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $module = $(element);\n        },\n\n        add: {\n          defaults: function() {\n            var\n              userStates = parameters && $.isPlainObject(parameters.states)\n                ? parameters.states\n                : {}\n            ;\n            $.each(settings.defaults, function(type, typeStates) {\n              if( module.is[type] !== undefined && module.is[type]() ) {\n                module.verbose('Adding default states', type, element);\n                $.extend(settings.states, typeStates, userStates);\n              }\n            });\n          }\n        },\n\n        is: {\n\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          loading: function() {\n            return $module.hasClass(className.loading);\n          },\n          inactive: function() {\n            return !( $module.hasClass(className.active) );\n          },\n          state: function(state) {\n            if(className[state] === undefined) {\n              return false;\n            }\n            return $module.hasClass( className[state] );\n          },\n\n          enabled: function() {\n            return !( $module.is(settings.filter.active) );\n          },\n          disabled: function() {\n            return ( $module.is(settings.filter.active) );\n          },\n          textEnabled: function() {\n            return !( $module.is(settings.filter.text) );\n          },\n\n          // definitions for automatic type detection\n          button: function() {\n            return $module.is('.button:not(a, .submit)');\n          },\n          input: function() {\n            return $module.is('input');\n          },\n          progress: function() {\n            return $module.is('.ui.progress');\n          }\n        },\n\n        allow: function(state) {\n          module.debug('Now allowing state', state);\n          states[state] = true;\n        },\n        disallow: function(state) {\n          module.debug('No longer allowing', state);\n          states[state] = false;\n        },\n\n        allows: function(state) {\n          return states[state] || false;\n        },\n\n        enable: function() {\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function() {\n          $module.addClass(className.disabled);\n        },\n\n        setState: function(state) {\n          if(module.allows(state)) {\n            $module.addClass( className[state] );\n          }\n        },\n\n        removeState: function(state) {\n          if(module.allows(state)) {\n            $module.removeClass( className[state] );\n          }\n        },\n\n        toggle: {\n          state: function() {\n            var\n              apiRequest,\n              requestCancelled\n            ;\n            if( module.allows('active') && module.is.enabled() ) {\n              module.refresh();\n              if($.fn.api !== undefined) {\n                apiRequest       = $module.api('get request');\n                requestCancelled = $module.api('was cancelled');\n                if( requestCancelled ) {\n                  module.debug('API Request cancelled by beforesend');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                else if(apiRequest) {\n                  module.listenTo(apiRequest);\n                  return;\n                }\n              }\n              module.change.state();\n            }\n          }\n        },\n\n        listenTo: function(apiRequest) {\n          module.debug('API request detected, waiting for state signal', apiRequest);\n          if(apiRequest) {\n            if(text.loading) {\n              module.update.text(text.loading);\n            }\n            $.when(apiRequest)\n              .then(function() {\n                if(apiRequest.state() == 'resolved') {\n                  module.debug('API request succeeded');\n                  settings.activateTest   = function(){ return true; };\n                  settings.deactivateTest = function(){ return true; };\n                }\n                else {\n                  module.debug('API request failed');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                module.change.state();\n              })\n            ;\n          }\n        },\n\n        // checks whether active/inactive state can be given\n        change: {\n\n          state: function() {\n            module.debug('Determining state change direction');\n            // inactive to active change\n            if( module.is.inactive() ) {\n              module.activate();\n            }\n            else {\n              module.deactivate();\n            }\n            if(settings.sync) {\n              module.sync();\n            }\n            settings.onChange.call(element);\n          },\n\n          text: function() {\n            if( module.is.textEnabled() ) {\n              if(module.is.disabled() ) {\n                module.verbose('Changing text to disabled text', text.hover);\n                module.update.text(text.disabled);\n              }\n              else if( module.is.active() ) {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.deactivate) {\n                  module.verbose('Changing text to deactivating text', text.deactivate);\n                  module.update.text(text.deactivate);\n                }\n              }\n              else {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.activate){\n                  module.verbose('Changing text to activating text', text.activate);\n                  module.update.text(text.activate);\n                }\n              }\n            }\n          }\n\n        },\n\n        activate: function() {\n          if( settings.activateTest.call(element) ) {\n            module.debug('Setting state to active');\n            $module\n              .addClass(className.active)\n            ;\n            module.update.text(text.active);\n            settings.onActivate.call(element);\n          }\n        },\n\n        deactivate: function() {\n          if( settings.deactivateTest.call(element) ) {\n            module.debug('Setting state to inactive');\n            $module\n              .removeClass(className.active)\n            ;\n            module.update.text(text.inactive);\n            settings.onDeactivate.call(element);\n          }\n        },\n\n        sync: function() {\n          module.verbose('Syncing other buttons to current state');\n          if( module.is.active() ) {\n            $allModules\n              .not($module)\n                .state('activate');\n          }\n          else {\n            $allModules\n              .not($module)\n                .state('deactivate')\n            ;\n          }\n        },\n\n        get: {\n          text: function() {\n            return (settings.selector.text)\n              ? $module.find(settings.selector.text).text()\n              : $module.html()\n            ;\n          },\n          textFor: function(state) {\n            return text[state] || false;\n          }\n        },\n\n        flash: {\n          text: function(text, duration, callback) {\n            var\n              previousText = module.get.text()\n            ;\n            module.debug('Flashing text message', text, duration);\n            text     = text     || settings.text.flash;\n            duration = duration || settings.flashDuration;\n            callback = callback || function() {};\n            module.update.text(text);\n            setTimeout(function(){\n              module.update.text(previousText);\n              callback.call(element);\n            }, duration);\n          }\n        },\n\n        reset: {\n          // on mouseout sets text to previous value\n          text: function() {\n            var\n              activeText   = text.active   || $module.data(metadata.storedText),\n              inactiveText = text.inactive || $module.data(metadata.storedText)\n            ;\n            if( module.is.textEnabled() ) {\n              if( module.is.active() && activeText) {\n                module.verbose('Resetting active text', activeText);\n                module.update.text(activeText);\n              }\n              else if(inactiveText) {\n                module.verbose('Resetting inactive text', activeText);\n                module.update.text(inactiveText);\n              }\n            }\n          }\n        },\n\n        update: {\n          text: function(text) {\n            var\n              currentText = module.get.text()\n            ;\n            if(text && text !== currentText) {\n              module.debug('Updating text', text);\n              if(settings.selector.text) {\n                $module\n                  .data(metadata.storedText, text)\n                  .find(settings.selector.text)\n                    .text(text)\n                ;\n              }\n              else {\n                $module\n                  .data(metadata.storedText, text)\n                  .html(text)\n                ;\n              }\n            }\n            else {\n              module.debug('Text is already set, ignoring update', text);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.state.settings = {\n\n  // module info\n  name           : 'State',\n\n  // debug output\n  debug          : false,\n\n  // verbose debug output\n  verbose        : false,\n\n  // namespace for events\n  namespace      : 'state',\n\n  // debug data includes performance\n  performance    : true,\n\n  // callback occurs on state change\n  onActivate     : function() {},\n  onDeactivate   : function() {},\n  onChange       : function() {},\n\n  // state test functions\n  activateTest   : function() { return true; },\n  deactivateTest : function() { return true; },\n\n  // whether to automatically map default states\n  automatic      : true,\n\n  // activate / deactivate changes all elements instantiated at same time\n  sync           : false,\n\n  // default flash text duration, used for temporarily changing text of an element\n  flashDuration  : 1000,\n\n  // selector filter\n  filter     : {\n    text   : '.loading, .disabled',\n    active : '.disabled'\n  },\n\n  context    : false,\n\n  // error\n  error: {\n    beforeSend : 'The before send function has cancelled state change',\n    method     : 'The method you called is not defined.'\n  },\n\n  // metadata\n  metadata: {\n    promise    : 'promise',\n    storedText : 'stored-text'\n  },\n\n  // change class on state\n  className: {\n    active   : 'active',\n    disabled : 'disabled',\n    error    : 'error',\n    loading  : 'loading',\n    success  : 'success',\n    warning  : 'warning'\n  },\n\n  selector: {\n    // selector for text node\n    text: false\n  },\n\n  defaults : {\n    input: {\n      disabled : true,\n      loading  : true,\n      active   : true\n    },\n    button: {\n      disabled : true,\n      loading  : true,\n      active   : true,\n    },\n    progress: {\n      active   : true,\n      success  : true,\n      warning  : true,\n      error    : true\n    }\n  },\n\n  states     : {\n    active   : true,\n    disabled : true,\n    error    : true,\n    loading  : true,\n    success  : true,\n    warning  : true\n  },\n\n  text     : {\n    disabled   : false,\n    flash      : false,\n    hover      : false,\n    active     : false,\n    inactive   : false,\n    activate   : false,\n    deactivate : false\n  }\n\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.10 - Visibility\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.visibility = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue,\n\n    moduleCount    = $allModules.length,\n    loadedCount    = 0\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\n          : $.extend({}, $.fn.visibility.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n        metadata        = settings.metadata,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $window         = $(window),\n\n        $module         = $(this),\n        $context        = $(settings.context),\n\n        $placeholder,\n\n        selector        = $module.selector || '',\n        instance        = $module.data(moduleNamespace),\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); },\n\n        element         = this,\n        disabled        = false,\n\n        contextObserver,\n        observer,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing', settings);\n\n          module.setup.cache();\n\n          if( module.should.trackChanges() ) {\n\n            if(settings.type == 'image') {\n              module.setup.image();\n            }\n            if(settings.type == 'fixed') {\n              module.setup.fixed();\n            }\n\n            if(settings.observeChanges) {\n              module.observeChanges();\n            }\n            module.bind.events();\n          }\n\n          module.save.position();\n          if( !module.is.visible() ) {\n            module.error(error.visible, $module);\n          }\n\n          if(settings.initialCheck) {\n            module.checkVisibility();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.debug('Storing instance', module);\n          $module\n            .data(moduleNamespace, module)\n          ;\n          instance = module;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module');\n          if(observer) {\n            observer.disconnect();\n          }\n          if(contextObserver) {\n            contextObserver.disconnect();\n          }\n          $window\n            .off('load'   + eventNamespace, module.event.load)\n            .off('resize' + eventNamespace, module.event.resize)\n          ;\n          $context\n            .off('scroll'       + eventNamespace, module.event.scroll)\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n          ;\n          if(settings.type == 'fixed') {\n            module.resetFixed();\n            module.remove.placeholder();\n          }\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            contextObserver = new MutationObserver(module.event.contextChanged);\n            observer        = new MutationObserver(module.event.changed);\n            contextObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding visibility events to scroll and resize');\n            if(settings.refreshOnLoad) {\n              $window\n                .on('load'   + eventNamespace, module.event.load)\n              ;\n            }\n            $window\n              .on('resize' + eventNamespace, module.event.resize)\n            ;\n            // pub/sub pattern\n            $context\n              .off('scroll'      + eventNamespace)\n              .on('scroll'       + eventNamespace, module.event.scroll)\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n            ;\n          }\n        },\n\n        event: {\n          changed: function(mutations) {\n            module.verbose('DOM tree modified, updating visibility calculations');\n            module.timer = setTimeout(function() {\n              module.verbose('DOM tree modified, updating sticky menu');\n              module.refresh();\n            }, 100);\n          },\n          contextChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          resize: function() {\n            module.debug('Window resized');\n            if(settings.refreshOnResize) {\n              requestAnimationFrame(module.refresh);\n            }\n          },\n          load: function() {\n            module.debug('Page finished loading');\n            requestAnimationFrame(module.refresh);\n          },\n          // publishes scrollchange event on one scroll\n          scroll: function() {\n            if(settings.throttle) {\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n              }, settings.throttle);\n            }\n            else {\n              requestAnimationFrame(function() {\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n              });\n            }\n          },\n          // subscribes to scrollchange\n          scrollchange: function(event, scrollPosition) {\n            module.checkVisibility(scrollPosition);\n          },\n        },\n\n        precache: function(images, callback) {\n          if (!(images instanceof Array)) {\n            images = [images];\n          }\n          var\n            imagesLength  = images.length,\n            loadedCounter = 0,\n            cache         = [],\n            cacheImage    = document.createElement('img'),\n            handleLoad    = function() {\n              loadedCounter++;\n              if (loadedCounter >= images.length) {\n                if ($.isFunction(callback)) {\n                  callback();\n                }\n              }\n            }\n          ;\n          while (imagesLength--) {\n            cacheImage         = document.createElement('img');\n            cacheImage.onload  = handleLoad;\n            cacheImage.onerror = handleLoad;\n            cacheImage.src     = images[imagesLength];\n            cache.push(cacheImage);\n          }\n        },\n\n        enableCallbacks: function() {\n          module.debug('Allowing callbacks to occur');\n          disabled = false;\n        },\n\n        disableCallbacks: function() {\n          module.debug('Disabling all callbacks temporarily');\n          disabled = true;\n        },\n\n        should: {\n          trackChanges: function() {\n            if(methodInvoked) {\n              module.debug('One time query, no need to bind events');\n              return false;\n            }\n            module.debug('Callbacks being attached');\n            return true;\n          }\n        },\n\n        setup: {\n          cache: function() {\n            module.cache = {\n              occurred : {},\n              screen   : {},\n              element  : {},\n            };\n          },\n          image: function() {\n            var\n              src = $module.data(metadata.src)\n            ;\n            if(src) {\n              module.verbose('Lazy loading image', src);\n              settings.once           = true;\n              settings.observeChanges = false;\n\n              // show when top visible\n              settings.onOnScreen = function() {\n                module.debug('Image on screen', element);\n                module.precache(src, function() {\n                  module.set.image(src, function() {\n                    loadedCount++;\n                    if(loadedCount == moduleCount) {\n                      settings.onAllLoaded.call(this);\n                    }\n                    settings.onLoad.call(this);\n                  });\n                });\n              };\n            }\n          },\n          fixed: function() {\n            module.debug('Setting up fixed');\n            settings.once           = false;\n            settings.observeChanges = false;\n            settings.initialCheck   = true;\n            settings.refreshOnLoad  = true;\n            if(!parameters.transition) {\n              settings.transition = false;\n            }\n            module.create.placeholder();\n            module.debug('Added placeholder', $placeholder);\n            settings.onTopPassed = function() {\n              module.debug('Element passed, adding fixed position', $module);\n              module.show.placeholder();\n              module.set.fixed();\n              if(settings.transition) {\n                if($.fn.transition !== undefined) {\n                  $module.transition(settings.transition, settings.duration);\n                }\n              }\n            };\n            settings.onTopPassedReverse = function() {\n              module.debug('Element returned to position, removing fixed', $module);\n              module.hide.placeholder();\n              module.remove.fixed();\n            };\n          }\n        },\n\n        create: {\n          placeholder: function() {\n            module.verbose('Creating fixed position placeholder');\n            $placeholder = $module\n              .clone(false)\n              .css('display', 'none')\n              .addClass(className.placeholder)\n              .insertAfter($module)\n            ;\n          }\n        },\n\n        show: {\n          placeholder: function() {\n            module.verbose('Showing placeholder');\n            $placeholder\n              .css('display', 'block')\n              .css('visibility', 'hidden')\n            ;\n          }\n        },\n        hide: {\n          placeholder: function() {\n            module.verbose('Hiding placeholder');\n            $placeholder\n              .css('display', 'none')\n              .css('visibility', '')\n            ;\n          }\n        },\n\n        set: {\n          fixed: function() {\n            module.verbose('Setting element to fixed position');\n            $module\n              .addClass(className.fixed)\n              .css({\n                position : 'fixed',\n                top      : settings.offset + 'px',\n                left     : 'auto',\n                zIndex   : settings.zIndex\n              })\n            ;\n            settings.onFixed.call(element);\n          },\n          image: function(src, callback) {\n            $module\n              .attr('src', src)\n            ;\n            if(settings.transition) {\n              if( $.fn.transition !== undefined) {\n                if($module.hasClass(className.visible)) {\n                  module.debug('Transition already occurred on this image, skipping animation');\n                  return;\n                }\n                $module.transition(settings.transition, settings.duration, callback);\n              }\n              else {\n                $module.fadeIn(settings.duration, callback);\n              }\n            }\n            else {\n              $module.show();\n            }\n          }\n        },\n\n        is: {\n          onScreen: function() {\n            var\n              calculations   = module.get.elementCalculations()\n            ;\n            return calculations.onScreen;\n          },\n          offScreen: function() {\n            var\n              calculations   = module.get.elementCalculations()\n            ;\n            return calculations.offScreen;\n          },\n          visible: function() {\n            if(module.cache && module.cache.element) {\n              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\n            }\n            return false;\n          },\n          verticallyScrollableContext: function() {\n            var\n              overflowY = ($context.get(0) !== window)\n                ? $context.css('overflow-y')\n                : false\n            ;\n            return (overflowY == 'auto' || overflowY == 'scroll');\n          },\n          horizontallyScrollableContext: function() {\n            var\n              overflowX = ($context.get(0) !== window)\n                ? $context.css('overflow-x')\n                : false\n            ;\n            return (overflowX == 'auto' || overflowX == 'scroll');\n          }\n        },\n\n        refresh: function() {\n          module.debug('Refreshing constants (width/height)');\n          if(settings.type == 'fixed') {\n            module.resetFixed();\n          }\n          module.reset();\n          module.save.position();\n          if(settings.checkOnRefresh) {\n            module.checkVisibility();\n          }\n          settings.onRefresh.call(element);\n        },\n\n        resetFixed: function () {\n          module.remove.fixed();\n          module.remove.occurred();\n        },\n\n        reset: function() {\n          module.verbose('Resetting all cached values');\n          if( $.isPlainObject(module.cache) ) {\n            module.cache.screen = {};\n            module.cache.element = {};\n          }\n        },\n\n        checkVisibility: function(scroll) {\n          module.verbose('Checking visibility of element', module.cache.element);\n\n          if( !disabled && module.is.visible() ) {\n\n            // save scroll position\n            module.save.scroll(scroll);\n\n            // update calculations derived from scroll\n            module.save.calculations();\n\n            // percentage\n            module.passed();\n\n            // reverse (must be first)\n            module.passingReverse();\n            module.topVisibleReverse();\n            module.bottomVisibleReverse();\n            module.topPassedReverse();\n            module.bottomPassedReverse();\n\n            // one time\n            module.onScreen();\n            module.offScreen();\n            module.passing();\n            module.topVisible();\n            module.bottomVisible();\n            module.topPassed();\n            module.bottomPassed();\n\n            // on update callback\n            if(settings.onUpdate) {\n              settings.onUpdate.call(element, module.get.elementCalculations());\n            }\n          }\n        },\n\n        passed: function(amount, newCallback) {\n          var\n            calculations   = module.get.elementCalculations(),\n            amountInPixels\n          ;\n          // assign callback\n          if(amount && newCallback) {\n            settings.onPassed[amount] = newCallback;\n          }\n          else if(amount !== undefined) {\n            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\n          }\n          else if(calculations.passing) {\n            $.each(settings.onPassed, function(amount, callback) {\n              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\n                module.execute(callback, amount);\n              }\n              else if(!settings.once) {\n                module.remove.occurred(callback);\n              }\n            });\n          }\n        },\n\n        onScreen: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onOnScreen,\n            callbackName = 'onScreen'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for onScreen', newCallback);\n            settings.onOnScreen = newCallback;\n          }\n          if(calculations.onScreen) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.onOnScreen;\n          }\n        },\n\n        offScreen: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onOffScreen,\n            callbackName = 'offScreen'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for offScreen', newCallback);\n            settings.onOffScreen = newCallback;\n          }\n          if(calculations.offScreen) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.onOffScreen;\n          }\n        },\n\n        passing: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onPassing,\n            callbackName = 'passing'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for passing', newCallback);\n            settings.onPassing = newCallback;\n          }\n          if(calculations.passing) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.passing;\n          }\n        },\n\n\n        topVisible: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopVisible,\n            callbackName = 'topVisible'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top visible', newCallback);\n            settings.onTopVisible = newCallback;\n          }\n          if(calculations.topVisible) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.topVisible;\n          }\n        },\n\n        bottomVisible: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomVisible,\n            callbackName = 'bottomVisible'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom visible', newCallback);\n            settings.onBottomVisible = newCallback;\n          }\n          if(calculations.bottomVisible) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.bottomVisible;\n          }\n        },\n\n        topPassed: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopPassed,\n            callbackName = 'topPassed'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top passed', newCallback);\n            settings.onTopPassed = newCallback;\n          }\n          if(calculations.topPassed) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.topPassed;\n          }\n        },\n\n        bottomPassed: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomPassed,\n            callbackName = 'bottomPassed'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom passed', newCallback);\n            settings.onBottomPassed = newCallback;\n          }\n          if(calculations.bottomPassed) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.bottomPassed;\n          }\n        },\n\n        passingReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onPassingReverse,\n            callbackName = 'passingReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for passing reverse', newCallback);\n            settings.onPassingReverse = newCallback;\n          }\n          if(!calculations.passing) {\n            if(module.get.occurred('passing')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return !calculations.passing;\n          }\n        },\n\n\n        topVisibleReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopVisibleReverse,\n            callbackName = 'topVisibleReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top visible reverse', newCallback);\n            settings.onTopVisibleReverse = newCallback;\n          }\n          if(!calculations.topVisible) {\n            if(module.get.occurred('topVisible')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.topVisible;\n          }\n        },\n\n        bottomVisibleReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomVisibleReverse,\n            callbackName = 'bottomVisibleReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom visible reverse', newCallback);\n            settings.onBottomVisibleReverse = newCallback;\n          }\n          if(!calculations.bottomVisible) {\n            if(module.get.occurred('bottomVisible')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.bottomVisible;\n          }\n        },\n\n        topPassedReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopPassedReverse,\n            callbackName = 'topPassedReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top passed reverse', newCallback);\n            settings.onTopPassedReverse = newCallback;\n          }\n          if(!calculations.topPassed) {\n            if(module.get.occurred('topPassed')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.onTopPassed;\n          }\n        },\n\n        bottomPassedReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomPassedReverse,\n            callbackName = 'bottomPassedReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom passed reverse', newCallback);\n            settings.onBottomPassedReverse = newCallback;\n          }\n          if(!calculations.bottomPassed) {\n            if(module.get.occurred('bottomPassed')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.bottomPassed;\n          }\n        },\n\n        execute: function(callback, callbackName) {\n          var\n            calculations = module.get.elementCalculations(),\n            screen       = module.get.screenCalculations()\n          ;\n          callback = callback || false;\n          if(callback) {\n            if(settings.continuous) {\n              module.debug('Callback being called continuously', callbackName, calculations);\n              callback.call(element, calculations, screen);\n            }\n            else if(!module.get.occurred(callbackName)) {\n              module.debug('Conditions met', callbackName, calculations);\n              callback.call(element, calculations, screen);\n            }\n          }\n          module.save.occurred(callbackName);\n        },\n\n        remove: {\n          fixed: function() {\n            module.debug('Removing fixed position');\n            $module\n              .removeClass(className.fixed)\n              .css({\n                position : '',\n                top      : '',\n                left     : '',\n                zIndex   : ''\n              })\n            ;\n            settings.onUnfixed.call(element);\n          },\n          placeholder: function() {\n            module.debug('Removing placeholder content');\n            if($placeholder) {\n              $placeholder.remove();\n            }\n          },\n          occurred: function(callback) {\n            if(callback) {\n              var\n                occurred = module.cache.occurred\n              ;\n              if(occurred[callback] !== undefined && occurred[callback] === true) {\n                module.debug('Callback can now be called again', callback);\n                module.cache.occurred[callback] = false;\n              }\n            }\n            else {\n              module.cache.occurred = {};\n            }\n          }\n        },\n\n        save: {\n          calculations: function() {\n            module.verbose('Saving all calculations necessary to determine positioning');\n            module.save.direction();\n            module.save.screenCalculations();\n            module.save.elementCalculations();\n          },\n          occurred: function(callback) {\n            if(callback) {\n              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\n                module.verbose('Saving callback occurred', callback);\n                module.cache.occurred[callback] = true;\n              }\n            }\n          },\n          scroll: function(scrollPosition) {\n            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\n            module.cache.scroll = scrollPosition;\n          },\n          direction: function() {\n            var\n              scroll     = module.get.scroll(),\n              lastScroll = module.get.lastScroll(),\n              direction\n            ;\n            if(scroll > lastScroll && lastScroll) {\n              direction = 'down';\n            }\n            else if(scroll < lastScroll && lastScroll) {\n              direction = 'up';\n            }\n            else {\n              direction = 'static';\n            }\n            module.cache.direction = direction;\n            return module.cache.direction;\n          },\n          elementPosition: function() {\n            var\n              element = module.cache.element,\n              screen  = module.get.screenSize()\n            ;\n            module.verbose('Saving element position');\n            // (quicker than $.extend)\n            element.fits          = (element.height < screen.height);\n            element.offset        = $module.offset();\n            element.width         = $module.outerWidth();\n            element.height        = $module.outerHeight();\n            // compensate for scroll in context\n            if(module.is.verticallyScrollableContext()) {\n              element.offset.top += $context.scrollTop() - $context.offset().top;\n            }\n            if(module.is.horizontallyScrollableContext()) {\n              element.offset.left += $context.scrollLeft - $context.offset().left;\n            }\n            // store\n            module.cache.element = element;\n            return element;\n          },\n          elementCalculations: function() {\n            var\n              screen     = module.get.screenCalculations(),\n              element    = module.get.elementPosition()\n            ;\n            // offset\n            if(settings.includeMargin) {\n              element.margin        = {};\n              element.margin.top    = parseInt($module.css('margin-top'), 10);\n              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\n              element.top    = element.offset.top - element.margin.top;\n              element.bottom = element.offset.top + element.height + element.margin.bottom;\n            }\n            else {\n              element.top    = element.offset.top;\n              element.bottom = element.offset.top + element.height;\n            }\n\n            // visibility\n            element.topPassed        = (screen.top >= element.top);\n            element.bottomPassed     = (screen.top >= element.bottom);\n            element.topVisible       = (screen.bottom >= element.top) && !element.bottomPassed;\n            element.bottomVisible    = (screen.bottom >= element.bottom) && !element.topPassed;\n            element.pixelsPassed     = 0;\n            element.percentagePassed = 0;\n\n            // meta calculations\n            element.onScreen  = (element.topVisible && !element.bottomPassed);\n            element.passing   = (element.topPassed && !element.bottomPassed);\n            element.offScreen = (!element.onScreen);\n\n            // passing calculations\n            if(element.passing) {\n              element.pixelsPassed     = (screen.top - element.top);\n              element.percentagePassed = (screen.top - element.top) / element.height;\n            }\n            module.cache.element = element;\n            module.verbose('Updated element calculations', element);\n            return element;\n          },\n          screenCalculations: function() {\n            var\n              scroll = module.get.scroll()\n            ;\n            module.save.direction();\n            module.cache.screen.top    = scroll;\n            module.cache.screen.bottom = scroll + module.cache.screen.height;\n            return module.cache.screen;\n          },\n          screenSize: function() {\n            module.verbose('Saving window position');\n            module.cache.screen = {\n              height: $context.height()\n            };\n          },\n          position: function() {\n            module.save.screenSize();\n            module.save.elementPosition();\n          }\n        },\n\n        get: {\n          pixelsPassed: function(amount) {\n            var\n              element = module.get.elementCalculations()\n            ;\n            if(amount.search('%') > -1) {\n              return ( element.height * (parseInt(amount, 10) / 100) );\n            }\n            return parseInt(amount, 10);\n          },\n          occurred: function(callback) {\n            return (module.cache.occurred !== undefined)\n              ? module.cache.occurred[callback] || false\n              : false\n            ;\n          },\n          direction: function() {\n            if(module.cache.direction === undefined) {\n              module.save.direction();\n            }\n            return module.cache.direction;\n          },\n          elementPosition: function() {\n            if(module.cache.element === undefined) {\n              module.save.elementPosition();\n            }\n            return module.cache.element;\n          },\n          elementCalculations: function() {\n            if(module.cache.element === undefined) {\n              module.save.elementCalculations();\n            }\n            return module.cache.element;\n          },\n          screenCalculations: function() {\n            if(module.cache.screen === undefined) {\n              module.save.screenCalculations();\n            }\n            return module.cache.screen;\n          },\n          screenSize: function() {\n            if(module.cache.screen === undefined) {\n              module.save.screenSize();\n            }\n            return module.cache.screen;\n          },\n          scroll: function() {\n            if(module.cache.scroll === undefined) {\n              module.save.scroll();\n            }\n            return module.cache.scroll;\n          },\n          lastScroll: function() {\n            if(module.cache.screen === undefined) {\n              module.debug('First scroll event, no last scroll could be found');\n              return false;\n            }\n            return module.cache.screen.top;\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        instance.save.scroll();\n        instance.save.calculations();\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.visibility.settings = {\n\n  name                   : 'Visibility',\n  namespace              : 'visibility',\n\n  debug                  : false,\n  verbose                : false,\n  performance            : true,\n\n  // whether to use mutation observers to follow changes\n  observeChanges         : true,\n\n  // check position immediately on init\n  initialCheck           : true,\n\n  // whether to refresh calculations after all page images load\n  refreshOnLoad          : true,\n\n  // whether to refresh calculations after page resize event\n  refreshOnResize        : true,\n\n  // should call callbacks on refresh event (resize, etc)\n  checkOnRefresh         : true,\n\n  // callback should only occur one time\n  once                   : true,\n\n  // callback should fire continuously whe evaluates to true\n  continuous             : false,\n\n  // offset to use with scroll top\n  offset                 : 0,\n\n  // whether to include margin in elements position\n  includeMargin          : false,\n\n  // scroll context for visibility checks\n  context                : window,\n\n  // visibility check delay in ms (defaults to animationFrame)\n  throttle               : false,\n\n  // special visibility type (image, fixed)\n  type                   : false,\n\n  // z-index to use with visibility 'fixed'\n  zIndex                 : '10',\n\n  // image only animation settings\n  transition             : 'fade in',\n  duration               : 1000,\n\n  // array of callbacks for percentage\n  onPassed               : {},\n\n  // standard callbacks\n  onOnScreen             : false,\n  onOffScreen            : false,\n  onPassing              : false,\n  onTopVisible           : false,\n  onBottomVisible        : false,\n  onTopPassed            : false,\n  onBottomPassed         : false,\n\n  // reverse callbacks\n  onPassingReverse       : false,\n  onTopVisibleReverse    : false,\n  onBottomVisibleReverse : false,\n  onTopPassedReverse     : false,\n  onBottomPassedReverse  : false,\n\n  // special callbacks for image\n  onLoad                 : function() {},\n  onAllLoaded            : function() {},\n\n  // special callbacks for fixed position\n  onFixed                : function() {},\n  onUnfixed              : function() {},\n\n  // utility callbacks\n  onUpdate               : false, // disabled by default for performance\n  onRefresh              : function(){},\n\n  metadata : {\n    src: 'src'\n  },\n\n  className: {\n    fixed       : 'fixed',\n    placeholder : 'placeholder',\n    visible     : 'visible'\n  },\n\n  error : {\n    method  : 'The method you called is not defined.',\n    visible : 'Element is hidden, you must call refresh after element becomes visible'\n  }\n\n};\n\n})( jQuery, window, document );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./semantic/dist/semantic.js\n// module id = 9\n// module chunks = 1"],"sourceRoot":""}